{"version":3,"file":"lod.fragment-C6sl9DjL.js","sources":["../../node_modules/@babylonjs/core/ShadersWGSL/lod.fragment.js"],"sourcesContent":["// Do not edit.\nimport { ShaderStore } from \"../Engines/shaderStore.js\";\nconst name = \"lodPixelShader\";\nconst shader = `const GammaEncodePowerApprox=1.0/2.2;varying vUV: vec2f;var textureSamplerSampler: sampler;var textureSampler: texture_2d<f32>;uniform lod: f32;uniform gamma: i32;@fragment\nfn main(input: FragmentInputs)->FragmentOutputs {fragmentOutputs.color=textureSampleLevel(textureSampler,textureSamplerSampler,fragmentInputs.vUV,uniforms.lod);if (uniforms.gamma==0) {fragmentOutputs.color=vec4f(pow(fragmentOutputs.color.rgb,vec3f(GammaEncodePowerApprox)),fragmentOutputs.color.a);}}\n`;\n// Sideeffect\nif (!ShaderStore.ShadersStoreWGSL[name]) {\n    ShaderStore.ShadersStoreWGSL[name] = shader;\n}\n/** @internal */\nexport const lodPixelShaderWGSL = { name, shader };\n//# sourceMappingURL=lod.fragment.js.map"],"names":["name","shader","ShaderStore","lodPixelShaderWGSL"],"mappings":"2IAEA,MAAMA,EAAO,iBACPC,EAAS;AAAA;AAAA,EAIVC,EAAY,iBAAiBF,CAAI,IAClCE,EAAY,iBAAiBF,CAAI,EAAIC,GAG7B,MAACE,EAAqB,CAAE,KAAAH,EAAM,OAAAC,CAAM","x_google_ignoreList":[0]}