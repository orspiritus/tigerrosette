const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/nativeXRFrame-DgHx7Vcb.js","assets/pointsCloudSystem-2vcS-S4d.js","assets/index-rhFFGTpy.js","assets/motion-3WHHzQTP.js","assets/vendor-CIP6LD3P.js","assets/index-DdXHf9oj.css","assets/bumpVertex-CO1be_N_.js","assets/vertexColorMixing-CmRbdHdF.js","assets/helperFunctions-Dt8Ez0m5.js","assets/default.fragment-B-kdUbSd.js","assets/defaultUboDeclaration-C5WGJzzr.js","assets/oitFragment-COwarqmx.js","assets/mainUVVaryingDeclaration-kAMx1wwy.js","assets/easing-CYNgw8CS.js","assets/animationGroup-CmNY7dur.js","assets/dds-C64e2J1b.js","assets/khronosTextureContainer2-DKf4UHYP.js","assets/flowGraphSetDelayBlock-BBfSTBoS.js","assets/oitFragment-C1qnXpVq.js","assets/default.fragment-CtvPXGlm.js","assets/defaultUboDeclaration-mfzMqo_r.js","assets/mainUVVaryingDeclaration-BftUusui.js","assets/pbr.fragment-CxtSokwZ.js","assets/harmonicsFunctions-BiMv5FUV.js","assets/pbr.fragment-jox_Wzt1.js","assets/harmonicsFunctions-C2rlzhtf.js","assets/hdr-6elhj4O4.js","assets/tga-BWmadVoa.js","assets/default.vertex-kA04vKVP.js","assets/postprocess.vertex-DIr9NoBj.js","assets/pass.fragment-B8b0gssu.js","assets/pass.fragment-D7l-dmRx.js"])))=>i.map(i=>d[i]);
import{A as ts,V as d,E as Qe,b as Bt,c as se,O as W,d as Ht,R as Pt,T as K,e as ss,D as is,M as R,Q as M,f as ie,g as lt,h as c,i as as,j as Ke,k as At,l as Te,m as Ee,n as rs,o as Ct,U as ns,p as E,_ as os,C as O,S as J,q as fe,r as $e,L as D,s as Je,a as Me,t as je,u as hs,v as ut,I as ls,w as at,x as cs,y as Ut,z as _e,B as st,W as ds,F as me,G as us,H as _s,J as Rt,K as ps,N as gs,X as Ge,Y as ms,Z as fs,$ as bs,a0 as xs,a1 as Ps,a2 as ys,a3 as Ts,P as be,a4 as Ss,a5 as Ms,a6 as rt,a7 as et,a8 as vs,a9 as ft,aa as Bs,ab as As,ac as j,ad as Cs,ae as Rs,af as le,ag as jt,ah as Ds,ai as ws,aj as bt,ak as Dt,al as Is,am as wt,an as Es,ao as Fs,ap as Os}from"./pointsCloudSystem-2vcS-S4d.js";import{g3 as _r,aq as pr,az as gr,ar as mr,cx as fr,cv as br,bh as xr,go as Pr,ex as yr,ef as Tr,ay as Sr,cH as Mr,f6 as vr,eg as Br,aP as Ar,aC as Cr,fc as Rr,aD as Dr,aE as wr,fe as Ir,fl as Er,aR as Fr,g0 as Or,d4 as Gr,ee as kr,dG as Vr,dx as zr,dI as Lr,dH as Nr,dJ as Wr,dw as Hr,dC as Ur,dE as jr,aH as Qr,aI as Xr,aW as qr,aX as Zr,g7 as Yr,cO as Kr,b3 as $r,br as Jr,e7 as en,aO as tn,fO as sn,aQ as an,eP as rn,bC as nn,eR as on,b6 as hn,b8 as ln,b9 as cn,b7 as dn,eQ as un,f5 as _n,eY as pn,d5 as gn,ej as mn,fH as fn,fI as bn,fB as xn,fC as Pn,fi as yn,gp as Tn,bO as Sn,bp as Mn,bq as vn,bi as Bn,cr as An,fT as Cn,eo as Rn,bm as Dn,bl as wn,ew as In,cP as En,fF as Fn,aL as On,eX as Gn,g1 as kn,bP as Vn,eZ as zn,bF as Ln,bH as Nn,fD as Wn,fr as Hn,e5 as Un,bR as jn,cl as Qn,cj as Xn,bS as qn,ch as Zn,cg as Yn,ce as Kn,cf as $n,ci as Jn,bV as eo,bU as to,cn as so,cm as io,co as ao,cp as ro,bT as no,bQ as oo,bW as ho,aY as lo,aZ as co,aS as uo,aT as _o,aU as po,aV as go,f8 as mo,ec as fo,f$ as bo,dv as xo,ev as Po,fL as yo,fM as To,fN as So,ep as Mo,e0 as vo,fg as Bo,fh as Ao,fS as Co,eN as Ro,fk as Do,g4 as wo,aM as Io,ck as Eo,dN as Fo,bB as Oo,bf as Go,bg as ko,cy as Vo,cw as zo,cD as Lo,f9 as No,aJ as Wo,aK as Ho,aN as Uo,dM as jo,cs as Qo,cQ as Xo,cL as qo,cE as Zo,aB as Yo,d6 as Ko,a$ as $o,fz as Jo,fR as eh,fy as th,fQ as sh,fP as ih,aA as ah,bI as rh,bJ as nh,bK as oh,cJ as hh,fw as lh,fo as ch,fu as dh,ft as uh,cF as _h,cW as ph,cY as gh,cZ as mh,cR as fh,du as bh,dc as xh,e1 as Ph,c_ as yh,dq as Th,d0 as Sh,d1 as Mh,et as vh,en as Bh,g5 as Ah,bd as Ch,be as Rh,bk as Dh,g6 as wh,gk as Ih,e_ as Eh,ed as Fh,c$ as Oh,cX as Gh,eb as kh,fJ as Vh,cz as zh,gc as Lh,gb as Nh,eh as Wh,ei as Hh,e$ as Uh,bb as jh,ba as Qh,bc as Xh,b4 as qh,a_ as Zh,g9 as Yh,ct as Kh,bN as $h,bL as Jh,bM as el,bj as tl,ga as sl,g8 as il,gd as al,dF as rl,dK as nl,dL as ol,dA as hl,dz as ll,dy as cl,dV as dl,dU as ul,dS as _l,dZ as pl,dR as gl,dQ as ml,dP as fl,dD as bl,dO as xl,dT as Pl,dW as yl,dX as Tl,dY as Sl,d_ as Ml,d$ as vl,dB as Bl,d2 as Al,bs as Cl,fm as Rl,da as Dl,b5 as wl,fv as Il,fq as El,ff as Fl,dr as Ol,cB as Gl,gh as kl,gi as Vl,gj as zl,fx as Ll,fp as Nl,bE as Wl,bG as Hl,bD as Ul,fn as jl,bX as Ql,bY as Xl,b$ as ql,c6 as Zl,c7 as Yl,c9 as Kl,c3 as $l,c4 as Jl,c5 as ec,b_ as tc,c8 as sc,bZ as ic,c0 as ac,c1 as rc,c2 as nc,f0 as oc,g2 as hc,e2 as lc,gm as cc,cA as dc,cN as uc,gl as _c,fs as pc,by as gc,cq as mc,ek as fc,f1 as bc,f2 as xc,aF as Pc,aG as yc,e6 as Tc,el as Sc,em as Mc,cu as vc,gn as Bc,d3 as Ac,fG as Cc,gq as Rc,gr as Dc,f3 as wc,fK as Ic,bo as Ec,f4 as Fc,fA as Oc,db as Gc,fa as kc,bt as Vc,gf as zc,ge as Lc,e8 as Nc,e9 as Wc,f7 as Hc,ea as Uc,dt as jc,ds as Qc,eS as Xc,eV as qc,eU as Zc,eT as Yc,es as Kc,bx as $c,eu as Jc,bw as ed,bv as td,fd as sd,bn as id,bA as ad,bz as rd,eq as nd,d9 as od,er as hd,b0 as ld,eW as cd,fE as dd,aw as ud,ax as _d,as as pd,av as gd,au as md,at as fd,cS as bd,bu as xd,cI as Pd,cV as yd,fb as Td,di as Sd,dj as Md,df as vd,de as Bd,dk as Ad,dl as Cd,dh as Rd,dg as Dd,fV as wd,fj as Id,ey as Ed,e4 as Fd,e3 as Od,dn as Gd,dm as kd,dp as Vd,cc as zd,cd as Ld,cb as Nd,ca as Wd,dd as Hd,cM as Ud,fU as jd,cK as Qd,cG as Xd,f_ as qd,fZ as Zd,eM as Yd,eO as Kd,gg as $d,cU as Jd,cT as eu,cC as tu,d7 as su,fW as iu,fY as au,fX as ru,ez as nu,eL as ou,eB as hu,eH as lu,eG as cu,eC as du,eI as uu,eK as _u,eF as pu,eJ as gu,eA as mu,eD as fu,eE as bu,b2 as xu,d8 as Pu,b1 as yu}from"./pointsCloudSystem-2vcS-S4d.js";import{A as Gs,_ as ks,a as It,b as ct,U as Vs,C as zs,S as _t,c as Ae,d as xt,e as Se,f as ye,g as Ls,h as Ns,i as Ws,M as pt,j as re,W as Et,k as gt,l as Hs,m as nt,n as Ft,B as Us,o as Oe,I as ot,p as js,q as Qs,N as mt,T as Xs,r as qs,F as Zs,V as Ys,s as Ks,t as Ot,P as $s,u as Js,R as ei,v as ti,w as He,x as Qt,y as Xt,z as qt,D as ht,E as si,H as ae,J as Ze,K as ii}from"./nativeXRFrame-DgHx7Vcb.js";import{lf as Su,aq as Mu,af as vu,ah as Bu,ai as Au,at as Cu,av as Ru,ay as Du,cD as wu,L as Iu,O as Eu,gg as Fu,b$ as Ou,kX as Gu,kY as ku,kh as Vu,mB as zu,be as Lu,bf as Nu,bg as Wu,n3 as Hu,bh as Uu,gb as ju,lj as Qu,ae as Xu,ad as qu,ac as Zu,g$ as Yu,bb as Ku,b5 as $u,aR as Ju,b6 as e_,aS as t_,aT as s_,aU as i_,aV as a_,gI as r_,eS as n_,le as o_,lr as h_,lg as l_,aj as c_,ag as d_,ca as u_,aH as __,eW as p_,eX as g_,aG as m_,aQ as f_,m6 as b_,hg as x_,ll as P_,n4 as y_,cf as T_,cg as S_,n5 as M_,n6 as v_,n7 as B_,aO as A_,aP as C_,fF as R_,kB as D_,kA as w_,aI as I_,kz as E_,oF as F_,jF as O_,ia as G_,m7 as k_,c4 as V_,bT as z_,bU as L_,hT as N_,jp as W_,e8 as H_,mA as U_,cq as j_,cr as Q_,jM as X_,j8 as q_,eI as Z_,mW as Y_,n8 as K_,n9 as $_,gi as J_,k3 as ep,h1 as tp,ga as sp,cH as ip,cI as ap,hc as rp,bw as np,lR as op,hn as hp,na as lp,lQ as cp,f6 as dp,gq as up,gs as _p,ce as pp,a6 as gp,c2 as mp,c8 as fp,jh as bp,jg as xp,b3 as Pp,b4 as yp,bO as Tp,bD as Sp,k5 as Mp,cl as vp,mj as Bp,Q as Ap,jZ as Cp,jY as Rp,hb as Dp,ha as wp,m9 as Ip,m8 as Ep,lh as Fp,m0 as Op,nb as Gp,m1 as kp,i8 as Vp,j7 as zp,ip as Lp,iA as Np,iy as Wp,j2 as Hp,ie as Up,i$ as jp,j1 as Qp,j0 as Xp,je as qp,jd as Zp,iT as Yp,iV as Kp,iS as $p,iQ as Jp,im as eg,j5 as tg,j4 as sg,iJ as ig,iz as ag,ix as rg,iL as ng,iD as og,iC as hg,iZ as lg,ii as cg,ih as dg,lJ as ug,lK as _g,lM as pg,lN as gg,lL as mg,i9 as fg,ik as bg,ja as xg,j9 as Pg,ic as yg,ib as Tg,iU as Sg,iR as Mg,iO as vg,iN as Bg,is as Ag,iv as Cg,iu as Rg,ir as Dg,iX as wg,gj as Ig,lo as Eg,cd as Fg,g7 as Og,hm as Gg,hl as kg,gk as Vg,lz as zg,mg as Lg,jL as Ng,iq as Wg,mb as Hg,ma as Ug,lW as jg,m5 as Qg,kq as Xg,bJ as qg,bI as Zg,j3 as Yg,hy as Kg,hx as $g,bx as Jg,eU as em,no as tm,nc as sm,ne as im,nd as am,nf as rm,oI as nm,oJ as om,lV as hm,oG as lm,oH as cm,fO as dm,gY as um,cs as _m,b7 as pm,jN as gm,ig as mm,fM as fm,ng as bm,gD as xm,mw as Pm,gv as ym,a5 as Tm,gl as Sm,hR as Mm,hS as vm,e4 as Bm,e1 as Am,e2 as Cm,e3 as Rm,l$ as Dm,f7 as wm,oK as Im,ee as Em,ef as Fm,he as Om,bM as Gm,e9 as km,f8 as Vm,lq as zm,ct as Lm,a7 as Nm,f9 as Wm,nh as Hm,iE as Um,iG as jm,iH as Qm,lS as Xm,bS as qm,c0 as Zm,ni as Ym,cJ as Km,oU as $m,oT as Jm,oY as ef,oV as tf,oX as sf,oW as af,oZ as rf,b8 as nf,b9 as of,aW as hf,aX as lf,g2 as cf,ba as df,bc as uf,aY as _f,aZ as pf,a_ as gf,fP as mf,fV as ff,fJ as bf,dN as xf,dq as Pf,dr as yf,ds as Tf,dt as Sf,dG as Mf,du as vf,dv as Bf,dC as Af,dO as Cf,dD as Rf,dE as Df,dH as wf,dj as If,dw as Ef,dp as Ff,dx as Of,dF as Gf,dI as kf,dm as Vf,dn as zf,dJ as Lf,dk as Nf,dz as Wf,dy as Hf,dA as Uf,dP as jf,dl as Qf,dQ as Xf,dB as qf,dK as Zf,dL as Yf,dR as Kf,dS as $f,dM as Jf,aJ as eb,a$ as tb,b0 as sb,b1 as ib,gA as ab,f0 as rb,cc as nb,fN as ob,nj as hb,pi as lb,pj as cb,mk as db,by as ub,dW as _b,bd as pb,dY as gb,dZ as mb,dX as fb,i6 as bb,kC as xb,oM as Pb,kJ as yb,k2 as Tb,kK as Sb,kM as Mb,kL as vb,kN as Bb,kQ as Ab,kR as Cb,kW as Rb,kV as Db,k4 as wb,kr as Ib,jD as Eb,kU as Fb,kS as Ob,kD as Gb,kH as kb,kE as Vb,jB as zb,jC as Lb,kO as Nb,kI as Wb,kP as Hb,kT as Ub,kG as jb,kF as Qb,kx as Xb,ky as qb,kc as Zb,kb as Yb,ka as Kb,jf as $b,e5 as Jb,e6 as ex,G as tx,hV as sx,gQ as ix,gP as ax,lT as rx,nk as nx,jo as ox,hG as hx,jj as lx,jb as cx,hF as dx,hE as ux,hD as _x,jc as px,hA as gx,jn as mx,jm as fx,jk as bx,jl as xx,hC as Px,m2 as yx,hB as Tx,jJ as Sx,iW as Mx,hU as vx,fb as Bx,lp as Ax,fa as Cx,hN as Rx,aN as Dx,aL as wx,aM as Ix,aK as Ex,q$ as Fx,lv as Ox,fU as Gx,io as kx,mc as Vx,eg as zx,mz as Lx,my as Nx,fc as Wx,qX as Hx,oN as Ux,oO as jx,jH as Qx,j6 as Xx,lm as qx,fK as Zx,nl as Yx,g9 as Kx,a2 as $x,ci as Jx,jr as eP,lP as tP,hY as sP,fG as iP,km as aP,kn as rP,kk as nP,kj as oP,kl as hP,ko as lP,kp as cP,ab as dP,h4 as uP,jq as _P,lG as pP,iK as gP,i7 as mP,k9 as fP,eh as bP,ei as xP,gE as PP,eB as yP,eC as TP,eD as SP,ly as MP,gu as vP,g3 as BP,e7 as AP,fI as CP,oL as RP,iB as DP,hX as wP,cn as IP,ho as EP,ak as FP,bV as OP,jX as GP,kt as kP,ks as VP,hz as zP,f1 as LP,hw as NP,jW as WP,jV as HP,h9 as UP,ku as jP,hh as QP,hr as XP,hi as qP,gB as ZP,k1 as YP,lC as KP,li as $P,hk as JP,hj as ey,jG as ty,hH as sy,hI as iy,mh as ay,gC as ry,lU as ny,c1 as oy,fd as hy,h8 as ly,fH as cy,nm as dy,mx as uy,ls as _y,gf as py,gR as gy,bP as my,cF as fy,ru as by,rs as xy,rr as Py,rt as yy,gF as Ty,jt as Sy,ju as My,jz as vy,jy as By,jx as Ay,jv as Cy,jw as Ry,jA as Dy,fE as wy,fC as Iy,fx as Ey,fw as Fy,fv as Oy,fB as Gy,fz as ky,fy as Vy,fA as zy,ht as Ly,fD as Ny,gd as Wy,ge as Hy,cK as Uy,cZ as jy,c_ as Qy,cL as Xy,cO as qy,c$ as Zy,d0 as Yy,cN as Ky,d8 as $y,d1 as Jy,d2 as eT,dg as tT,cM as sT,cP as iT,cQ as aT,dh as rT,cR as nT,d3 as oT,cS as hT,cT as lT,d4 as cT,di as dT,d9 as uT,cX as _T,cY as pT,cU as gT,da as mT,cV as fT,d6 as bT,d5 as xT,cW as PT,d7 as yT,db as TT,dc as ST,de as MT,df as vT,dd as BT,k0 as AT,fg as CT,gU as RT,gn as DT,k7 as wT,jO as IT,bF as ET,bG as FT,bH as OT,mC as GT,br as kT,gy as VT,oS as zT,f2 as LT,gZ as NT,f3 as WT,f4 as HT,ml as UT,h7 as jT,mm as QT,h6 as XT,mn as qT,h5 as ZT,lA as YT,l_ as KT,fL as $T,ea as JT,mV as eS,mX as tS,mP as sS,mO as iS,mS as aS,mQ as rS,mu as nS,mD as oS,mT as hS,mY as lS,mv as cS,mN as dS,mU as uS,mZ as _S,n0 as pS,n2 as gS,mH as mS,mF as fS,mK as bS,mI as xS,mG as PS,mM as yS,mL as TS,mJ as SS,mE as MS,mR as vS,m_ as BS,n1 as AS,m$ as CS,c9 as RS,lI as DS,jE as wS,iM as IS,a3 as ES,a9 as FS,jP as OS,md as GS,i2 as kS,iF as VS,i3 as zS,i_ as LS,i5 as NS,nE as WS,nF as HS,lx as US,gM as jS,gG as QS,bR as XS,fX as qS,oP as ZS,oQ as YS,gc as KS,Y as $S,cb as JS,fh as eM,hu as tM,i0 as sM,cp as iM,ph as aM,j$ as rM,j_ as nM,gH as oM,gK as hM,eT as lM,gW as cM,h0 as dM,g5 as uM,g6 as _M,pg as pM,lZ as gM,gX as mM,h2 as fM,nn as bM,cE as xM,gm as PM,cm as yM,lB as TM,gL as SM,ij as MM,gV as vM,kd as BM,ke as AM,kf as CM,np as RM,nq as DM,ns as wM,c5 as IM,gh as EM,kg as FM,g8 as OM,lt as GM,lE as kM,lD as VM,fQ as zM,fR as LM,nP as NM,nO as WM,lO as HM,jT as UM,k8 as jM,jR as QM,a8 as XM,jQ as qM,a0 as ZM,jU as YM,jS as KM,a1 as $M,cG as JM,f5 as ev,c3 as tv,eJ as sv,fW as iv,lw as av,iI as rv,nG as nv,g_ as ov,gT as hv,i1 as lv,h_ as cv,hZ as dv,h$ as uv,bK as _v,gJ as pv,az as gv,aA as mv,jI as fv,il as bv,mf as xv,me as Pv,qs as yv,qu as Tv,qt as Sv,qv as Mv,nr as vv,Z as Bv,al as Av,am as Cv,ch as Rv,gx as Dv,bi as wv,bj as Iv,bk as Ev,nI as Fv,nH as Ov,bl as Gv,dV as kv,a4 as Vv,aa as zv,hp as Lv,c7 as Nv,hq as Wv,co as Hv,an as Uv,mp as jv,mo as Qv,h3 as Xv,oR as qv,js as Zv,kZ as Yv,gw as Kv,$ as $v,nt as Jv,fT as eB,kv as tB,kw as sB,lk as iB,bZ as aB,ln as rB,g4 as nB,bW as oB,b_ as hB,lu as lB,fe as cB,ff as dB,c6 as uB,bX as _B,bY as pB,nQ as gB,nR as mB,nS as fB,nT as bB,nU as xB,nV as PB,nX as yB,nW as TB,ek as SB,nY as MB,ej as vB,el as BB,em as AB,id as CB,iP as RB,nK as DB,nJ as wB,jK as IB,it as EB,iw as FB,b2 as OB,hW as GB,lX as kB,lY as VB,bE as zB,ki as LB,hf as NB,gp as WB,go as HB,iY as UB,fS as jB,bn as QB,bo as XB,bp as qB,bq as ZB,nM as YB,bs as KB,nN as $B,bQ as JB,X as eA,hO as tA,hP as sA,hQ as iA,k6 as aA,gr as rA,gt as nA,cj as oA,ck as hA,ec as lA,lF as cA,fi as dA,gz as uA,lH as _A,bm as pA,nL as gA,hd as mA,gO as fA,gN as bA,mi as xA,cw as PA,cu as yA,cv as TA,cx as SA,ji as MA,cy as vA,cz as BA,cA as AA,cB as CA,cC as RA,qQ as DA,ri as wA,qS as IA,qU as EA,qA as FA,rj as OA,r8 as GA,qY as kA,qW as VA,qN as zA,qM as LA,rd as NA,r7 as WA,qD as HA,qB as UA,qC as jA,qE as QA,ra as XA,qO as qA,q_ as ZA,qP as YA,rk as KA,rl as $A,rp as JA,r1 as eC,r0 as tC,r2 as sC,qZ as iC,qR as aC,r4 as rC,qF as nC,qG as oC,rv as hC,rc as lC,r9 as cC,qI as dC,qH as uC,r3 as _C,rm as pC,rn as gC,qV as mC,r5 as fC,r6 as bC,ro as xC,qT as PC,rq as yC,rh as TC,qL as SC,rg as MC,rf as vC,qJ as BC,qK as AC,rb as CC,gS as RC,re as DC,d_ as wC,d$ as IC,e0 as EC,ao as FC,eV as OC,ap as GC,as as kC,ax as VC,bL as zC,i4 as LC,ar as NC,au as WC,aw as HC,ed as UC,aB as jC,aC as QC,aD as XC,aE as qC,aF as ZC,eb as YC,bN as KC,op as $C,oq as JC,dT as eR,dU as tR,e$ as sR,eZ as iR,e_ as aR,eY as rR,pk as nR,po as oR,pl as hR,pp as lR,on as cR,oo as dR,of as uR,og as _R,pA as pR,pC as gR,pB as mR,pD as fR,o9 as bR,oa as xR,od as PR,oe as yR,ot as TR,ou as SR,k_ as MR,l0 as vR,k$ as BR,l1 as AR,or as CR,os as RR,pM as DR,pN as wR,m3 as IR,m4 as ER,eQ as FR,eM as OR,ob as GR,oc as kR,ps as VR,pu as zR,pt as LR,pv as NR,oB as WR,oC as HR,hv as UR,oh as jR,oi as QR,ox as XR,oy as qR,p4 as ZR,pd as YR,o$ as KR,p8 as $R,o_ as JR,p7 as e0,p3 as t0,pc as s0,p2 as i0,pb as a0,p1 as r0,pa as n0,p0 as o0,p9 as h0,p6 as l0,pf as c0,p5 as d0,pe as u0,oj as _0,ol as p0,ok as g0,om as m0,hs as f0,pw as b0,py as x0,px as P0,pz as y0,fk as T0,et as S0,ew as M0,en as v0,ep as B0,eo as A0,eq as C0,er as R0,eu as D0,es as w0,ev as I0,o7 as E0,o8 as F0,hJ as O0,hL as G0,hK as k0,hM as V0,fo as z0,fq as L0,fn as N0,fp as W0,fs as H0,fu as U0,fr as j0,ft as Q0,oz as X0,oA as q0,q9 as Z0,q8 as Y0,q3 as K0,q2 as $0,q5 as J0,q4 as eD,pZ as tD,pY as sD,p_ as iD,p$ as aD,q7 as rD,q6 as nD,qb as oD,qa as hD,pV as lD,pU as cD,pQ as dD,pR as uD,q0 as _D,q1 as pD,pT as gD,pS as mD,pO as fD,pP as bD,pW as xD,pX as PD,qc as yD,qd as TD,qi as SD,qj as MD,qe as vD,qg as BD,qf as AD,qh as CD,ql as RD,qn as DD,qk as wD,qm as ID,o4 as ED,o3 as FD,nZ as OD,n$ as GD,n_ as kD,o0 as VD,ex as zD,ez as LD,ey as ND,eA as WD,eE as HD,eG as UD,eF as jD,eH as QD,pE as XD,pG as qD,pF as ZD,pH as YD,l6 as KD,lc as $D,l7 as JD,ld as ew,l5 as tw,lb as sw,l4 as iw,la as aw,l3 as rw,l9 as nw,l2 as ow,l8 as hw,ov as lw,ow as cw,qo as dw,qq as uw,qp as _w,qr as pw,pI as gw,pK as mw,pJ as fw,pL as bw,g0 as xw,fZ as Pw,mq as yw,ms as Tw,mr as Sw,mt as Mw,bz as vw,bB as Bw,bA as Aw,bC as Cw,fm as Rw,fl as Dw,pn as ww,pr as Iw,pm as Ew,pq as Fw,nA as Ow,nD as Gw,nz as kw,nC as Vw,ny as zw,nB as Lw,bt as Nw,bu as Ww,bv as Hw,g1 as Uw,eR as jw,eN as Qw,f_ as Xw,eO as qw,eK as Zw,f$ as Yw,fY as Kw,eP as $w,eL as Jw,o5 as eI,o6 as tI,qw as sI,qy as iI,qx as aI,qz as rI,nu as nI,nw as oI,nv as hI,nx as lI,fj as cI,oD as dI,oE as uI,o1 as _I,o2 as pI}from"./nativeXRFrame-DgHx7Vcb.js";import{a as mI,A as fI,c as bI,R as xI,b as PI,T as yI}from"./animationGroup-CmNY7dur.js";import{B as SI,g as MI,a as vI,C as BI,b as AI,E as CI,c as RI,d as DI,P as wI,Q as II,e as EI,f as FI,S as OI}from"./easing-CYNgw8CS.js";import{D as ai}from"./dataReader-DPhJthB_.js";import{A as kI,k as VI,G as zI,a as LI,e as NI,P as WI,c as HI,b as UI,f as jI,d as QI,g as XI,h as qI,R as ZI,W as YI,i as KI,j as $I}from"./dataReader-DPhJthB_.js";import{_ as S}from"./index-rhFFGTpy.js";import{a as eE,F as tE}from"./flowGraphJsonPointerParserBlock-CAnLRrmw.js";import{FlowGraphConsoleLogBlock as iE}from"./flowGraphConsoleLogBlock-5lumJm4F.js";import{FlowGraphBranchBlock as rE}from"./flowGraphBranchBlock-peq7SHeE.js";import{FlowGraphDoNBlock as oE}from"./flowGraphDoNBlock-Cw0MCZY_.js";import{FlowGraphForLoopBlock as lE}from"./flowGraphForLoopBlock-DFb4jPHE.js";import{FlowGraphThrottleBlock as dE}from"./flowGraphThrottleBlock-DSWZx77Z.js";import{FlowGraphMultiGateBlock as _E}from"./flowGraphMultiGateBlock-CFHMOiDs.js";import{FlowGraphSwitchBlock as gE}from"./flowGraphSwitchBlock-C1_GlPCW.js";import{FlowGraphWaitAllBlock as fE}from"./flowGraphWaitAllBlock-DaOfx9s5.js";import{FlowGraphCallCounterBlock as xE}from"./flowGraphCounterBlock-C3E0kQJV.js";import{FlowGraphWhileLoopBlock as yE}from"./flowGraphWhileLoopBlock-CrKmMf0V.js";import{FlowGraphDebounceBlock as SE}from"./flowGraphDebounceBlock-BD27J6wA.js";import{FlowGraphFlipFlopBlock as vE}from"./flowGraphFlipFlopBlock-BeUAb8kC.js";import{FlowGraphSequenceBlock as AE}from"./flowGraphSequenceBlock-CAUFTA3B.js";import{A as RE,F as DE,T as wE,s as IE}from"./flowGraphSetDelayBlock-BBfSTBoS.js";import{FlowGraphCancelDelayBlock as FE}from"./flowGraphCancelDelayBlock-BDMNcw84.js";import{FlowGraphPlayAnimationBlock as GE}from"./flowGraphPlayAnimationBlock-Bn5vAf3k.js";import{FlowGraphStopAnimationBlock as VE}from"./flowGraphStopAnimationBlock-BFnaBB8T.js";import{FlowGraphPauseAnimationBlock as LE}from"./flowGraphPauseAnimationBlock-CGPBCzif.js";import{FlowGraphInterpolationBlock as WE}from"./flowGraphInterpolationBlock-DCCdvI-3.js";import{EasingFunctionType as UE,FlowGraphEasingBlock as jE}from"./flowGraphEasingBlock-Cg0myAZj.js";import{FlowGraphBezierCurveEasingBlock as XE}from"./flowGraphBezierCurveEasingBlock-D8e5lRJR.js";import{FlowGraphConditionalDataBlock as ZE}from"./flowGraphConditionalDataBlock-CXbcBt68.js";import{FlowGraphGetVariableBlock as KE}from"./flowGraphGetVariableBlock-DhlcrG-o.js";import{FlowGraphSetVariableBlock as JE}from"./flowGraphSetVariableBlock-B1MhHVxv.js";import{FlowGraphTransformCoordinatesSystemBlock as tF}from"./flowGraphTransformCoordinatesSystemBlock-DNGdu7-D.js";import{FlowGraphGetPropertyBlock as iF}from"./flowGraphGetPropertyBlock-TnE7q6og.js";import{FlowGraphSetPropertyBlock as rF}from"./flowGraphSetPropertyBlock-DXJsQY2Q.js";import{FlowGraphConstantBlock as oF}from"./flowGraphConstantBlock-DysdAuT5.js";import{FlowGraphGetAssetBlock as lF}from"./flowGraphGetAssetBlock-BLmhj2X4.js";import{FlowGraphDataSwitchBlock as dF}from"./flowGraphDataSwitchBlock-DvJwFjXa.js";import{FlowGraphAbsBlock as _F,FlowGraphAcosBlock as pF,FlowGraphAcoshBlock as gF,FlowGraphAddBlock as mF,FlowGraphAsinBlock as fF,FlowGraphAsinhBlock as bF,FlowGraphAtan2Block as xF,FlowGraphAtanBlock as PF,FlowGraphAtanhBlock as yF,FlowGraphBitwiseAndBlock as TF,FlowGraphBitwiseLeftShiftBlock as SF,FlowGraphBitwiseNotBlock as MF,FlowGraphBitwiseOrBlock as vF,FlowGraphBitwiseRightShiftBlock as BF,FlowGraphBitwiseXorBlock as AF,FlowGraphCeilBlock as CF,FlowGraphClampBlock as RF,FlowGraphCosBlock as DF,FlowGraphCoshBlock as wF,FlowGraphCubeRootBlock as IF,FlowGraphDegToRadBlock as EF,FlowGraphDivideBlock as FF,FlowGraphEBlock as OF,FlowGraphEqualityBlock as GF,FlowGraphExpBlock as kF,FlowGraphFloorBlock as VF,FlowGraphFractionBlock as zF,FlowGraphGreaterThanBlock as LF,FlowGraphGreaterThanOrEqualBlock as NF,FlowGraphInfBlock as WF,FlowGraphIsInfinityBlock as HF,FlowGraphIsNanBlock as UF,FlowGraphLeadingZerosBlock as jF,FlowGraphLessThanBlock as QF,FlowGraphLessThanOrEqualBlock as XF,FlowGraphLog10Block as qF,FlowGraphLog2Block as ZF,FlowGraphLogBlock as YF,FlowGraphMathInterpolationBlock as KF,FlowGraphMaxBlock as $F,FlowGraphMinBlock as JF,FlowGraphModuloBlock as eO,FlowGraphMultiplyBlock as tO,FlowGraphNaNBlock as sO,FlowGraphNegationBlock as iO,FlowGraphOneBitsCounterBlock as aO,FlowGraphPiBlock as rO,FlowGraphPowerBlock as nO,FlowGraphRadToDegBlock as oO,FlowGraphRandomBlock as hO,FlowGraphRoundBlock as lO,FlowGraphSaturateBlock as cO,FlowGraphSignBlock as dO,FlowGraphSinBlock as uO,FlowGraphSinhBlock as _O,FlowGraphSquareRootBlock as pO,FlowGraphSubtractBlock as gO,FlowGraphTanBlock as mO,FlowGraphTanhBlock as fO,FlowGraphTrailingZerosBlock as bO,FlowGraphTruncBlock as xO}from"./flowGraphMathBlocks-C4x3is-T.js";import{FlowGraphCombineMatrix2DBlock as yO,FlowGraphCombineMatrix3DBlock as TO,FlowGraphCombineMatrixBlock as SO,FlowGraphCombineVector2Block as MO,FlowGraphCombineVector3Block as vO,FlowGraphCombineVector4Block as BO,FlowGraphExtractMatrix2DBlock as AO,FlowGraphExtractMatrix3DBlock as CO,FlowGraphExtractMatrixBlock as RO,FlowGraphExtractVector2Block as DO,FlowGraphExtractVector3Block as wO,FlowGraphExtractVector4Block as IO}from"./flowGraphMathCombineExtractBlocks-BlJzkMI0.js";import{FlowGraphDeterminantBlock as FO,FlowGraphInvertMatrixBlock as OO,FlowGraphMatrixComposeBlock as GO,FlowGraphMatrixDecomposeBlock as kO,FlowGraphMatrixMultiplicationBlock as VO,FlowGraphTransposeBlock as zO}from"./flowGraphMatrixMathBlocks-dFiznv_Q.js";import{FlowGraphCrossBlock as NO,FlowGraphDotBlock as WO,FlowGraphLengthBlock as HO,FlowGraphNormalizeBlock as UO,FlowGraphRotate2DBlock as jO,FlowGraphRotate3DBlock as QO,FlowGraphTransformBlock as XO,FlowGraphTransformCoordinatesBlock as qO}from"./flowGraphVectorMathBlocks-VcTsQTKK.js";import{FlowGraphBooleanToFloat as YO,FlowGraphBooleanToInt as KO,FlowGraphFloatToBoolean as $O,FlowGraphFloatToInt as JO,FlowGraphIntToBoolean as eG,FlowGraphIntToFloat as tG}from"./flowGraphTypeToTypeBlocks-B2Nx7lWr.js";import{FlowGraphContextBlock as iG}from"./flowGraphContextBlock-CSQiKo5X.js";import{FlowGraphArrayIndexBlock as rG}from"./flowGraphArrayIndexBlock-GiVbpSS7.js";import{FlowGraphCodeExecutionBlock as oG}from"./flowGraphCodeExecutionBlock-H1yX0hqA.js";import{FlowGraphIndexOfBlock as lG}from"./flowGraphIndexOfBlock-CUZxmyHg.js";import{FlowGraphFunctionReferenceBlock as dG}from"./flowGraphFunctionReferenceBlock-Dmuyl_SX.js";import{FlowGraphMeshPickEventBlock as _G}from"./flowGraphMeshPickEventBlock-DsWTRMRq.js";import{FlowGraphSceneReadyEventBlock as gG}from"./flowGraphSceneReadyEventBlock-D0WxwWod.js";import{FlowGraphReceiveCustomEventBlock as fG}from"./flowGraphReceiveCustomEventBlock-pMlatOPN.js";import{FlowGraphSendCustomEventBlock as xG}from"./flowGraphSendCustomEventBlock-5_bDlDSf.js";import{FlowGraphSceneTickEventBlock as yG}from"./flowGraphSceneTickEventBlock-LT0lNSWj.js";import{FlowGraphPointerOutEventBlock as SG}from"./flowGraphPointerOutEventBlock-Crq0OLtx.js";import{FlowGraphPointerOverEventBlock as vG}from"./flowGraphPointerOverEventBlock-BjEu_EeF.js";import{L as AG,_ as CG}from"./iesTextureLoader-kPQN6WPk.js";import{pbrVertexShaderWGSL as DG}from"./pbr.vertex-C6clv1jW.js";import{pbrPixelShaderWGSL as IG}from"./pbr.fragment-jox_Wzt1.js";import{pbrVertexShader as FG}from"./pbr.vertex-C_PHP_eE.js";import{pbrPixelShader as GG}from"./pbr.fragment-CxtSokwZ.js";import{_DDSTextureLoader as VG}from"./ddsTextureLoader-ClSrghAN.js";import{_ENVTextureLoader as LG}from"./envTextureLoader-CsQU9Zxe.js";import{_KTXTextureLoader as WG}from"./ktxTextureLoader-D2KSEczx.js";import{_TGATextureLoader as UG}from"./tgaTextureLoader-oyntu75g.js";import{_HDRTextureLoader as QG}from"./hdrTextureLoader-Dr-h7uMN.js";import{_BasisTextureLoader as qG}from"./basisTextureLoader-CUPe6yBq.js";import{C as YG,D as KG,G as $G,S as JG,d as ek,c as tk,U as sk,a as ik,b as ak,_ as rk}from"./exrTextureLoader-B-9p8Lmj.js";import{A as ok,C as hk,D as lk,E as ck,a as dk,H as uk,I as _k,i as pk,h as gk,b as mk,g as fk,P as bk,e as xk,c as Pk,d as yk,f as Tk,j as Sk,k as Mk,R as vk,W as Bk}from"./exrLoader.configuration-BDKsI_eb.js";import{D as Ck,E as Rk,K as Dk,a as wk,S as Ik,T as Ek}from"./khronosTextureContainer2-DKf4UHYP.js";import{b as Ok,a as Gk,l as kk,c as Vk,e as zk,d as Lk,m as Nk,s as Wk}from"./vertexColorMixing-CmRbdHdF.js";import{b as Uk,a as jk,f as Qk,l as Xk,m as qk,c as Zk,d as Yk,e as Kk,s as $k}from"./bumpVertex-CO1be_N_.js";import{helperFunctionsWGSL as eV}from"./helperFunctions-Dt8Ez0m5.js";import{d as sV,c as iV,b as aV,i as rV,a as nV,l as oV,e as hV,r as lV,s as cV}from"./oitFragment-COwarqmx.js";import{b as uV,d as _V,c as pV,i as gV,a as mV,e as fV,l as bV,f as xV,r as PV,s as yV}from"./oitFragment-C1qnXpVq.js";import{d as SV,l as MV}from"./default.fragment-B-kdUbSd.js";import{d as BV,l as AV}from"./default.fragment-CtvPXGlm.js";import{defaultVertexShader as RV}from"./default.vertex-kA04vKVP.js";import{defaultVertexShaderWGSL as wV}from"./default.vertex-Ao6IQZKy.js";import{B as EV,O as FV}from"./mesh.vertexData.functions-CojAmKRV.js";import{B as GV,c as kV,b as VV,a as zV,G as LV,L as NV,S as WV,T as HV}from"./basis-DDOcy81u.js";import{DDSTools as jV}from"./dds-C64e2J1b.js";import{H as XV,P as qV}from"./hdr-6elhj4O4.js";import{lodCubePixelShader as YV}from"./lodCube.fragment-D_gIz9a5.js";import{lodPixelShader as $V}from"./lod.fragment-CVDCt30G.js";import{lodCubePixelShaderWGSL as ez}from"./lodCube.fragment-Ds6X7yQ8.js";import{lodPixelShaderWGSL as sz}from"./lod.fragment-C6sl9DjL.js";import{G as az,T as rz,U as nz}from"./tga-BWmadVoa.js";import{rgbdDecodePixelShader as hz}from"./rgbdDecode.fragment-Dd8vf-n0.js";import{rgbdEncodePixelShader as cz}from"./rgbdEncode.fragment-C5jKXevo.js";import{rgbdDecodePixelShaderWGSL as uz}from"./rgbdDecode.fragment-B9rvcZQ2.js";import{rgbdEncodePixelShaderWGSL as pz}from"./rgbdEncode.fragment-CC1-xNHs.js";import{postprocessVertexShaderWGSL as mz}from"./postprocess.vertex-DIr9NoBj.js";import{passPixelShader as bz}from"./pass.fragment-D7l-dmRx.js";import{passCubePixelShader as Pz}from"./passCube.fragment-sEcb3B-6.js";import{passPixelShaderWGSL as Tz}from"./pass.fragment-B8b0gssu.js";import{passCubePixelShaderWGSL as Mz}from"./passCube.fragment-_Y3ijnqO.js";import"./motion-3WHHzQTP.js";import"./vendor-CIP6LD3P.js";import"./flowGraphCachedOperationBlock-ByGHbGUe.js";import"./flowGraphBinaryOperationBlock-DZCn6KPT.js";import"./flowGraphUnaryOperationBlock-BvbmF_Vi.js";import"./flowGraphTernaryOperationBlock-Cd2lmfhN.js";import"./harmonicsFunctions-C2rlzhtf.js";import"./mainUVVaryingDeclaration-kAMx1wwy.js";import"./harmonicsFunctions-BiMv5FUV.js";import"./mainUVVaryingDeclaration-BftUusui.js";import"./defaultUboDeclaration-C5WGJzzr.js";import"./defaultUboDeclaration-mfzMqo_r.js";class $i{constructor(){this.enableBlending=!1,this.blendingSpeed=.01,this.loopMode=ts.ANIMATIONLOOPMODE_CYCLE}}class Ji{constructor(e){this._path=e,this._onchange=new Array,this.value=0,this.animations=[]}getPoint(){const e=this._path.getPointAtLengthPosition(this.value);return new d(e.x,0,e.y)}moveAhead(e=.002){return this.move(e),this}moveBack(e=.002){return this.move(-e),this}move(e){if(Math.abs(e)>1)throw"step size should be less than 1.";return this.value+=e,this._ensureLimits(),this._raiseOnChange(),this}_ensureLimits(){for(;this.value>1;)this.value-=1;for(;this.value<0;)this.value+=1;return this}_raiseOnChange(){return this._onchange.forEach(e=>e(this)),this}onchange(e){return this._onchange.push(e),this}}class ea{constructor(e){if(this.SMOOTHING=.75,this.FFT_SIZE=512,this.BARGRAPHAMPLITUDE=256,this.DEBUGCANVASPOS={x:20,y:20},this.DEBUGCANVASSIZE={width:320,height:200},e=e||Qe.LastCreatedScene,!!e){if(this._scene=e,!Bt.audioEngine){se.Warn("No audio engine initialized, failed to create an audio analyser");return}this._audioEngine=Bt.audioEngine,this._audioEngine.canUseWebAudio&&this._audioEngine.audioContext&&(this._webAudioAnalyser=this._audioEngine.audioContext.createAnalyser(),this._webAudioAnalyser.minDecibels=-140,this._webAudioAnalyser.maxDecibels=0,this._byteFreqs=new Uint8Array(this._webAudioAnalyser.frequencyBinCount),this._byteTime=new Uint8Array(this._webAudioAnalyser.frequencyBinCount),this._floatFreqs=new Float32Array(this._webAudioAnalyser.frequencyBinCount))}}getFrequencyBinCount(){return this._audioEngine.canUseWebAudio?this._webAudioAnalyser.frequencyBinCount:0}getByteFrequencyData(){return this._audioEngine.canUseWebAudio&&(this._webAudioAnalyser.smoothingTimeConstant=this.SMOOTHING,this._webAudioAnalyser.fftSize=this.FFT_SIZE,this._webAudioAnalyser.getByteFrequencyData(this._byteFreqs)),this._byteFreqs}getByteTimeDomainData(){return this._audioEngine.canUseWebAudio&&(this._webAudioAnalyser.smoothingTimeConstant=this.SMOOTHING,this._webAudioAnalyser.fftSize=this.FFT_SIZE,this._webAudioAnalyser.getByteTimeDomainData(this._byteTime)),this._byteTime}getFloatFrequencyData(){return this._audioEngine.canUseWebAudio&&(this._webAudioAnalyser.smoothingTimeConstant=this.SMOOTHING,this._webAudioAnalyser.fftSize=this.FFT_SIZE,this._webAudioAnalyser.getFloatFrequencyData(this._floatFreqs)),this._floatFreqs}drawDebugCanvas(){if(this._audioEngine.canUseWebAudio&&(this._debugCanvas||(this._debugCanvas=document.createElement("canvas"),this._debugCanvas.width=this.DEBUGCANVASSIZE.width,this._debugCanvas.height=this.DEBUGCANVASSIZE.height,this._debugCanvas.style.position="absolute",this._debugCanvas.style.top=this.DEBUGCANVASPOS.y+"px",this._debugCanvas.style.left=this.DEBUGCANVASPOS.x+"px",this._debugCanvasContext=this._debugCanvas.getContext("2d"),document.body.appendChild(this._debugCanvas),this._registerFunc=()=>{this.drawDebugCanvas()},this._scene.registerBeforeRender(this._registerFunc)),this._registerFunc&&this._debugCanvasContext)){const e=this.getByteFrequencyData();this._debugCanvasContext.fillStyle="rgb(0, 0, 0)",this._debugCanvasContext.fillRect(0,0,this.DEBUGCANVASSIZE.width,this.DEBUGCANVASSIZE.height);for(let t=0;t<this.getFrequencyBinCount();t++){const i=e[t]/this.BARGRAPHAMPLITUDE,a=this.DEBUGCANVASSIZE.height*i,r=this.DEBUGCANVASSIZE.height-a-1,n=this.DEBUGCANVASSIZE.width/this.getFrequencyBinCount(),o=t/this.getFrequencyBinCount()*360;this._debugCanvasContext.fillStyle="hsl("+o+", 100%, 50%)",this._debugCanvasContext.fillRect(t*n,r,n,a)}}}stopDebugCanvas(){this._debugCanvas&&(this._registerFunc&&(this._scene.unregisterBeforeRender(this._registerFunc),this._registerFunc=null),document.body.removeChild(this._debugCanvas),this._debugCanvas=null,this._debugCanvasContext=null)}connectAudioNodes(e,t){this._audioEngine.canUseWebAudio&&(e.connect(this._webAudioAnalyser),this._webAudioAnalyser.connect(t))}dispose(){this._audioEngine.canUseWebAudio&&this._webAudioAnalyser.disconnect()}}const Ue=[];function ri(){return Ue.length===0?null:Ue[Ue.length-1]}class ni{constructor(e){this._mainBuses=new Set,this._nodes=new Set,this._defaultMainBus=null,this._parameterRampDuration=.01,Ue.push(this),typeof e.parameterRampDuration=="number"&&(this.parameterRampDuration=e.parameterRampDuration)}get defaultMainBus(){return this._mainBuses.size===0?null:(this._defaultMainBus||(this._defaultMainBus=Array.from(this._mainBuses)[0]),this._defaultMainBus)}get parameterRampDuration(){return this._parameterRampDuration}set parameterRampDuration(e){this._parameterRampDuration=Math.max(0,e)}dispose(){Ue.includes(this)&&Ue.splice(Ue.indexOf(this),1);const e=this._nodes.values();for(let t=e.next();!t.done;t=e.next())t.value.dispose();this._mainBuses.clear(),this._nodes.clear(),this._defaultMainBus=null}unlockAsync(){return this.resumeAsync()}_addMainBus(e){this._mainBuses.add(e),this._addNode(e)}_removeMainBus(e){this._mainBuses.delete(e),this._defaultMainBus=null,this._removeNode(e)}_addNode(e){this._nodes.add(e)}_removeNode(e){this._nodes.delete(e)}}function it(u){if(u||(u=ri()),u)return u;throw new Error("No audio engine.")}function ta(u,e={},t=null){return t=it(t),t.createBusAsync(u,e)}function sa(u,e={},t=null){return t=it(t),t.createMainBusAsync(u,e)}function ia(u,e,t={},s=null){return s=it(s),s.createSoundAsync(u,e,t)}async function aa(u,e={},t=null){return t=it(t),t.createSoundBufferAsync(u,e)}function ra(u,e,t={},s=null){return s=it(s),s.createStreamingSoundAsync(u,e,t)}class oi extends Gs{constructor(e){super(e,1)}}class hi extends oi{constructor(e){super(e),this._volume=1;const t=e._audioContext;this._gainNode=new GainNode(t),this._destinationNode=t.destination,this._gainNode.connect(this._destinationNode)}get _inNode(){return this._gainNode}get volume(){return this._volume}set volume(e){this._volume=e,this.engine._setAudioParam(this._gainNode.gain,e)}dispose(){super.dispose(),this._gainNode.disconnect(),this._destinationNode.disconnect()}getClassName(){return"_WebAudioMainOut"}}class li{constructor(e,t){var a,r;this._button=null,this._style=null,this._onStateChanged=()=>{this._button&&(this._engine.state==="running"?this._button.style.display="none":this._button.style.display="block")},this._engine=e;const s=t||((r=(a=Qe.LastCreatedEngine)==null?void 0:a.getInputElement())==null?void 0:r.parentElement)||document.body,i=((s==null?void 0:s.offsetTop)||0)+20;this._style=document.createElement("style"),this._style.appendChild(document.createTextNode(`.babylonUnmute{position:absolute;top:${i}px;margin-left:20px;height:40px;width:60px;background-color:rgba(51,51,51,0.7);background-image:url("data:image/svg+xml;charset=UTF-8,%3Csvg%20version%3D%221.1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2239%22%20height%3D%2232%22%20viewBox%3D%220%200%2039%2032%22%3E%3Cpath%20fill%3D%22white%22%20d%3D%22M9.625%2018.938l-0.031%200.016h-4.953q-0.016%200-0.031-0.016v-12.453q0-0.016%200.031-0.016h4.953q0.031%200%200.031%200.016v12.453zM12.125%207.688l8.719-8.703v27.453l-8.719-8.719-0.016-0.047v-9.938zM23.359%207.875l1.406-1.406%204.219%204.203%204.203-4.203%201.422%201.406-4.219%204.219%204.219%204.203-1.484%201.359-4.141-4.156-4.219%204.219-1.406-1.422%204.219-4.203z%22%3E%3C%2Fpath%3E%3C%2Fsvg%3E");background-size:80%;background-repeat:no-repeat;background-position:center;background-position-y:4px;border:none;outline:none;transition:transform 0.125s ease-out;cursor:pointer;z-index:9999;}.babylonUnmute:hover{transform:scale(1.05)}`)),document.head.appendChild(this._style),this._button=document.createElement("button"),this._button.className="babylonUnmute",this._button.id="babylonUnmuteButton",this._button.addEventListener("click",()=>{this._engine.unlockAsync()}),s.appendChild(this._button),this._engine.stateChangedObservable.add(this._onStateChanged)}dispose(){var e,t;(e=this._button)==null||e.remove(),this._button=null,(t=this._style)==null||t.remove(),this._style=null,this._engine.stateChangedObservable.removeCallback(this._onStateChanged)}}async function na(u={}){const e=new di(u);return await e._init(u),e}const ci={aac:"audio/aac",ac3:"audio/ac3",flac:"audio/flac",m4a:"audio/mp4",mp3:'audio/mpeg; codecs="mp3"',mp4:"audio/mp4",ogg:'audio/ogg; codecs="vorbis"',wav:"audio/wav",webm:'audio/webm; codecs="vorbis"'};class di extends ni{constructor(e={}){super(e),this._audioContextStarted=!1,this._invalidFormats=new Set,this._listener=null,this._pauseCalled=!1,this._resumeOnInteraction=!0,this._resumeOnPause=!0,this._resumeOnPauseRetryInterval=1e3,this._resumeOnPauseTimerId=null,this._resumePromise=null,this._listenerAutoUpdate=!0,this._listenerMinUpdateTime=0,this._unmuteUI=null,this._validFormats=new Set,this._volume=1,this.isReadyPromise=new Promise(t=>{this._resolveIsReadyPromise=t}),this.stateChangedObservable=new W,this.userGestureObservable=new W,this._initAudioContext=async()=>{this._audioContext.addEventListener("statechange",this._onAudioContextStateChange),this._mainOut=new hi(this),this._mainOut.volume=this._volume,await this.createMainBusAsync("default")},this._onAudioContextStateChange=()=>{this.state==="running"&&(clearInterval(this._resumeOnPauseTimerId),this._audioContextStarted=!0,this._resumePromise=null),(this.state==="suspended"||this.state==="interrupted")&&this._audioContextStarted&&this._resumeOnPause&&!this._pauseCalled&&(clearInterval(this._resumeOnPauseTimerId),this._resumeOnPauseTimerId=setInterval(()=>{this.resumeAsync()},this._resumeOnPauseRetryInterval)),this.stateChangedObservable.notifyObservers(this.state)},this._onUserGesture=async()=>{this._resumeOnInteraction&&await this._audioContext.resume(),this.userGestureObservable.notifyObservers()},typeof e.listenerAutoUpdate=="boolean"&&(this._listenerAutoUpdate=e.listenerAutoUpdate),typeof e.listenerMinUpdateTime=="number"&&(this._listenerMinUpdateTime=e.listenerMinUpdateTime),this._volume=e.volume??1,this._audioContext=e.audioContext??new AudioContext,e.disableDefaultUI||(this._unmuteUI=new li(this,e.defaultUIParentElement))}async _init(e){this._resumeOnInteraction=typeof e.resumeOnInteraction=="boolean"?e.resumeOnInteraction:!0,this._resumeOnPause=typeof e.resumeOnPause=="boolean"?e.resumeOnPause:!0,this._resumeOnPauseRetryInterval=e.resumeOnPauseRetryInterval??1e3,document.addEventListener("click",this._onUserGesture),await this._initAudioContext(),ks(e)&&(this._listener=It(this,this._listenerAutoUpdate,this._listenerMinUpdateTime),this._listener.setOptions(e)),this._resolveIsReadyPromise()}get currentTime(){return this._audioContext.currentTime??0}get _inNode(){return this._audioContext.destination}get mainOut(){return this._mainOut}get listener(){return this._listener??(this._listener=It(this,this._listenerAutoUpdate,this._listenerMinUpdateTime))}get state(){return this._audioContext.state}get volume(){return this._volume}set volume(e){this._volume!==e&&(this._volume=e,this._mainOut&&(this._mainOut.volume=e))}async createBusAsync(e,t={}){const s=await S(()=>import("./nativeXRFrame-DgHx7Vcb.js").then(a=>a.rw),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29])),i=new s._WebAudioBus(e,this,t);return await i._init(t),i}async createMainBusAsync(e,t={}){const s=await S(()=>import("./nativeXRFrame-DgHx7Vcb.js").then(a=>a.rx),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29])),i=new s._WebAudioMainBus(e,this);return await i._init(t),i}async createSoundAsync(e,t,s={}){const i=await S(()=>import("./nativeXRFrame-DgHx7Vcb.js").then(r=>r.ry),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29])),a=new i._WebAudioStaticSound(e,this,s);return await a._init(t,s),a}async createSoundBufferAsync(e,t={}){const s=await S(()=>import("./nativeXRFrame-DgHx7Vcb.js").then(a=>a.ry),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29])),i=new s._WebAudioStaticSoundBuffer(this);return await i._init(e,t),i}async createStreamingSoundAsync(e,t,s={}){const i=await S(()=>import("./nativeXRFrame-DgHx7Vcb.js").then(r=>r.rz),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29])),a=new i._WebAudioStreamingSound(e,this,s);return await a._init(t,s),a}dispose(){var e,t;super.dispose(),(e=this._listener)==null||e.dispose(),this._listener=null,this._audioContext.state!=="closed"&&this._audioContext.close(),document.removeEventListener("click",this._onUserGesture),this._audioContext.removeEventListener("statechange",this._onAudioContextStateChange),(t=this._unmuteUI)==null||t.dispose(),this._unmuteUI=null}flagInvalidFormat(e){this._invalidFormats.add(e)}isFormatValid(e){if(this._validFormats.has(e))return!0;if(this._invalidFormats.has(e))return!1;const t=ci[e];return t===void 0?!1:new Audio().canPlayType(t)===""?(this._invalidFormats.add(e),!1):(this._validFormats.add(e),!0)}async pauseAsync(){await this._audioContext.suspend(),this._pauseCalled=!0}resumeAsync(){return this._pauseCalled=!1,this._resumePromise?this._resumePromise:(this._resumePromise=this._audioContext.resume(),this._resumePromise)}_addMainBus(e){super._addMainBus(e)}_removeMainBus(e){super._removeMainBus(e)}_addNode(e){super._addNode(e)}_removeNode(e){super._removeNode(e)}_setAudioParam(e,t){e.linearRampToValueAtTime(t,this.currentTime+this.parameterRampDuration)}}class oa{constructor(e,t){this._scene=e,t instanceof Ht?(this._skeleton=t,this._mesh=null):(this._mesh=t,this._skeleton=t.skeleton)}async bakeVertexData(e){if(!this._skeleton)throw new Error("No skeleton provided.");const t=this._skeleton.bones.length,s=e.reduce((n,o)=>n+o.to-o.from+1,0);if(isNaN(s))throw new Error("Invalid animation ranges.");let i=0;const a=(t+1)*4*4*s,r=new Float32Array(a);this._scene.stopAnimation(this._skeleton),this._skeleton.returnToRest();for(const n of e)for(let o=n.from;o<=n.to;o++)await this._executeAnimationFrame(r,o,i++);return r}async _executeAnimationFrame(e,t,s){return new Promise((i,a)=>{this._scene.beginAnimation(this._skeleton,t,t,!1,1,()=>{const r=this._skeleton.getTransformMatrices(this._mesh);e.set(r,s*r.length),i()})})}textureFromBakedVertexData(e){if(!this._skeleton)throw new Error("No skeleton provided.");const t=this._skeleton.bones.length,s=Pt.CreateRGBATexture(e,(t+1)*4,e.length/((t+1)*4*4),this._scene,!1,!1,K.NEAREST_NEAREST,1);return s.name="VAT"+this._skeleton.name,s}serializeBakedVertexDataToObject(e){if(!this._skeleton)throw new Error("No skeleton provided.");const t=this._skeleton.bones.length,s=(t+1)*4,i=e.length/((t+1)*4*4);return{vertexData:ss(e),width:s,height:i}}loadBakedVertexDataFromObject(e){return new Float32Array(is(e.vertexData))}serializeBakedVertexDataToJSON(e){return JSON.stringify(this.serializeBakedVertexDataToObject(e))}loadBakedVertexDataFromJSON(e){return this.loadBakedVertexDataFromObject(JSON.parse(e))}}class Ye{constructor(e,t=new d,s=0,i=!1){this.direction=e,this.rotatedDirection=t,this.diff=s,this.ignore=i}}class ha{constructor(e){this._ui=e,this.name="AttachToBoxBehavior",this.distanceAwayFromFace=.15,this.distanceAwayFromBottomOfFace=.15,this._faceVectors=[new Ye(d.Up()),new Ye(d.Down()),new Ye(d.Left()),new Ye(d.Right()),new Ye(d.Forward()),new Ye(d.Forward().scaleInPlace(-1))],this._tmpMatrix=new R,this._tmpVector=new d,this._zeroVector=d.Zero(),this._lookAtTmpMatrix=new R}init(){}_closestFace(e){return this._faceVectors.forEach(t=>{this._target.rotationQuaternion||(this._target.rotationQuaternion=M.RotationYawPitchRoll(this._target.rotation.y,this._target.rotation.x,this._target.rotation.z)),this._target.rotationQuaternion.toRotationMatrix(this._tmpMatrix),d.TransformCoordinatesToRef(t.direction,this._tmpMatrix,t.rotatedDirection),t.diff=d.GetAngleBetweenVectors(t.rotatedDirection,e,d.Cross(t.rotatedDirection,e))}),this._faceVectors.reduce((t,s)=>t.ignore?s:s.ignore||t.diff<s.diff?t:s,this._faceVectors[0])}_lookAtToRef(e,t=new d(0,1,0),s){R.LookAtLHToRef(this._zeroVector,e,t,this._lookAtTmpMatrix),this._lookAtTmpMatrix.invert(),M.FromRotationMatrixToRef(this._lookAtTmpMatrix,s)}attach(e){this._target=e,this._scene=this._target.getScene(),this._onRenderObserver=this._scene.onBeforeRenderObservable.add(()=>{if(!this._scene.activeCamera)return;let t=this._scene.activeCamera.position;this._scene.activeCamera.devicePosition&&(t=this._scene.activeCamera.devicePosition);const s=this._closestFace(t.subtract(e.position));this._scene.activeCamera.leftCamera?this._scene.activeCamera.leftCamera.computeWorldMatrix().getRotationMatrixToRef(this._tmpMatrix):this._scene.activeCamera.computeWorldMatrix().getRotationMatrixToRef(this._tmpMatrix),d.TransformCoordinatesToRef(d.Up(),this._tmpMatrix,this._tmpVector),this._faceVectors.forEach(a=>{s.direction.x&&a.direction.x&&(a.ignore=!0),s.direction.y&&a.direction.y&&(a.ignore=!0),s.direction.z&&a.direction.z&&(a.ignore=!0)});const i=this._closestFace(this._tmpVector);this._faceVectors.forEach(a=>{a.ignore=!1}),this._ui.position.copyFrom(e.position),s.direction.x&&(s.rotatedDirection.scaleToRef(e.scaling.x/2+this.distanceAwayFromFace,this._tmpVector),this._ui.position.addInPlace(this._tmpVector)),s.direction.y&&(s.rotatedDirection.scaleToRef(e.scaling.y/2+this.distanceAwayFromFace,this._tmpVector),this._ui.position.addInPlace(this._tmpVector)),s.direction.z&&(s.rotatedDirection.scaleToRef(e.scaling.z/2+this.distanceAwayFromFace,this._tmpVector),this._ui.position.addInPlace(this._tmpVector)),this._ui.rotationQuaternion||(this._ui.rotationQuaternion=M.RotationYawPitchRoll(this._ui.rotation.y,this._ui.rotation.x,this._ui.rotation.z)),s.rotatedDirection.scaleToRef(-1,this._tmpVector),this._lookAtToRef(this._tmpVector,i.rotatedDirection,this._ui.rotationQuaternion),i.direction.x&&this._ui.up.scaleToRef(this.distanceAwayFromBottomOfFace-e.scaling.x/2,this._tmpVector),i.direction.y&&this._ui.up.scaleToRef(this.distanceAwayFromBottomOfFace-e.scaling.y/2,this._tmpVector),i.direction.z&&this._ui.up.scaleToRef(this.distanceAwayFromBottomOfFace-e.scaling.z/2,this._tmpVector),this._ui.position.addInPlace(this._tmpVector)})}detach(){this._scene.onBeforeRenderObservable.remove(this._onRenderObserver)}}class la{get delay(){return this.fadeInDelay}set delay(e){this.fadeInDelay=e,this.fadeOutDelay=e}constructor(){this.fadeInDelay=0,this.fadeOutDelay=0,this.fadeInTime=300,this.fadeOutTime=300,this._millisecondsPerFrame=1e3/60,this._hovered=!1,this._hoverValue=0,this._ownerNode=null,this._delay=0,this._time=300,this._update=()=>{if(this._ownerNode){if(this._hoverValue+=this._hovered?this._millisecondsPerFrame:-this._millisecondsPerFrame,this._setAllVisibility(this._ownerNode,(this._hoverValue-this._delay)/this._time),this._ownerNode.visibility>1){if(this._setAllVisibility(this._ownerNode,1),this._hoverValue>this._time){this._hoverValue=this._time,this._detachObserver();return}}else if(this._ownerNode.visibility<0&&(this._setAllVisibility(this._ownerNode,0),this._hoverValue<0)){this._hoverValue=0,this._detachObserver();return}this._attachObserver()}}}get name(){return"FadeInOut"}init(){}attach(e){this._ownerNode=e,this._setAllVisibility(this._ownerNode,0)}detach(){this._ownerNode=null}fadeIn(e=!0){this._delay=e?this.fadeInDelay:this.fadeOutDelay,this._time=e?this.fadeInTime:this.fadeOutTime,this._detachObserver(),!(this._ownerNode&&(e&&this._ownerNode.visibility>=1||!e&&this._ownerNode.visibility<=0))&&(this._hovered=e,this._hovered||(this._delay*=-1),this._ownerNode.visibility>=1?this._hoverValue=this._time:this._ownerNode.visibility<=0&&(this._hoverValue=0),this._update())}fadeOut(){this.fadeIn(!1)}_setAllVisibility(e,t){e.visibility=t,e.getChildMeshes().forEach(s=>{this._setAllVisibility(s,t)})}_attachObserver(){var e;this._onBeforeRenderObserver||(this._onBeforeRenderObserver=(e=this._ownerNode)==null?void 0:e.getScene().onBeforeRenderObservable.add(this._update))}_detachObserver(){var e;this._onBeforeRenderObserver&&((e=this._ownerNode)==null||e.getScene().onBeforeRenderObservable.remove(this._onBeforeRenderObserver),this._onBeforeRenderObserver=null)}}class ca{constructor(){this._startDistance=0,this._initialScale=new d(0,0,0),this._targetScale=new d(0,0,0),this._sceneRenderObserver=null,this._dragBehaviorA=new ct({}),this._dragBehaviorA.moveAttached=!1,this._dragBehaviorB=new ct({}),this._dragBehaviorB.moveAttached=!1}get name(){return"MultiPointerScale"}init(){}_getCurrentDistance(){return this._dragBehaviorA.lastDragPosition.subtract(this._dragBehaviorB.lastDragPosition).length()}attach(e){this._ownerNode=e,this._dragBehaviorA.onDragStartObservable.add(()=>{this._dragBehaviorA.dragging&&this._dragBehaviorB.dragging&&(this._dragBehaviorA.currentDraggingPointerId==this._dragBehaviorB.currentDraggingPointerId?this._dragBehaviorA.releaseDrag():(this._initialScale.copyFrom(e.scaling),this._startDistance=this._getCurrentDistance()))}),this._dragBehaviorB.onDragStartObservable.add(()=>{this._dragBehaviorA.dragging&&this._dragBehaviorB.dragging&&(this._dragBehaviorA.currentDraggingPointerId==this._dragBehaviorB.currentDraggingPointerId?this._dragBehaviorB.releaseDrag():(this._initialScale.copyFrom(e.scaling),this._startDistance=this._getCurrentDistance()))}),[this._dragBehaviorA,this._dragBehaviorB].forEach(t=>{t.onDragObservable.add(()=>{if(this._dragBehaviorA.dragging&&this._dragBehaviorB.dragging){const s=this._getCurrentDistance()/this._startDistance;this._initialScale.scaleToRef(s,this._targetScale)}})}),e.addBehavior(this._dragBehaviorA),e.addBehavior(this._dragBehaviorB),this._sceneRenderObserver=e.getScene().onBeforeRenderObservable.add(()=>{if(this._dragBehaviorA.dragging&&this._dragBehaviorB.dragging){const t=this._targetScale.subtract(e.scaling).scaleInPlace(.1);t.length()>.01&&e.scaling.addInPlace(t)}})}detach(){this._ownerNode.getScene().onBeforeRenderObservable.remove(this._sceneRenderObserver),[this._dragBehaviorA,this._dragBehaviorB].forEach(e=>{e.onDragStartObservable.clear(),e.onDragObservable.clear(),this._ownerNode.removeBehavior(e)})}}class Be{constructor(){this._attachedToElement=!1,this._virtualMeshesInfo={},this._tmpVector=new d,this._tmpQuaternion=new M,this._dragType={NONE:0,DRAG:1,DRAG_WITH_CONTROLLER:2,NEAR_DRAG:3},this._moving=!1,this._dragging=this._dragType.NONE,this.draggableMeshes=null,this.zDragFactor=3,this.currentDraggingPointerIds=[],this.detachCameraControls=!0,this.onDragStartObservable=new W,this.onDragObservable=new W,this.onDragEndObservable=new W,this.allowMultiPointer=!0}get currentDraggingPointerId(){return this.currentDraggingPointerIds[0]!==void 0?this.currentDraggingPointerIds[0]:-1}set currentDraggingPointerId(e){this.currentDraggingPointerIds[0]=e}get currentDraggingPointerID(){return this.currentDraggingPointerId}set currentDraggingPointerID(e){this.currentDraggingPointerId=e}get name(){return"BaseSixDofDrag"}get isMoving(){return this._moving}init(){}get _pointerCamera(){return this._scene.cameraToUseForPointers?this._scene.cameraToUseForPointers:this._scene.activeCamera}_createVirtualMeshInfo(){const e=new ie("",Be._virtualScene);e.rotationQuaternion=new M;const t=new ie("",Be._virtualScene);t.rotationQuaternion=new M;const s=new ie("",Be._virtualScene);return s.rotationQuaternion=new M,{dragging:!1,moving:!1,dragMesh:e,originMesh:t,pivotMesh:s,startingPivotPosition:new d,startingPivotOrientation:new M,startingPosition:new d,startingOrientation:new M,lastOriginPosition:new d,lastDragPosition:new d}}_resetVirtualMeshesPosition(){for(let e=0;e<this.currentDraggingPointerIds.length;e++)this._virtualMeshesInfo[this.currentDraggingPointerIds[e]].pivotMesh.position.copyFrom(this._ownerNode.getAbsolutePivotPoint()),this._virtualMeshesInfo[this.currentDraggingPointerIds[e]].pivotMesh.rotationQuaternion.copyFrom(this._ownerNode.rotationQuaternion),this._virtualMeshesInfo[this.currentDraggingPointerIds[e]].startingPivotPosition.copyFrom(this._virtualMeshesInfo[this.currentDraggingPointerIds[e]].pivotMesh.position),this._virtualMeshesInfo[this.currentDraggingPointerIds[e]].startingPivotOrientation.copyFrom(this._virtualMeshesInfo[this.currentDraggingPointerIds[e]].pivotMesh.rotationQuaternion),this._virtualMeshesInfo[this.currentDraggingPointerIds[e]].startingPosition.copyFrom(this._virtualMeshesInfo[this.currentDraggingPointerIds[e]].dragMesh.position),this._virtualMeshesInfo[this.currentDraggingPointerIds[e]].startingOrientation.copyFrom(this._virtualMeshesInfo[this.currentDraggingPointerIds[e]].dragMesh.rotationQuaternion)}_pointerUpdate2D(e,t,s){this._pointerCamera&&this._pointerCamera.cameraRigMode==lt.RIG_MODE_NONE&&!this._pointerCamera._isLeftCamera&&!this._pointerCamera._isRightCamera&&(e.origin.copyFrom(this._pointerCamera.globalPosition),s=0);const i=this._virtualMeshesInfo[t],a=c.Vector3[11];e.origin.subtractToRef(i.lastOriginPosition,a),i.lastOriginPosition.copyFrom(e.origin);const r=-d.Dot(a,e.direction);i.originMesh.addChild(i.dragMesh),i.originMesh.addChild(i.pivotMesh),this._applyZOffset(i.dragMesh,r,s),this._applyZOffset(i.pivotMesh,r,s),i.originMesh.position.copyFrom(e.origin);const n=c.Vector3[10];e.origin.addToRef(e.direction,n),i.originMesh.lookAt(n),i.originMesh.removeChild(i.dragMesh),i.originMesh.removeChild(i.pivotMesh)}_pointerUpdateXR(e,t,s,i){const a=this._virtualMeshesInfo[s];if(a.originMesh.position.copyFrom(e.position),this._dragging===this._dragType.NEAR_DRAG&&t?a.originMesh.rotationQuaternion.copyFrom(t.rotationQuaternion):a.originMesh.rotationQuaternion.copyFrom(e.rotationQuaternion),a.pivotMesh.computeWorldMatrix(!0),a.dragMesh.computeWorldMatrix(!0),i!==0){const r=c.Vector3[10],n=c.Vector3[11];r.copyFrom(this._pointerCamera.getForwardRay().direction),a.originMesh.position.subtractToRef(a.lastOriginPosition,n),a.lastOriginPosition.copyFrom(a.originMesh.position);const o=n.length();n.normalize();const h=c.Vector3[12],l=c.Vector3[9];a.dragMesh.absolutePosition.subtractToRef(this._pointerCamera.globalPosition,h),a.dragMesh.absolutePosition.subtractToRef(a.originMesh.position,l);const _=l.length();h.normalize(),l.normalize();let p=Math.abs(d.Dot(n,l))*d.Dot(n,r)*i*o*_;const f=.01;p<0&&f-_>p&&(p=Math.min(f-_,0)),l.scaleInPlace(p),l.addToRef(a.pivotMesh.absolutePosition,this._tmpVector),a.pivotMesh.setAbsolutePosition(this._tmpVector),l.addToRef(a.dragMesh.absolutePosition,this._tmpVector),a.dragMesh.setAbsolutePosition(this._tmpVector)}}attach(e){this._ownerNode=e,this._scene=this._ownerNode.getScene(),Be._virtualScene||(Be._virtualScene=new as(this._scene.getEngine(),{virtual:!0}),Be._virtualScene.detachControl());const t=s=>this._ownerNode===s||s.isDescendantOf(this._ownerNode)&&(!this.draggableMeshes||this.draggableMeshes.indexOf(s)!==-1);this._pointerObserver=this._scene.onPointerObservable.add(s=>{const i=s.event.pointerId;this._virtualMeshesInfo[i]||(this._virtualMeshesInfo[i]=this._createVirtualMeshInfo());const a=this._virtualMeshesInfo[i],r=s.event.pointerType==="xr-near"||s.event.pointerType==="xr",n=s.event.pointerType==="xr-near";if(s.type==Ke.POINTERDOWN){if(!a.dragging&&s.pickInfo&&s.pickInfo.hit&&s.pickInfo.pickedMesh&&s.pickInfo.pickedPoint&&s.pickInfo.ray&&(!n||s.pickInfo.aimTransform)&&t(s.pickInfo.pickedMesh)){if((!this.allowMultiPointer||r)&&this.currentDraggingPointerIds.length>0)return;this._pointerCamera&&this._pointerCamera.cameraRigMode===lt.RIG_MODE_NONE&&!this._pointerCamera._isLeftCamera&&!this._pointerCamera._isRightCamera&&s.pickInfo.ray.origin.copyFrom(this._pointerCamera.globalPosition),this._ownerNode.computeWorldMatrix(!0);const o=this._virtualMeshesInfo[i];r?(this._dragging=s.pickInfo.originMesh?this._dragType.NEAR_DRAG:this._dragType.DRAG_WITH_CONTROLLER,o.originMesh.position.copyFrom(s.pickInfo.aimTransform.position),this._dragging===this._dragType.NEAR_DRAG&&s.pickInfo.gripTransform?o.originMesh.rotationQuaternion.copyFrom(s.pickInfo.gripTransform.rotationQuaternion):o.originMesh.rotationQuaternion.copyFrom(s.pickInfo.aimTransform.rotationQuaternion)):(this._dragging=this._dragType.DRAG,o.originMesh.position.copyFrom(s.pickInfo.ray.origin)),o.lastOriginPosition.copyFrom(o.originMesh.position),o.dragMesh.position.copyFrom(s.pickInfo.pickedPoint),o.lastDragPosition.copyFrom(s.pickInfo.pickedPoint),o.pivotMesh.position.copyFrom(this._ownerNode.getAbsolutePivotPoint()),o.pivotMesh.rotationQuaternion.copyFrom(this._ownerNode.absoluteRotationQuaternion),o.startingPosition.copyFrom(o.dragMesh.position),o.startingPivotPosition.copyFrom(o.pivotMesh.position),o.startingOrientation.copyFrom(o.dragMesh.rotationQuaternion),o.startingPivotOrientation.copyFrom(o.pivotMesh.rotationQuaternion),n?(o.originMesh.addChild(o.dragMesh),o.originMesh.addChild(o.pivotMesh)):o.originMesh.lookAt(o.dragMesh.position),o.dragging=!0,this.currentDraggingPointerIds.indexOf(i)===-1&&this.currentDraggingPointerIds.push(i),this.detachCameraControls&&this._pointerCamera&&!this._pointerCamera.leftCamera&&(this._pointerCamera.inputs&&this._pointerCamera.inputs.attachedToElement?(this._pointerCamera.detachControl(),this._attachedToElement=!0):(!this.allowMultiPointer||this.currentDraggingPointerIds.length===0)&&(this._attachedToElement=!1)),this._targetDragStart(o.pivotMesh.position,o.pivotMesh.rotationQuaternion,i),this.onDragStartObservable.notifyObservers({position:o.pivotMesh.position})}}else if(s.type==Ke.POINTERUP||s.type==Ke.POINTERDOUBLETAP){const o=this.currentDraggingPointerIds.indexOf(i);a.dragging=!1,o!==-1&&(this.currentDraggingPointerIds.splice(o,1),this.currentDraggingPointerIds.length===0&&(this._moving=!1,this._dragging=this._dragType.NONE,this.detachCameraControls&&this._attachedToElement&&this._pointerCamera&&!this._pointerCamera.leftCamera&&(this._reattachCameraControls(),this._attachedToElement=!1)),a.originMesh.removeChild(a.dragMesh),a.originMesh.removeChild(a.pivotMesh),this._targetDragEnd(i),this.onDragEndObservable.notifyObservers({}))}else if(s.type==Ke.POINTERMOVE&&this.currentDraggingPointerIds.indexOf(i)!==-1&&a.dragging&&s.pickInfo&&(s.pickInfo.ray||s.pickInfo.aimTransform)){let h=this.zDragFactor;(this.currentDraggingPointerIds.length>1||s.pickInfo.originMesh)&&(h=0),this._ownerNode.computeWorldMatrix(!0),n?this._pointerUpdateXR(s.pickInfo.aimTransform,s.pickInfo.gripTransform,i,h):this._pointerUpdate2D(s.pickInfo.ray,i,h),this._tmpQuaternion.copyFrom(a.startingPivotOrientation),this._tmpQuaternion.x=-this._tmpQuaternion.x,this._tmpQuaternion.y=-this._tmpQuaternion.y,this._tmpQuaternion.z=-this._tmpQuaternion.z,a.pivotMesh.absoluteRotationQuaternion.multiplyToRef(this._tmpQuaternion,this._tmpQuaternion),a.pivotMesh.absolutePosition.subtractToRef(a.startingPivotPosition,this._tmpVector),this.onDragObservable.notifyObservers({delta:this._tmpVector,position:a.pivotMesh.position,pickInfo:s.pickInfo}),this._targetDrag(this._tmpVector,this._tmpQuaternion,i),a.lastDragPosition.copyFrom(a.dragMesh.absolutePosition),this._moving=!0}})}_applyZOffset(e,t,s){e.position.z-=e.position.z<1?t*s:t*s*e.position.z,e.position.z<0&&(e.position.z=0)}_targetDragStart(e,t,s){}_targetDrag(e,t,s){}_targetDragEnd(e){}_reattachCameraControls(){if(this._pointerCamera)if(this._pointerCamera.getClassName()==="ArcRotateCamera"){const e=this._pointerCamera;e.attachControl(e.inputs?e.inputs.noPreventDefault:!0,e._useCtrlForPanning,e._panningMouseButton)}else this._pointerCamera.attachControl(this._pointerCamera.inputs?this._pointerCamera.inputs.noPreventDefault:!0)}detach(){this._scene&&(this.detachCameraControls&&this._attachedToElement&&this._pointerCamera&&!this._pointerCamera.leftCamera&&(this._reattachCameraControls(),this._attachedToElement=!1),this._scene.onPointerObservable.remove(this._pointerObserver));for(const e in this._virtualMeshesInfo)this._virtualMeshesInfo[e].originMesh.dispose(),this._virtualMeshesInfo[e].dragMesh.dispose();this.onDragEndObservable.clear(),this.onDragObservable.clear(),this.onDragStartObservable.clear()}}class ui extends Be{constructor(){super(...arguments),this._sceneRenderObserver=null,this._targetPosition=new d(0,0,0),this._targetOrientation=new M,this._targetScaling=new d(1,1,1),this._startingPosition=new d(0,0,0),this._startingOrientation=new M,this._startingScaling=new d(1,1,1),this.onPositionChangedObservable=new W,this.dragDeltaRatio=.2,this.rotateDraggedObject=!0,this.rotateAroundYOnly=!1,this.rotateWithMotionController=!0,this.disableMovement=!1,this.faceCameraOnDragStart=!1}get name(){return"SixDofDrag"}attach(e){super.attach(e),e.isNearGrabbable=!0,e.getChildMeshes().forEach(t=>{t.isNearGrabbable=!0}),this._virtualTransformNode=new ie("virtual_sixDof",Be._virtualScene),this._virtualTransformNode.rotationQuaternion=M.Identity(),this._sceneRenderObserver=e.getScene().onBeforeRenderObservable.add(()=>{if(this.currentDraggingPointerIds.length===1&&this._moving&&!this.disableMovement){const t=c.Vector3[0];t.copyFrom(this._targetPosition).subtractInPlace(e.absolutePosition).scaleInPlace(this.dragDeltaRatio);const s=c.Vector3[1];if(s.copyFrom(t),e.parent){const i=c.Matrix[0];e.parent.absoluteRotationQuaternion.toRotationMatrix(i),i.invert(),d.TransformNormalToRef(t,i,s)}if(e.position.addInPlace(s),this.onPositionChangedObservable.notifyObservers({position:e.absolutePosition}),!e.parent||e.parent.scaling&&!e.parent.scaling.isNonUniformWithinEpsilon(.001)){const i=c.Quaternion[0];if(i.copyFrom(this._targetOrientation),e.parent){const a=c.Quaternion[0];a.copyFrom(e.parent.absoluteRotationQuaternion),a.invertInPlace(),a.multiplyToRef(this._targetOrientation,i)}M.SlerpToRef(e.rotationQuaternion,i,this.dragDeltaRatio,e.rotationQuaternion)}}})}_getPositionOffsetAround(e,t,s){const i=c.Matrix[0],a=c.Matrix[1],r=c.Matrix[2],n=c.Matrix[3],o=c.Matrix[4];return R.TranslationToRef(e.x,e.y,e.z,i),R.TranslationToRef(-e.x,-e.y,-e.z,a),R.FromQuaternionToRef(s,r),R.ScalingToRef(t,t,t,n),a.multiplyToRef(r,o),o.multiplyToRef(n,o),o.multiplyToRef(i,o),o.getTranslation()}_onePointerPositionUpdated(e,t){c.Vector3[0].setAll(0),this._dragging===this._dragType.DRAG?this.rotateDraggedObject&&(this.rotateAroundYOnly?M.RotationYawPitchRollToRef(t.toEulerAngles().y,0,0,c.Quaternion[0]):c.Quaternion[0].copyFrom(t),c.Quaternion[0].multiplyToRef(this._startingOrientation,this._targetOrientation)):(this._dragging===this._dragType.NEAR_DRAG||this._dragging===this._dragType.DRAG_WITH_CONTROLLER&&this.rotateWithMotionController)&&t.multiplyToRef(this._startingOrientation,this._targetOrientation),this._targetPosition.copyFrom(this._startingPosition).addInPlace(e)}_twoPointersPositionUpdated(){const e=this._virtualMeshesInfo[this.currentDraggingPointerIds[0]].startingPosition,t=this._virtualMeshesInfo[this.currentDraggingPointerIds[1]].startingPosition,s=c.Vector3[0];e.addToRef(t,s),s.scaleInPlace(.5);const i=c.Vector3[1];t.subtractToRef(e,i);const a=this._virtualMeshesInfo[this.currentDraggingPointerIds[0]].dragMesh.absolutePosition,r=this._virtualMeshesInfo[this.currentDraggingPointerIds[1]].dragMesh.absolutePosition,n=c.Vector3[2];a.addToRef(r,n),n.scaleInPlace(.5);const o=c.Vector3[3];r.subtractToRef(a,o);const h=o.length()/i.length(),l=n.subtract(s),_=M.FromEulerAngles(0,d.GetAngleBetweenVectorsOnPlane(i.normalize(),o.normalize(),d.UpReadOnly),0),g=this._ownerNode.parent;this._ownerNode.setParent(null);const p=this._getPositionOffsetAround(s.subtract(this._virtualTransformNode.getAbsolutePivotPoint()),h,_);this._virtualTransformNode.rotationQuaternion.multiplyToRef(_,this._ownerNode.rotationQuaternion),this._virtualTransformNode.scaling.scaleToRef(h,this._ownerNode.scaling),this._virtualTransformNode.position.addToRef(l.addInPlace(p),this._ownerNode.position),this.onPositionChangedObservable.notifyObservers({position:this._ownerNode.position}),this._ownerNode.setParent(g)}_targetDragStart(){const e=this.currentDraggingPointerIds.length;this._ownerNode.rotationQuaternion||(this._ownerNode.rotationQuaternion=M.RotationYawPitchRoll(this._ownerNode.rotation.y,this._ownerNode.rotation.x,this._ownerNode.rotation.z));const t=this._ownerNode.getAbsolutePivotPoint();if(e===1){if(this._targetPosition.copyFrom(this._ownerNode.absolutePosition),this._targetOrientation.copyFrom(this._ownerNode.rotationQuaternion),this._targetScaling.copyFrom(this._ownerNode.absoluteScaling),this.faceCameraOnDragStart&&this._scene.activeCamera){const s=c.Vector3[0];this._scene.activeCamera.position.subtractToRef(t,s),s.normalize();const i=c.Quaternion[0];this._scene.useRightHandedSystem?M.FromLookDirectionRHToRef(s,new d(0,1,0),i):M.FromLookDirectionLHToRef(s,new d(0,1,0),i),i.normalize(),M.RotationYawPitchRollToRef(i.toEulerAngles().y,0,0,c.Quaternion[0]),this._targetOrientation.copyFrom(c.Quaternion[0])}this._startingPosition.copyFrom(this._targetPosition),this._startingOrientation.copyFrom(this._targetOrientation),this._startingScaling.copyFrom(this._targetScaling)}else e===2&&(this._virtualTransformNode.setPivotPoint(new d(0,0,0),0),this._virtualTransformNode.position.copyFrom(this._ownerNode.absolutePosition),this._virtualTransformNode.scaling.copyFrom(this._ownerNode.absoluteScaling),this._virtualTransformNode.rotationQuaternion.copyFrom(this._ownerNode.absoluteRotationQuaternion),this._virtualTransformNode.setPivotPoint(t,1),this._resetVirtualMeshesPosition())}_targetDrag(e,t){this.currentDraggingPointerIds.length===1?this._onePointerPositionUpdated(e,t):this.currentDraggingPointerIds.length===2&&this._twoPointersPositionUpdated()}_targetDragEnd(){if(this.currentDraggingPointerIds.length===1){this._resetVirtualMeshesPosition();const e=this.faceCameraOnDragStart;this.faceCameraOnDragStart=!1,this._targetDragStart(),this.faceCameraOnDragStart=e}}detach(){super.detach(),this._ownerNode&&this._ownerNode.getScene().onBeforeRenderObservable.remove(this._sceneRenderObserver),this._virtualTransformNode&&this._virtualTransformNode.dispose()}}class da{constructor(){this._attachPointLocalOffset=new d,this._workingPosition=new d,this._workingQuaternion=new M,this._lastTick=-1,this._hit=!1,this.hitNormalOffset=.05,this.meshes=[],this.interpolatePose=!0,this.lerpTime=250,this.keepOrientationVertical=!0,this.enabled=!0,this.maxStickingDistance=.8}get name(){return"SurfaceMagnetism"}init(){}attach(e,t){this._attachedMesh=e,this._scene=t||e.getScene(),this._attachedMesh.rotationQuaternion||(this._attachedMesh.rotationQuaternion=M.RotationYawPitchRoll(this._attachedMesh.rotation.y,this._attachedMesh.rotation.x,this._attachedMesh.rotation.z)),this.updateAttachPoint(),this._workingPosition.copyFrom(this._attachedMesh.position),this._workingQuaternion.copyFrom(this._attachedMesh.rotationQuaternion),this._addObservables()}detach(){this._attachedMesh=null,this._removeObservables()}_getTargetPose(e){if(!this._attachedMesh)return null;if(e&&e.hit){const t=e.getNormal(!0,!0),s=e.pickedPoint;if(!t||!s)return null;t.normalize();const i=c.Vector3[0];return i.copyFrom(t),i.scaleInPlace(this.hitNormalOffset),i.addInPlace(s),this._attachedMesh.parent&&(c.Matrix[0].copyFrom(this._attachedMesh.parent.getWorldMatrix()).invert(),d.TransformNormalToRef(i,c.Matrix[0],i)),{position:i,quaternion:M.RotationYawPitchRoll(-Math.atan2(t.x,-t.z),this.keepOrientationVertical?0:Math.atan2(t.y,Math.sqrt(t.z*t.z+t.x*t.x)),0)}}return null}updateAttachPoint(){this._getAttachPointOffsetToRef(this._attachPointLocalOffset)}findAndUpdateTarget(e){if(this._hit=!1,!e.ray)return!1;const t=e.ray.intersectsMeshes(this.meshes)[0];if(this._attachedMesh&&t&&t.hit&&t.pickedMesh){const s=this._getTargetPose(t);s&&d.Distance(this._attachedMesh.position,s.position)<this.maxStickingDistance&&(this._workingPosition.copyFrom(s.position),this._workingQuaternion.copyFrom(s.quaternion),this._hit=!0)}return this._hit}_getAttachPointOffsetToRef(e){if(!this._attachedMesh){e.setAll(0);return}const t=c.Quaternion[0];t.copyFrom(this._attachedMesh.rotationQuaternion),this._attachedMesh.rotationQuaternion.copyFromFloats(0,0,0,1),this._attachedMesh.computeWorldMatrix();const s=this._attachedMesh.getHierarchyBoundingVectors(),i=c.Vector3[0];s.max.addToRef(s.min,i),i.scaleInPlace(.5),i.z=s.max.z;const a=c.Matrix[0];this._attachedMesh.getWorldMatrix().invertToRef(a),d.TransformCoordinatesToRef(i,a,e),this._attachedMesh.rotationQuaternion.copyFrom(t)}_updateTransformToGoal(e){if(!this._attachedMesh||!this._hit)return;const t=this._attachedMesh.parent;this._attachedMesh.setParent(null);const s=c.Vector3[0];if(d.TransformNormalToRef(this._attachPointLocalOffset,this._attachedMesh.getWorldMatrix(),s),!this.interpolatePose){this._attachedMesh.position.copyFrom(this._workingPosition).subtractInPlace(s),this._attachedMesh.rotationQuaternion.copyFrom(this._workingQuaternion);return}const i=new d;d.SmoothToRef(this._attachedMesh.position,this._workingPosition,e,this.lerpTime,i),this._attachedMesh.position.copyFrom(i);const a=new M;a.copyFrom(this._attachedMesh.rotationQuaternion),M.SmoothToRef(a,this._workingQuaternion,e,this.lerpTime,this._attachedMesh.rotationQuaternion),this._attachedMesh.setParent(t)}_addObservables(){this._pointerObserver=this._scene.onPointerObservable.add(e=>{this.enabled&&e.type==Ke.POINTERMOVE&&e.pickInfo&&this.findAndUpdateTarget(e.pickInfo)}),this._lastTick=Date.now(),this._onBeforeRender=this._scene.onBeforeRenderObservable.add(()=>{const e=Date.now();this._updateTransformToGoal(e-this._lastTick),this._lastTick=e})}_removeObservables(){this._scene.onPointerObservable.remove(this._pointerObserver),this._scene.onBeforeRenderObservable.remove(this._onBeforeRender),this._pointerObserver=null,this._onBeforeRender=null}}class ua{constructor(){this._tmpQuaternion=new M,this._tmpVectors=[new d,new d,new d,new d,new d,new d,new d],this._tmpMatrix=new R,this._tmpInvertView=new R,this._tmpForward=new d,this._tmpNodeForward=new d,this._tmpPosition=new d,this._workingPosition=new d,this._workingQuaternion=new M,this._lastTick=-1,this._recenterNextUpdate=!0,this.interpolatePose=!0,this.lerpTime=500,this.ignoreCameraPitchAndRoll=!1,this.pitchOffset=15,this.maxViewVerticalDegrees=30,this.maxViewHorizontalDegrees=30,this.orientToCameraDeadzoneDegrees=60,this.ignoreDistanceClamp=!1,this.ignoreAngleClamp=!1,this.verticalMaxDistance=0,this.defaultDistance=.8,this.maximumDistance=2,this.minimumDistance=.3,this.useFixedVerticalOffset=!1,this.fixedVerticalOffset=0,this._enabled=!0}get followedCamera(){return this._followedCamera||this._scene.activeCamera}set followedCamera(e){this._followedCamera=e}get name(){return"Follow"}init(){}attach(e,t){this._scene=e.getScene(),this.attachedNode=e,t&&(this.followedCamera=t),this._addObservables()}detach(){this.attachedNode=null,this._removeObservables()}recenter(){this._recenterNextUpdate=!0}_angleBetweenVectorAndPlane(e,t){return this._tmpVectors[0].copyFrom(e),e=this._tmpVectors[0],this._tmpVectors[1].copyFrom(t),t=this._tmpVectors[1],e.normalize(),t.normalize(),Math.PI/2-Math.acos(d.Dot(e,t))}_length2D(e){return Math.sqrt(e.x*e.x+e.z*e.z)}_distanceClamp(e,t=!1){let s=this.minimumDistance,i=this.maximumDistance;const a=this.defaultDistance,r=this._tmpVectors[0];r.copyFrom(e);let n=r.length();if(r.normalizeFromLength(n),this.ignoreCameraPitchAndRoll){s=this._length2D(r)*s,i=this._length2D(r)*i;const h=this._length2D(e);r.scaleInPlace(n/h),n=h}let o=n;return t?o=a:o=At(n,s,i),e.copyFrom(r).scaleInPlace(o),n!==o}_applyVerticalClamp(e){this.verticalMaxDistance!==0&&(e.y=At(e.y,-this.verticalMaxDistance,this.verticalMaxDistance))}_toOrientationQuatToRef(e,t){M.RotationYawPitchRollToRef(Math.atan2(e.x,e.z),Math.atan2(e.y,Math.sqrt(e.z*e.z+e.x*e.x)),0,t)}_applyPitchOffset(e){const t=this._tmpVectors[0],s=this._tmpVectors[1];t.copyFromFloats(0,0,this._scene.useRightHandedSystem?-1:1),s.copyFromFloats(1,0,0),d.TransformNormalToRef(t,e,t),t.y=0,t.normalize(),d.TransformNormalToRef(s,e,s),M.RotationAxisToRef(s,this.pitchOffset*Math.PI/180,this._tmpQuaternion),t.rotateByQuaternionToRef(this._tmpQuaternion,t),this._toOrientationQuatToRef(t,this._tmpQuaternion),this._tmpQuaternion.toRotationMatrix(this._tmpMatrix),e.copyFrom(this._tmpMatrix)}_angularClamp(e,t){const s=this._tmpVectors[5];s.copyFromFloats(0,0,this._scene.useRightHandedSystem?-1:1);const i=this._tmpVectors[6];i.copyFromFloats(1,0,0),d.TransformNormalToRef(s,e,s),d.TransformNormalToRef(i,e,i);const a=d.UpReadOnly;if(t.length()<Te)return!1;let n=!1;const o=this._tmpQuaternion;if(this.ignoreCameraPitchAndRoll){const _=d.GetAngleBetweenVectorsOnPlane(t,s,i);M.RotationAxisToRef(i,_,o),t.rotateByQuaternionToRef(o,t)}else{const _=-d.GetAngleBetweenVectorsOnPlane(t,s,i),g=this.maxViewVerticalDegrees*Math.PI/180*.5;_<-g?(M.RotationAxisToRef(i,-_-g,o),t.rotateByQuaternionToRef(o,t),n=!0):_>g&&(M.RotationAxisToRef(i,-_+g,o),t.rotateByQuaternionToRef(o,t),n=!0)}const h=this._angleBetweenVectorAndPlane(t,i)*(this._scene.useRightHandedSystem?-1:1),l=this.maxViewHorizontalDegrees*Math.PI/180*.5;return h<-l?(M.RotationAxisToRef(a,-h-l,o),t.rotateByQuaternionToRef(o,t),n=!0):h>l&&(M.RotationAxisToRef(a,-h+l,o),t.rotateByQuaternionToRef(o,t),n=!0),n}_orientationClamp(e,t){var n;const s=this._tmpVectors[0];s.copyFrom(e).scaleInPlace(-1).normalize();const i=this._tmpVectors[1],a=this._tmpVectors[2];i.copyFromFloats(0,1,0),d.CrossToRef(s,i,a);const r=a.length();r<Te||(a.normalizeFromLength(r),d.CrossToRef(a,s,i),(n=this.attachedNode)!=null&&n.getScene().useRightHandedSystem?M.FromLookDirectionRHToRef(s,i,t):M.FromLookDirectionLHToRef(s,i,t))}_passedOrientationDeadzone(e,t){const s=this._tmpVectors[5];return s.copyFrom(e),s.normalize(),Math.abs(d.GetAngleBetweenVectorsOnPlane(t,s,d.UpReadOnly))*180/Math.PI>this.orientToCameraDeadzoneDegrees}_updateLeashing(e){if(this.attachedNode&&this._enabled){const t=this.attachedNode.parent;this.attachedNode.setParent(null);const s=this.attachedNode.getWorldMatrix(),i=this._workingPosition,a=this._workingQuaternion,r=this.attachedNode.getPivotPoint(),n=this._tmpInvertView;n.copyFrom(e.getViewMatrix()),n.invert(),d.TransformCoordinatesToRef(r,s,i);const o=this._tmpPosition;o.copyFromFloats(0,0,0),d.TransformCoordinatesToRef(o,s,o),o.scaleInPlace(-1).subtractInPlace(r),i.subtractInPlace(e.globalPosition),this.ignoreCameraPitchAndRoll&&this._applyPitchOffset(n);let h=!1;const l=this._tmpForward;l.copyFromFloats(0,0,this._scene.useRightHandedSystem?-1:1),d.TransformNormalToRef(l,n,l);const _=this._tmpNodeForward;if(_.copyFromFloats(0,0,this._scene.useRightHandedSystem?-1:1),d.TransformNormalToRef(_,s,_),this._recenterNextUpdate)i.copyFrom(l).scaleInPlace(this.defaultDistance);else if(this.ignoreAngleClamp){const p=i.length();i.copyFrom(l).scaleInPlace(p)}else h=this._angularClamp(n,i);let g=!1;this.ignoreDistanceClamp||(g=this._distanceClamp(i,h),this._applyVerticalClamp(i)),this.useFixedVerticalOffset&&(i.y=o.y-e.globalPosition.y+this.fixedVerticalOffset),(h||g||this._passedOrientationDeadzone(i,_)||this._recenterNextUpdate)&&this._orientationClamp(i,a),this._workingPosition.subtractInPlace(r),this._recenterNextUpdate=!1,this.attachedNode.setParent(t)}}_updateTransformToGoal(e){if(!this.attachedNode||!this.followedCamera||!this._enabled)return;this.attachedNode.rotationQuaternion||(this.attachedNode.rotationQuaternion=M.Identity());const t=this.attachedNode.parent;if(this.attachedNode.setParent(null),!this.interpolatePose){this.attachedNode.position.copyFrom(this.followedCamera.globalPosition).addInPlace(this._workingPosition),this.attachedNode.rotationQuaternion.copyFrom(this._workingQuaternion);return}const s=new d;s.copyFrom(this.attachedNode.position).subtractInPlace(this.followedCamera.globalPosition),d.SmoothToRef(s,this._workingPosition,e,this.lerpTime,s),s.addInPlace(this.followedCamera.globalPosition),this.attachedNode.position.copyFrom(s);const i=new M;i.copyFrom(this.attachedNode.rotationQuaternion),M.SmoothToRef(i,this._workingQuaternion,e,this.lerpTime,this.attachedNode.rotationQuaternion),this.attachedNode.setParent(t)}_addObservables(){this._lastTick=Date.now(),this._onBeforeRender=this._scene.onBeforeRenderObservable.add(()=>{if(!this.followedCamera)return;const e=Date.now();this._updateLeashing(this.followedCamera),this._updateTransformToGoal(e-this._lastTick),this._lastTick=e})}_removeObservables(){this._onBeforeRender&&this._scene.onBeforeRenderObservable.remove(this._onBeforeRender)}}class Zt{constructor(e=d.Zero(),t=d.Up()){this.position=e,this.normal=t}clone(){return new Zt(this.position.clone(),this.normal.clone())}}class Yt{constructor(e=d.Zero(),t=d.Up(),s=Ee.Zero()){this.position=e,this.normal=t,this.uv=s}clone(){return new Yt(this.position.clone(),this.normal.clone(),this.uv.clone())}}class _a extends Vs{set distanceBetweenEyes(e){this._distanceBetweenEyes=e}get distanceBetweenEyes(){return this._distanceBetweenEyes}set distanceToProjectionPlane(e){this._distanceToProjectionPlane=e}get distanceToProjectionPlane(){return this._distanceToProjectionPlane}constructor(e,t,s,i=1,a=.065){super(e,t,s),this._distanceBetweenEyes=a,this._distanceToProjectionPlane=i,this.setCameraRigMode(lt.RIG_MODE_STEREOSCOPIC_SIDEBYSIDE_PARALLEL,{stereoHalfAngle:0}),this._cameraRigParams.stereoHalfAngle=0,this._cameraRigParams.interaxialDistance=a}getClassName(){return"StereoscopicUniversalCamera"}createRigCamera(e){const t=new rs(e,d.Zero(),this.getScene()),s=new ie("tm_"+e,this.getScene());return t.parent=s,s.setPivotMatrix(R.Identity(),!1),t.isRigCamera=!0,t.rigParent=this,t}_updateRigCameras(){for(let e=0;e<this._rigCameras.length;e++){const t=this._rigCameras[e];t.minZ=this.minZ,t.maxZ=this.maxZ,t.fov=this.fov,t.upVector.copyFrom(this.upVector),t.rotationQuaternion?t.rotationQuaternion.copyFrom(this.rotationQuaternion):t.rotation.copyFrom(this.rotation),this._updateCamera(this._rigCameras[e],e)}}_updateCamera(e,t){const s=this.distanceBetweenEyes/2,i=s/this.distanceToProjectionPlane;e.position.copyFrom(this.position),e.position.addInPlaceFromFloats(t===0?-s:s,0,-this._distanceToProjectionPlane);const a=e.parent,r=a.getPivotMatrix();r.setTranslationFromFloats(t===0?s:-s,0,0),r.setRowFromFloats(2,t===0?i:-i,0,1,0),a.setPivotMatrix(r,!1)}_setRigMode(){this._rigCameras[0].viewport=new Ct(0,0,.5,1),this._rigCameras[1].viewport=new Ct(.5,0,.5,1);for(let e=0;e<this._rigCameras.length;e++)this._updateCamera(this._rigCameras[e],e)}}class pa{constructor(e){this._engine=e}async _initializePlatform(){if(!this._platform)if(this._engine.getCaps().supportComputeShaders){const e=await S(()=>Promise.resolve().then(()=>pi),void 0);this._platform=new e.ComputeShaderBoundingHelper(this._engine)}else if(this._engine.getCaps().supportTransformFeedbacks){const e=await S(()=>import("./nativeXRFrame-DgHx7Vcb.js").then(t=>t.rA),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29]));this._platform=new e.TransformFeedbackBoundingHelper(this._engine)}else throw new Error("Your engine does not support Compute Shaders or Transform Feedbacks")}async computeAsync(e){return await this._initializePlatform(),this._platform.processAsync(e)}async batchInitializeAsync(e){return await this._initializePlatform(),this._platform.registerMeshListAsync(e)}batchProcess(){this._platform.processMeshList()}async batchFetchResultsAsync(){return this._platform.fetchResultsForMeshListAsync()}dispose(){this._platform.dispose()}}class _i{constructor(e){this._computeShadersCache={},this._positionBuffers={},this._indexBuffers={},this._weightBuffers={},this._indexExtraBuffers={},this._weightExtraBuffers={},this._morphTargetInfluenceBuffers={},this._morphTargetTextureIndexBuffers={},this._ubos=[],this._uboIndex=0,this._processedMeshes=[],this._computeShaders=[],this._uniqueComputeShaders=new Set,this._resultBuffers=[],this._engine=e}_getComputeShader(e,t,s){let i;const a=e.join(`
`);if(this._computeShadersCache[a])i=this._computeShadersCache[a];else{const r={positionBuffer:{group:0,binding:0},resultBuffer:{group:0,binding:1},settings:{group:0,binding:7}};t&&(r.boneSampler={group:0,binding:2},r.indexBuffer={group:0,binding:3},r.weightBuffer={group:0,binding:4},r.indexExtraBuffer={group:0,binding:5},r.weightExtraBuffer={group:0,binding:6}),s&&(r.morphTargets={group:0,binding:8},r.morphTargetInfluences={group:0,binding:9},r.morphTargetTextureIndices={group:0,binding:10}),i=new zs(`boundingInfoCompute${t?"_bones":""}${s?"_morphs":""}`,this._engine,"boundingInfo",{bindingsMapping:r,defines:e}),this._computeShadersCache[a]=i}return i}_getUBO(){if(this._uboIndex>=this._ubos.length){const e=new ns(this._engine);e.addFloat3("morphTargetTextureInfo",0,0,0),e.addUniform("morphTargetCount",1),e.addUniform("indexResult",1),this._ubos.push(e)}return this._ubos[this._uboIndex++]}_extractDataAndLink(e,t,s,i,a,r){var h;let n;const o=t.getTotalVertices();if(r[t.uniqueId])n=r[t.uniqueId];else{const l=(h=t.getVertexBuffer(s))==null?void 0:h.getFloatData(o);n=new _t(this._engine,Float32Array.BYTES_PER_ELEMENT*o*i),n.update(l),r[t.uniqueId]=n}e.setStorageBuffer(a,n)}_prepareStorage(e,t,s,i,a,r){let n;i[s]?n=i[s]:(n=new _t(this._engine,Float32Array.BYTES_PER_ELEMENT*a),i[s]=n),n.update(r),e.setStorageBuffer(t,n)}async processAsync(e){await this.registerMeshListAsync(e),this.processMeshList(),await this.fetchResultsForMeshListAsync()}registerMeshListAsync(e){this._disposeForMeshList(),Array.isArray(e)||(e=[e]);let t=0;for(let s=0;s<e.length;s++){const i=e[s];if(i.getTotalVertices()===0||!i.getVertexBuffer||!i.getVertexBuffer(E.PositionKind))continue;this._processedMeshes.push(i);const r=i.morphTargetManager;r&&r.supportsPositions&&(t=Math.max(t,r.numTargets))}for(let s=0;s<this._processedMeshes.length;s++){const i=this._processedMeshes[s];let a=[""],r=!1;i&&i.useBones&&i.computeBonesUsingShaders&&i.skeleton&&(a.push("#define NUM_BONE_INFLUENCERS "+i.numBoneInfluencers),r=!0);const n=this._getComputeShader(a,r,!1);this._uniqueComputeShaders.add(n);const o=i.morphTargetManager;if(o&&o.supportsPositions){a=a.slice(),a.push("#define MORPHTARGETS"),a.push("#define NUM_MORPH_INFLUENCERS "+t);const l=this._getComputeShader(a,r,!0);this._uniqueComputeShaders.add(l),this._computeShaders.push([n,l])}else this._computeShaders.push([n,n]);const h=this._getUBO();h.updateUInt("indexResult",s),h.update()}return new Promise(s=>{os(()=>{const i=this._uniqueComputeShaders.keys();for(let a=i.next();a.done!==!0;a=i.next())if(!a.value.isReady())return!1;return!0},s)})}processMeshList(){if(this._processedMeshes.length===0)return;this._uboIndex=0;const e=8*this._processedMeshes.length,t=new Float32Array(e),s=new _t(this._engine,Float32Array.BYTES_PER_ELEMENT*e);this._resultBuffers.push(s);for(let i=0;i<this._processedMeshes.length;i++)t[i*8+0]=Number.POSITIVE_INFINITY,t[i*8+1]=Number.POSITIVE_INFINITY,t[i*8+2]=Number.POSITIVE_INFINITY,t[i*8+3]=Number.NEGATIVE_INFINITY,t[i*8+4]=Number.NEGATIVE_INFINITY,t[i*8+5]=Number.NEGATIVE_INFINITY;s.update(t);for(let i=0;i<this._processedMeshes.length;i++){const a=this._processedMeshes[i],r=a.getTotalVertices(),[n,o]=this._computeShaders[i],h=a.morphTargetManager,l=h&&h.numInfluencers>0&&h.supportsPositions,_=l?o:n;if(this._extractDataAndLink(_,a,E.PositionKind,3,"positionBuffer",this._positionBuffers),a&&a.useBones&&a.computeBonesUsingShaders&&a.skeleton&&a.skeleton.useTextureToStoreBoneMatrices){this._extractDataAndLink(_,a,E.MatricesIndicesKind,4,"indexBuffer",this._indexBuffers),this._extractDataAndLink(_,a,E.MatricesWeightsKind,4,"weightBuffer",this._weightBuffers);const p=a.skeleton.getTransformMatrixTexture(a);_.setTexture("boneSampler",p,!1),a.numBoneInfluencers>4&&(this._extractDataAndLink(_,a,E.MatricesIndicesExtraKind,4,"indexExtraBuffer",this._indexExtraBuffers),this._extractDataAndLink(_,a,E.MatricesWeightsExtraKind,4,"weightExtraBuffer",this._weightExtraBuffers))}const g=this._getUBO();if(l){const p=h._targetStoreTexture;_.setTexture("morphTargets",p,!1),this._prepareStorage(_,"morphTargetInfluences",a.uniqueId,this._morphTargetInfluenceBuffers,h.numInfluencers,h.influences),this._prepareStorage(_,"morphTargetTextureIndices",a.uniqueId,this._morphTargetTextureIndexBuffers,h.numInfluencers,h._morphTargetTextureIndices),g.updateFloat3("morphTargetTextureInfo",h._textureVertexStride,h._textureWidth,h._textureHeight),g.updateInt("morphTargetCount",h.numInfluencers),g.update()}_.setStorageBuffer("resultBuffer",s),_.setUniformBuffer("settings",g),_.dispatch(Math.ceil(r/256)),this._engine.flushFramebuffer()}}fetchResultsForMeshListAsync(){return new Promise(e=>{const t=[];let s=0;for(let o=0;o<this._resultBuffers.length;o++){const h=this._resultBuffers[o].getBuffer();t.push(h),s+=h.capacity}const i=new Float32Array(s/Float32Array.BYTES_PER_ELEMENT),a=d.Zero(),r=d.Zero(),n={minimum:a,maximum:r};this._engine.readFromMultipleStorageBuffers(t,0,void 0,i,!0).then(()=>{let o=0;for(let h=0;h<this._resultBuffers.length;h++){for(let l=0;l<this._processedMeshes.length;l++){const _=this._processedMeshes[l];d.FromArrayToRef(i,o+l*8,a),d.FromArrayToRef(i,o+l*8+3,r),h>0&&(a.minimizeInPlace(_.getBoundingInfo().minimum),r.maximizeInPlace(_.getBoundingInfo().maximum)),_._refreshBoundingInfoDirect(n)}o+=8*this._processedMeshes.length}for(const h of this._resultBuffers)h.dispose();this._resultBuffers=[],this._uboIndex=0,e()})})}_disposeCache(e){for(const t in e)e[t].dispose()}_disposeForMeshList(){for(const e of this._resultBuffers)e.dispose();this._resultBuffers=[],this._processedMeshes=[],this._computeShaders=[],this._uniqueComputeShaders=new Set}dispose(){this._disposeCache(this._positionBuffers),this._positionBuffers={},this._disposeCache(this._indexBuffers),this._indexBuffers={},this._disposeCache(this._weightBuffers),this._weightBuffers={},this._disposeCache(this._morphTargetInfluenceBuffers),this._morphTargetInfluenceBuffers={},this._disposeCache(this._morphTargetTextureIndexBuffers),this._morphTargetTextureIndexBuffers={};for(const e of this._ubos)e.dispose();this._ubos=[],this._computeShadersCache={},this._engine=void 0,this._disposeForMeshList()}}const pi=Object.freeze(Object.defineProperty({__proto__:null,ComputeShaderBoundingHelper:_i},Symbol.toStringTag,{value:"Module"}));class he extends Ae{get coloredMaterial(){return this._coloredMaterial}get hoverMaterial(){return this._hoverMaterial}get disableMaterial(){return this._disableMaterial}static _CreateArrow(e,t,s=1,i=!1){const a=new ie("arrow",e),r=xt("cylinder",{diameterTop:0,height:.075,diameterBottom:.0375*(1+(s-1)/4),tessellation:96},e),n=xt("cylinder",{diameterTop:.005*s,height:.275,diameterBottom:.005*s,tessellation:96},e);return r.parent=a,r.material=t,r.rotation.x=Math.PI/2,r.position.z+=.3,n.parent=a,n.material=t,n.position.z+=.275/2,n.rotation.x=Math.PI/2,i&&(n.visibility=0,r.visibility=0),a}static _CreateArrowInstance(e,t){const s=new ie("arrow",e);for(const i of t.getChildMeshes()){const a=i.createInstance(i.name);a.parent=s}return s}constructor(e,t=O.Gray(),s=Se.DefaultUtilityLayer,i=null,a=1,r=O.Yellow(),n=O.Gray()){var f;super(s),this._pointerObserver=null,this.snapDistance=0,this.onSnapObservable=new W,this._isEnabled=!0,this._parent=null,this._dragging=!1,this._parent=i,this._coloredMaterial=new J("",s.utilityLayerScene),this._coloredMaterial.diffuseColor=t,this._coloredMaterial.specularColor=t.subtract(new O(.1,.1,.1)),this._hoverMaterial=new J("",s.utilityLayerScene),this._hoverMaterial.diffuseColor=r,this._disableMaterial=new J("",s.utilityLayerScene),this._disableMaterial.diffuseColor=n,this._disableMaterial.alpha=.4;const o=he._CreateArrow(s.utilityLayerScene,this._coloredMaterial,a),h=he._CreateArrow(s.utilityLayerScene,this._coloredMaterial,a+4,!0);this._gizmoMesh=new fe("",s.utilityLayerScene),this._gizmoMesh.addChild(o),this._gizmoMesh.addChild(h),this._gizmoMesh.lookAt(this._rootMesh.position.add(e)),this._gizmoMesh.scaling.scaleInPlace(1/3),this._gizmoMesh.parent=this._rootMesh;let l=0;const _={snapDistance:0};this.dragBehavior=new ct({dragAxis:e}),this.dragBehavior.moveAttached=!1,this.dragBehavior.updateDragPlane=!1,this._rootMesh.addBehavior(this.dragBehavior),this.dragBehavior.onDragObservable.add(m=>{if(this.attachedNode){let b=!1;if(this.snapDistance==0)this.attachedNode.getWorldMatrix().getTranslationToRef(c.Vector3[2]),c.Vector3[2].addInPlace(m.delta),this.dragBehavior.validateDrag(c.Vector3[2])&&(this.attachedNode.position&&this.attachedNode.position.addInPlaceFromFloats(m.delta.x,m.delta.y,m.delta.z),this.attachedNode.getWorldMatrix().addTranslationFromFloats(m.delta.x,m.delta.y,m.delta.z),this.attachedNode.updateCache(),b=!0);else if(l+=m.dragDistance,Math.abs(l)>this.snapDistance){const y=Math.floor(Math.abs(l)/this.snapDistance);l=l%this.snapDistance,m.delta.normalizeToRef(c.Vector3[1]),c.Vector3[1].scaleInPlace(this.snapDistance*y),this.attachedNode.getWorldMatrix().getTranslationToRef(c.Vector3[2]),c.Vector3[2].addInPlace(c.Vector3[1]),this.dragBehavior.validateDrag(c.Vector3[2])&&(this.attachedNode.getWorldMatrix().addTranslationFromFloats(c.Vector3[1].x,c.Vector3[1].y,c.Vector3[1].z),this.attachedNode.updateCache(),_.snapDistance=this.snapDistance*y*Math.sign(l),this.onSnapObservable.notifyObservers(_),b=!0)}b&&this._matrixChanged()}}),this.dragBehavior.onDragStartObservable.add(()=>{this._dragging=!0}),this.dragBehavior.onDragEndObservable.add(()=>{this._dragging=!1});const g=s._getSharedGizmoLight();g.includedOnlyMeshes=g.includedOnlyMeshes.concat(this._rootMesh.getChildMeshes(!1));const p={gizmoMeshes:o.getChildMeshes(),colliderMeshes:h.getChildMeshes(),material:this._coloredMaterial,hoverMaterial:this._hoverMaterial,disableMaterial:this._disableMaterial,active:!1,dragBehavior:this.dragBehavior};(f=this._parent)==null||f.addToAxisCache(h,p),this._pointerObserver=s.utilityLayerScene.onPointerObservable.add(m=>{var b;if(!this._customMeshSet&&(this._isHovered=p.colliderMeshes.indexOf((b=m==null?void 0:m.pickInfo)==null?void 0:b.pickedMesh)!=-1,!this._parent)){const y=this.dragBehavior.enabled?this._isHovered||this._dragging?this._hoverMaterial:this._coloredMaterial:this._disableMaterial;this._setGizmoMeshMaterial(p.gizmoMeshes,y)}}),this.dragBehavior.onEnabledObservable.add(m=>{this._setGizmoMeshMaterial(p.gizmoMeshes,m?p.material:p.disableMaterial)})}_attachedNodeChanged(e){this.dragBehavior&&(this.dragBehavior.enabled=!!e)}set isEnabled(e){this._isEnabled=e,e?this._parent&&(this.attachedMesh=this._parent.attachedMesh,this.attachedNode=this._parent.attachedNode):(this.attachedMesh=null,this.attachedNode=null)}get isEnabled(){return this._isEnabled}dispose(){this.onSnapObservable.clear(),this.gizmoLayer.utilityLayerScene.onPointerObservable.remove(this._pointerObserver),this.dragBehavior.detach(),this._gizmoMesh&&this._gizmoMesh.dispose(),[this._coloredMaterial,this._hoverMaterial,this._disableMaterial].forEach(e=>{e&&e.dispose()}),super.dispose()}}class Fe{get scaleLines(){return this._scaleLines}set scaleLines(e){this._scaleLines=e,this._xAxis.scaling.setAll(this._scaleLines*this._scaleLinesFactor),this._yAxis.scaling.setAll(this._scaleLines*this._scaleLinesFactor),this._zAxis.scaling.setAll(this._scaleLines*this._scaleLinesFactor)}get xAxis(){return this._xAxis}get yAxis(){return this._yAxis}get zAxis(){return this._zAxis}constructor(e,t=1,s=2,i,a,r,n=1){if(this._scaleLinesFactor=4,this._instanced=!1,this.scene=null,this._scaleLines=1,e=e||Qe.LastCreatedScene,!!e){if(!i){const o=new J("xAxisMaterial",e);o.disableLighting=!0,o.emissiveColor=O.Red().scale(.5),i=he._CreateArrow(e,o,n)}if(!a){const o=new J("yAxisMaterial",e);o.disableLighting=!0,o.emissiveColor=O.Green().scale(.5),a=he._CreateArrow(e,o,n)}if(!r){const o=new J("zAxisMaterial",e);o.disableLighting=!0,o.emissiveColor=O.Blue().scale(.5),r=he._CreateArrow(e,o,n)}this._xAxis=i,this._yAxis=a,this._zAxis=r,this.scaleLines=t,s!=null&&(Fe._SetRenderingGroupId(this._xAxis,s),Fe._SetRenderingGroupId(this._yAxis,s),Fe._SetRenderingGroupId(this._zAxis,s)),this.scene=e,this.update(new d,d.Right(),d.Up(),d.Forward())}}update(e,t,s,i){this._xAxis.position.copyFrom(e),this._xAxis.setDirection(t),this._yAxis.position.copyFrom(e),this._yAxis.setDirection(s),this._zAxis.position.copyFrom(e),this._zAxis.setDirection(i)}createInstance(){const e=he._CreateArrowInstance(this.scene,this._xAxis),t=he._CreateArrowInstance(this.scene,this._yAxis),s=he._CreateArrowInstance(this.scene,this._zAxis),i=new Fe(this.scene,this.scaleLines,null,e,t,s);return i._instanced=!0,i}dispose(){this._xAxis&&this._xAxis.dispose(!1,!this._instanced),this._yAxis&&this._yAxis.dispose(!1,!this._instanced),this._zAxis&&this._zAxis.dispose(!1,!this._instanced),this.scene=null}static _SetRenderingGroupId(e,t){e.getChildMeshes().forEach(s=>{s.renderingGroupId=t})}}class ga extends Fe{constructor(e,t,s,i=1){super(e,i),this.pos=d.Zero(),this.xaxis=d.Zero(),this.yaxis=d.Zero(),this.zaxis=d.Zero(),this.mesh=s,this.bone=t}update(){if(!this.mesh||!this.bone)return;const e=this.bone;e.getAbsolutePositionToRef(this.mesh,this.pos),e.getDirectionToRef($e.X,this.mesh,this.xaxis),e.getDirectionToRef($e.Y,this.mesh,this.yaxis),e.getDirectionToRef($e.Z,this.mesh,this.zaxis),super.update(this.pos,this.xaxis,this.yaxis,this.zaxis)}dispose(){this.mesh&&(this.mesh=null,this.bone=null,super.dispose())}}class ma{constructor(e,t){if(this._impostors=[],this._meshes=[],this._bodies=[],this._inertiaBodies=[],this._constraints=[],this._bodyMeshes=[],this._inertiaMeshes=[],this._constraintMeshes=[],this._numMeshes=0,this._numBodies=0,this._numInertiaBodies=0,this._numConstraints=0,this._debugMeshMeshes=new Array,this._constraintAxesSize=.4,this._constraintAngularSize=.4,this._scene=e||Qe.LastCreatedScene,!this._scene)return;const s=this._scene.getPhysicsEngine();s&&(this._physicsEnginePlugin=s.getPhysicsPlugin()),this._utilityLayer=new Se(this._scene,!1),this._utilityLayer.pickUtilitySceneFirst=!1,this._utilityLayer.utilityLayerScene.autoClearDepthAndStencil=!0,t&&(this._constraintAxesSize=.4*t,this._constraintAngularSize=.4*t)}_updateDebugMeshes(){const e=this._physicsEnginePlugin;(e==null?void 0:e.getPluginVersion())===1?this._updateDebugMeshesV1():this._updateDebugMeshesV2()}_updateDebugMeshesV1(){const e=this._physicsEnginePlugin;for(let t=0;t<this._numMeshes;t++){const s=this._impostors[t];if(s)if(s.isDisposed)this.hideImpostor(this._impostors[t--]);else{if(s.type===ye.MeshImpostor)continue;const i=this._meshes[t];i&&e&&e.syncMeshWithImpostor(i,s)}}}_updateDebugMeshesV2(){const e=this._physicsEnginePlugin;for(let t=0;t<this._numBodies;){const s=this._bodies[t];if(s&&s.isDisposed&&this.hideBody(s))continue;const i=this._bodyMeshes[t];s&&i&&e.syncTransform(s,i),t++}}_updateInertiaMeshes(){for(let e=0;e<this._numInertiaBodies;){const t=this._inertiaBodies[e];if(t&&t.isDisposed&&this.hideInertia(t))continue;const s=this._inertiaMeshes[e];t&&s&&this._updateDebugInertia(t,s),e++}}_updateDebugInertia(e,t){var r;const s=R.Identity(),i=R.Identity(),a=R.Identity();if(e._pluginDataInstances.length){const n=t,o=n._thinInstanceDataStorage.matrixData,h=e.transformNode._thinInstanceDataStorage.matrixData;for(let l=0;l<e._pluginDataInstances.length;l++){const _=e.getMassProperties(l);this._getMeshDebugInertiaMatrixToRef(_,s),R.FromArrayToRef(h,l*16,i),s.multiplyToRef(i,a),a.copyToArray(o,l*16)}n.thinInstanceBufferUpdated("matrix")}else{const n=e.getMassProperties();if(this._getMeshDebugInertiaMatrixToRef(n,s),(r=e.transformNode.rotationQuaternion)==null||r.toRotationMatrix(i),i.setTranslation(e.transformNode.position),e.transformNode.parent){const o=e.transformNode.parent.computeWorldMatrix(!0);i.multiplyToRef(o,i)}s.multiplyToRef(i,s),s.decomposeToTransformNode(t)}}_updateDebugConstraints(){for(let e=0;e<this._numConstraints;e++){const t=this._constraints[e],s=this._constraintMeshes[e];t&&s&&this._updateDebugConstraint(t,s[0])}}_makeScalingUnitInPlace(e){Math.abs(e.x-1)>Te&&(e.x=1*Math.sign(e.x)),Math.abs(e.y-1)>Te&&(e.y=1*Math.sign(e.y)),Math.abs(e.z-1)>Te&&(e.z=1*Math.sign(e.z))}_updateDebugConstraint(e,t){if(!e._initOptions)return;const{pivotA:s,pivotB:i,axisA:a,axisB:r,perpAxisA:n,perpAxisB:o}=e._initOptions;!s||!i||!a||!r||!n||!o||t.getDescendants(!0).forEach(h=>{const l=h.getDescendants(!0)[0],_=h.getDescendants(!0)[1],{parentBody:g,parentBodyIndex:p}=l.metadata,{childBody:f,childBodyIndex:m}=_.metadata,b=this._getTransformFromBodyToRef(g,c.Matrix[0],p),y=this._getTransformFromBodyToRef(f,c.Matrix[1],m);b.decomposeToTransformNode(l),this._makeScalingUnitInPlace(l.scaling),y.decomposeToTransformNode(_),this._makeScalingUnitInPlace(_.scaling);const T=l.getDescendants(!0)[0];T.position.copyFrom(s);const v=_.getDescendants(!0)[0];v.position.copyFrom(i),M.FromRotationMatrixToRef(R.FromXYZAxesToRef(a,n,d.CrossToRef(a,n,c.Vector3[0]),c.Matrix[0]),T.rotationQuaternion),M.FromRotationMatrixToRef(R.FromXYZAxesToRef(r,o,d.CrossToRef(r,o,c.Vector3[1]),c.Matrix[1]),v.rotationQuaternion)})}showImpostor(e,t){if(!this._scene)return null;for(let i=0;i<this._numMeshes;i++)if(this._impostors[i]==e)return null;const s=this._getDebugMesh(e,t);return s&&(this._impostors[this._numMeshes]=e,this._meshes[this._numMeshes]=s,this._numMeshes===0&&(this._renderFunction=()=>this._updateDebugMeshes(),this._scene.registerBeforeRender(this._renderFunction)),this._numMeshes++),s}showBody(e){if(!this._scene)return null;for(let s=0;s<this._numBodies;s++)if(this._bodies[s]==e)return null;const t=this._getDebugBodyMesh(e);return t&&(this._bodies[this._numBodies]=e,this._bodyMeshes[this._numBodies]=t,this._numBodies===0&&(this._renderFunction=()=>this._updateDebugMeshes(),this._scene.registerBeforeRender(this._renderFunction)),this._numBodies++),t}showInertia(e){if(!this._scene)return null;for(let s=0;s<this._numInertiaBodies;s++)if(this._inertiaBodies[s]==e)return null;const t=this._getDebugInertiaMesh(e);return t&&(this._inertiaBodies[this._numInertiaBodies]=e,this._inertiaMeshes[this._numInertiaBodies]=t,this._numInertiaBodies===0&&(this._inertiaRenderFunction=()=>this._updateInertiaMeshes(),this._scene.registerBeforeRender(this._inertiaRenderFunction)),this._numInertiaBodies++),t}showConstraint(e){if(!this._scene)return null;for(let s=0;s<this._numConstraints;s++)if(this._constraints[s]==e)return null;const t=this._getDebugConstraintMesh(e);return t&&(this._constraints[this._numConstraints]=e,this._constraintMeshes[this._numConstraints]=t,this._numConstraints===0&&(this._constraintRenderFunction=()=>this._updateDebugConstraints(),this._scene.registerBeforeRender(this._constraintRenderFunction)),this._numConstraints++),t?t[0]:null}hideImpostor(e){if(!e||!this._scene||!this._utilityLayer)return;let t=!1;const s=this._utilityLayer.utilityLayerScene;for(let i=0;i<this._numMeshes;i++)if(this._impostors[i]==e){const a=this._meshes[i];if(!a)continue;s.removeMesh(a),a.dispose();const r=this._debugMeshMeshes.indexOf(a);r>-1&&this._debugMeshMeshes.splice(r,1),this._numMeshes--,this._numMeshes>0?(this._meshes[i]=this._meshes[this._numMeshes],this._impostors[i]=this._impostors[this._numMeshes],this._meshes[this._numMeshes]=null,this._impostors[this._numMeshes]=null):(this._meshes[0]=null,this._impostors[0]=null),t=!0;break}t&&this._numMeshes===0&&this._scene.unregisterBeforeRender(this._renderFunction)}hideBody(e){if(!e||!this._scene||!this._utilityLayer)return!1;let t=!1;const s=this._utilityLayer.utilityLayerScene;for(let i=0;i<this._numBodies;i++)if(this._bodies[i]===e){const a=this._bodyMeshes[i];if(!a)continue;s.removeMesh(a),a.dispose(),this._numBodies--,this._numBodies>0?(this._bodyMeshes[i]=this._bodyMeshes[this._numBodies],this._bodies[i]=this._bodies[this._numBodies],this._bodyMeshes[this._numBodies]=null,this._bodies[this._numBodies]=null):(this._bodyMeshes[0]=null,this._bodies[0]=null),t=!0;break}return t&&this._numBodies===0&&this._scene.unregisterBeforeRender(this._renderFunction),t}hideInertia(e){if(!e||!this._scene||!this._utilityLayer)return!1;let t=!1;const s=this._utilityLayer.utilityLayerScene;for(let i=0;i<this._numInertiaBodies;i++)if(this._inertiaBodies[i]===e){const a=this._inertiaMeshes[i];if(!a)continue;s.removeMesh(a),a.dispose(),this._inertiaBodies.splice(i,1),this._inertiaMeshes.splice(i,1),this._numInertiaBodies--,t=!0;break}return t&&this._numInertiaBodies===0&&this._scene.unregisterBeforeRender(this._inertiaRenderFunction),t}hideConstraint(e){if(!e||!this._scene||!this._utilityLayer)return;let t=!1;const s=this._utilityLayer.utilityLayerScene;for(let i=0;i<this._numConstraints;i++)if(this._constraints[i]===e){const a=this._constraintMeshes[i];if(!a)continue;a.forEach(r=>{s.removeMesh(r),r.dispose()}),this._constraints.splice(i,1),this._constraintMeshes.splice(i,1),this._numConstraints--,this._numConstraints>0?(this._constraints[i]=this._constraints[this._numConstraints],this._constraintMeshes[i]=this._constraintMeshes[this._numConstraints],this._constraints[this._numConstraints]=null,this._constraintMeshes[this._numConstraints]=null):(this._constraints[0]=null,this._constraintMeshes[0]=null),t=!0;break}t&&this._numConstraints===0&&this._scene.unregisterBeforeRender(this._constraintRenderFunction)}_getDebugMaterial(e){return this._debugMaterial||(this._debugMaterial=new J("",e),this._debugMaterial.wireframe=!0,this._debugMaterial.emissiveColor=O.White(),this._debugMaterial.disableLighting=!0),this._debugMaterial}_getDebugInertiaMaterial(e){return this._debugInertiaMaterial||(this._debugInertiaMaterial=new J("",e),this._debugInertiaMaterial.disableLighting=!0,this._debugInertiaMaterial.alpha=0),this._debugInertiaMaterial}_getDebugAxisColoredMaterial(e,t){const s=new J("",t);return s.emissiveColor=e==0?O.Red():e==1?O.Green():O.Blue(),s.disableLighting=!0,s}_getDebugBoxMesh(e){return this._debugBoxMesh||(this._debugBoxMesh=Ls("physicsBodyBoxViewMesh",{size:1},e),this._debugBoxMesh.rotationQuaternion=M.Identity(),this._debugBoxMesh.material=this._getDebugMaterial(e),this._debugBoxMesh.setEnabled(!1)),this._debugBoxMesh.createInstance("physicsBodyBoxViewInstance")}_getDebugSphereMesh(e){return this._debugSphereMesh||(this._debugSphereMesh=Ns("physicsBodySphereViewMesh",{diameter:1},e),this._debugSphereMesh.rotationQuaternion=M.Identity(),this._debugSphereMesh.material=this._getDebugMaterial(e),this._debugSphereMesh.setEnabled(!1)),this._debugSphereMesh.createInstance("physicsBodySphereViewInstance")}_getDebugCapsuleMesh(e){return this._debugCapsuleMesh||(this._debugCapsuleMesh=Ws("physicsBodyCapsuleViewMesh",{height:1},e),this._debugCapsuleMesh.rotationQuaternion=M.Identity(),this._debugCapsuleMesh.material=this._getDebugMaterial(e),this._debugCapsuleMesh.setEnabled(!1)),this._debugCapsuleMesh.createInstance("physicsBodyCapsuleViewInstance")}_getDebugCylinderMesh(e){return this._debugCylinderMesh||(this._debugCylinderMesh=xt("physicsBodyCylinderViewMesh",{diameterTop:1,diameterBottom:1,height:1},e),this._debugCylinderMesh.rotationQuaternion=M.Identity(),this._debugCylinderMesh.material=this._getDebugMaterial(e),this._debugCylinderMesh.setEnabled(!1)),this._debugCylinderMesh.createInstance("physicsBodyCylinderViewInstance")}_getDebugMeshMesh(e,t){const s=new fe(e.name,t,null,e);return s.setParent(e),s.position=d.Zero(),s.material=this._getDebugMaterial(t),this._debugMeshMeshes.push(s),s}_getDebugMesh(e,t){if(!this._utilityLayer||t&&t.parent&&t.parent.physicsImpostor)return null;let s=null;const i=this._utilityLayer.utilityLayerScene;if(!e.physicsBody)return D.Warn("Unable to get physicsBody of impostor. It might be initialized later by its parent's impostor."),null;switch(e.type){case ye.BoxImpostor:s=this._getDebugBoxMesh(i),e.getBoxSizeToRef(s.scaling);break;case ye.SphereImpostor:{s=this._getDebugSphereMesh(i);const a=e.getRadius();s.scaling.x=a*2,s.scaling.y=a*2,s.scaling.z=a*2;break}case ye.CapsuleImpostor:{s=this._getDebugCapsuleMesh(i);const a=e.object.getBoundingInfo();s.scaling.x=(a.boundingBox.maximum.x-a.boundingBox.minimum.x)*2*e.object.scaling.x,s.scaling.y=(a.boundingBox.maximum.y-a.boundingBox.minimum.y)*e.object.scaling.y,s.scaling.z=(a.boundingBox.maximum.z-a.boundingBox.minimum.z)*2*e.object.scaling.z;break}case ye.MeshImpostor:t&&(s=this._getDebugMeshMesh(t,i));break;case ye.NoImpostor:t?t.getChildMeshes().filter(r=>r.physicsImpostor?1:0).forEach(r=>{if(r.physicsImpostor&&r.getClassName()==="Mesh"){const n=r.getBoundingInfo(),o=n.boundingBox.minimum,h=n.boundingBox.maximum;switch(r.physicsImpostor.type){case ye.BoxImpostor:s=this._getDebugBoxMesh(i),s.position.copyFrom(o),s.position.addInPlace(h),s.position.scaleInPlace(.5);break;case ye.SphereImpostor:s=this._getDebugSphereMesh(i);break;case ye.CylinderImpostor:s=this._getDebugCylinderMesh(i);break;default:s=null;break}s&&(s.scaling.x=h.x-o.x,s.scaling.y=h.y-o.y,s.scaling.z=h.z-o.z,s.parent=r)}}):D.Warn("No target mesh parameter provided for NoImpostor. Skipping."),s=null;break;case ye.CylinderImpostor:{s=this._getDebugCylinderMesh(i);const a=e.object.getBoundingInfo();s.scaling.x=(a.boundingBox.maximum.x-a.boundingBox.minimum.x)*e.object.scaling.x,s.scaling.y=(a.boundingBox.maximum.y-a.boundingBox.minimum.y)*e.object.scaling.y,s.scaling.z=(a.boundingBox.maximum.z-a.boundingBox.minimum.z)*e.object.scaling.z;break}}return s}_getDebugBodyMesh(e){if(!this._utilityLayer)return null;const t=this._utilityLayer.utilityLayerScene,s=new fe("custom",t),i=new Je,a=e.getGeometry();if(i.positions=a.positions,i.indices=a.indices,i.applyToMesh(s),e._pluginDataInstances){const r=new Float32Array(e._pluginDataInstances.length*16);s.thinInstanceSetBuffer("matrix",r,16,!1)}return s.material=this._getDebugMaterial(t),s}_getMeshDebugInertiaMatrixToRef(e,t){const s=e.inertiaOrientation??M.Identity(),i=e.inertia??d.Zero(),a=e.centerOfMass??d.Zero(),r=(i.x-i.y+i.z)*6,n=Math.sqrt(Math.max(r,0)),o=i.x*12-r,h=Math.sqrt(Math.max(o,0)),l=i.z*12-r,_=Math.sqrt(Math.max(l,0)),g=c.Vector3[0];g.set(_,n,h);const p=R.ScalingToRef(g.x,g.y,g.z,c.Matrix[0]),f=s.toRotationMatrix(c.Matrix[1]),m=R.TranslationToRef(a.x,a.y,a.z,c.Matrix[2]);return p.multiplyToRef(f,t),t.multiplyToRef(m,t),t}_getDebugInertiaMesh(e){if(!this._utilityLayer)return null;const t=this._utilityLayer.utilityLayerScene,s=pt.CreateBox("custom",{size:1},t),i=R.Identity();if(e._pluginDataInstances.length){const a=new Float32Array(e._pluginDataInstances.length*16);for(let r=0;r<e._pluginDataInstances.length;++r){const n=e.getMassProperties(r);this._getMeshDebugInertiaMatrixToRef(n,i),i.copyToArray(a,r*16)}s.thinInstanceSetBuffer("matrix",a,16,!1)}else{const a=e.getMassProperties();this._getMeshDebugInertiaMatrixToRef(a,i),i.decomposeToTransformNode(s)}return s.enableEdgesRendering(),s.edgesWidth=2,s.edgesColor=new Me(1,0,1,1),s.material=this._getDebugInertiaMaterial(t),s}_getTransformFromBodyToRef(e,t,s){const i=e.transformNode;return s&&s>=0?R.FromArrayToRef(i._thinInstanceDataStorage.matrixData,s,t):t.copyFrom(i.getWorldMatrix())}_createAngularConstraintMesh(e,t,s,i,a){const r=(t-e)/(Math.PI*2),n=pt.CreateCylinder("ConstraintCylinder",{height:1e-4,diameter:3*this._constraintAngularSize,arc:r},a);n.material=this._getDebugAxisColoredMaterial(s,a),n.parent=i;const o=i.absoluteScaling;switch(s){case 0:n.rotation.z=Math.PI*.5,n.rotation.x=-e+Math.PI*.5,n.scaling.x=1/o.x,n.scaling.y=1/o.z,n.scaling.z=1/o.y;break;case 1:n.rotation.y=Math.PI*1.5+e,n.scaling.x=1/o.z,n.scaling.y=1/o.y,n.scaling.z=1/o.x;break;case 2:n.rotation.x=Math.PI*.5,n.scaling.x=1/o.x,n.scaling.y=1/o.z,n.scaling.z=1/o.y;break}return n}_createCage(e,t){const s=pt.CreateBox("cage",{size:1},t);s.setPivotPoint(new d(-.5,-.5,-.5));const i=new J("cage_material",t);return i.alpha=0,s.material=i,s.enableEdgesRendering(),s.edgesWidth=4,s.edgesColor=new Me(1,1,1,1),s.parent=e,s}_getDebugConstraintMesh(e){if(!this._utilityLayer)return null;const t=this._utilityLayer.utilityLayerScene;if(!e._initOptions)return null;const{pivotA:s,pivotB:i,axisA:a,axisB:r,perpAxisA:n,perpAxisB:o}=e._initOptions;if(!s||!i||!a||!r||!n||!o)return null;const h=new fe("parentingDebugConstraint",t),l=e.getBodiesUsingConstraint(),_=[];_.push(h);for(const g of l){const p=new ie("parentOfPair",t);p.parent=h;const{parentBody:f,parentBodyIndex:m,childBody:b,childBodyIndex:y}=g,T=this._getTransformFromBodyToRef(f,c.Matrix[0],m),v=this._getTransformFromBodyToRef(b,c.Matrix[1],y),B=new ie("parentCoordSystem",t);B.parent=p,B.metadata={parentBody:f,parentBodyIndex:m},T.decomposeToTransformNode(B);const A=new ie("childCoordSystem",t);A.parent=p,A.metadata={childBody:b,childBodyIndex:y},v.decomposeToTransformNode(A);const U=M.FromRotationMatrix(R.FromXYZAxesToRef(a,n,a.cross(n),c.Matrix[0])),w=M.FromRotationMatrix(R.FromXYZAxesToRef(r,o,r.cross(o),c.Matrix[0])),X=s,Q=i,F=new ie("constraint_parent",t);F.position.copyFrom(X),F.rotationQuaternion=U,F.parent=B;const q=new ie("constraint_child",t);q.parent=A,q.position.copyFrom(Q),q.rotationQuaternion=w;const G=new Fe(t,this._constraintAxesSize);G.xAxis.parent=F,G.yAxis.parent=F,G.zAxis.parent=F;const Y=new Fe(t,this._constraintAxesSize);Y.xAxis.parent=q,Y.yAxis.parent=q,Y.zAxis.parent=q;const L=this._physicsEnginePlugin,te=[3,4,5],ce=[te,[0,1,2]],Z=[0,0];for(let x=0;x<2;x++)for(let k=0;k<3;k++){const N=ce[x][k];L.getAxisMode(e,N)==2&&Z[x]++}if(Z[1]!=3){const x=this._createCage(F,t),k=c.Vector3[0],N=c.Vector3[1],P=[!1,!1,!1];P[0]=L.getAxisMode(e,0)==1,P[1]=L.getAxisMode(e,1)==1,P[2]=L.getAxisMode(e,2)==1,k.x=P[0]?L.getAxisMinLimit(e,0):0,N.x=P[0]?L.getAxisMaxLimit(e,0):0,k.y=P[1]?L.getAxisMinLimit(e,1):0,N.y=P[1]?L.getAxisMaxLimit(e,1):0,k.z=P[2]?L.getAxisMinLimit(e,2):0,N.z=P[2]?L.getAxisMaxLimit(e,2):0,x.position.x=k.x+.5,x.position.y=k.y+.5,x.position.z=k.z+.5,x.scaling.x=N.x-k.x+Te,x.scaling.y=N.y-k.y+Te,x.scaling.z=N.z-k.z+Te,_.push(x)}if(Z[0]!=3)for(let x=0;x<3;x++){const k=te[x],N=L.getAxisMode(e,k);let P=0,V=Math.PI*2;if(N==1&&(P=L.getAxisMinLimit(e,k),V=L.getAxisMaxLimit(e,k)),N!=2&&e.options.pivotB){const de=this._createAngularConstraintMesh(P,V,x,b.transformNode,t);de.position.copyFrom(e.options.pivotB),_.push(de)}}}return _}dispose(){for(let e=this._numMeshes-1;e>=0;e--)this.hideImpostor(this._impostors[0]);for(let e=this._numBodies-1;e>=0;e--)this.hideBody(this._bodies[0]);for(let e=this._numInertiaBodies-1;e>=0;e--)this.hideInertia(this._inertiaBodies[0]);this._debugBoxMesh&&this._debugBoxMesh.dispose(),this._debugSphereMesh&&this._debugSphereMesh.dispose(),this._debugCylinderMesh&&this._debugCylinderMesh.dispose(),this._debugMaterial&&this._debugMaterial.dispose(),this._impostors.length=0,this._scene=null,this._physicsEnginePlugin=null,this._utilityLayer&&(this._utilityLayer.dispose(),this._utilityLayer=null)}}class Kt{static CreateAndShow(e,t,s){const i=new Kt(e);return i.show(t,s),i}constructor(e){this.ray=e}show(e,t){if(!this._renderFunction&&this.ray){const s=this.ray;this._renderFunction=()=>this._render(),this._scene=e,this._renderPoints=[s.origin,s.origin.add(s.direction.scale(s.length))],this._renderLine=re("ray",{points:this._renderPoints,updatable:!0},e),this._renderLine.isPickable=!1,this._renderFunction&&this._scene.registerBeforeRender(this._renderFunction)}t&&this._renderLine&&this._renderLine.color.copyFrom(t)}hide(){this._renderFunction&&this._scene&&(this._scene.unregisterBeforeRender(this._renderFunction),this._scene=null,this._renderFunction=null,this._renderLine&&(this._renderLine.dispose(),this._renderLine=null),this._renderPoints=[])}_render(){var i;const e=this.ray;if(!e)return;const t=this._renderPoints[1],s=Math.min(e.length,1e6);t.copyFrom(e.direction),t.scaleInPlace(s),t.addInPlace(e.origin),this._renderPoints[0].copyFrom(e.origin),re("ray",{points:this._renderPoints,updatable:!0,instance:this._renderLine},this._scene),(i=this._renderLine)==null||i.refreshBoundingInfo()}attachToMesh(e,t,s,i){this._attachedToMesh=e;const a=this.ray;a&&(a.direction||(a.direction=d.Zero()),a.origin||(a.origin=d.Zero()),i&&(a.length=i),s||(s=d.Zero()),t||(t=new d(0,0,-1)),this._scene||(this._scene=e.getScene()),this._meshSpaceDirection?(this._meshSpaceDirection.copyFrom(t),this._meshSpaceOrigin.copyFrom(s)):(this._meshSpaceDirection=t.clone(),this._meshSpaceOrigin=s.clone()),this._onAfterRenderObserver||(this._onAfterRenderObserver=this._scene.onBeforeRenderObservable.add(()=>this._updateToMesh()),this._onAfterStepObserver=this._scene.onAfterStepObservable.add(()=>this._updateToMesh())),this._attachedToMesh.computeWorldMatrix(!0),this._updateToMesh())}detachFromMesh(){this._attachedToMesh&&this._scene&&(this._onAfterRenderObserver&&(this._scene.onBeforeRenderObservable.remove(this._onAfterRenderObserver),this._scene.onAfterStepObservable.remove(this._onAfterStepObserver)),this._attachedToMesh=null,this._onAfterRenderObserver=null,this._onAfterStepObserver=null,this._scene=null)}_updateToMesh(){const e=this.ray;if(!(!this._attachedToMesh||!e)){if(this._attachedToMesh.isDisposed()){this.detachFromMesh();return}this._attachedToMesh.getDirectionToRef(this._meshSpaceDirection,e.direction),d.TransformCoordinatesToRef(this._meshSpaceOrigin,this._attachedToMesh.getWorldMatrix(),e.origin)}}dispose(){this.hide(),this.detachFromMesh(),this.ray=null}}class fa{get transparency(){return this._transparency}set transparency(e){this._transparency=e;for(let t=6;t<12;++t)this._lightHelperFrustumMeshes[t].material.alpha=e}get showLines(){return this._showLines}set showLines(e){if(this._showLines!==e){this._showLines=e;for(let t=0;t<6;++t)this._lightHelperFrustumMeshes[t].setEnabled(e)}}get showPlanes(){return this._showPlanes}set showPlanes(e){if(this._showPlanes!==e){this._showPlanes=e;for(let t=6;t<12;++t)this._lightHelperFrustumMeshes[t].setEnabled(e)}}constructor(e,t=null){this._oldPosition=new d(Number.NaN,Number.NaN,Number.NaN),this._oldDirection=new d(Number.NaN,Number.NaN,Number.NaN),this._transparency=.3,this._showLines=!0,this._showPlanes=!0,this._scene=e.getScene(),this._light=e,this._camera=t,this._inverseViewMatrix=R.Identity(),this._lightHelperFrustumMeshes=[],this._createGeometry(),this.show(),this.update()}show(){this._lightHelperFrustumMeshes.forEach((e,t)=>{e.setEnabled(t<6&&this._showLines||t>=6&&this._showPlanes)}),this._oldPosition.set(Number.NaN,Number.NaN,Number.NaN),this._visible=!0}hide(){this._lightHelperFrustumMeshes.forEach(e=>{e.setEnabled(!1)}),this._visible=!1}update(){var t,s,i,a,r,n,o,h;if(!this._visible||this._oldPosition.equals(this._light.position)&&this._oldDirection.equals(this._light.direction)&&this._oldAutoCalc===this._light.autoCalcShadowZBounds&&this._oldMinZ===this._light.shadowMinZ&&this._oldMaxZ===this._light.shadowMaxZ)return;this._oldPosition.copyFrom(this._light.position),this._oldDirection.copyFrom(this._light.direction),this._oldAutoCalc=this._light.autoCalcShadowZBounds,this._oldMinZ=this._light.shadowMinZ,this._oldMaxZ=this._light.shadowMaxZ,c.Vector3[0].set(this._light.orthoLeft,this._light.orthoBottom,this._light.shadowMinZ!==void 0?this._light.shadowMinZ:((t=this._camera)==null?void 0:t.minZ)??0),c.Vector3[1].set(this._light.orthoRight,this._light.orthoTop,this._light.shadowMaxZ!==void 0?this._light.shadowMaxZ:((s=this._camera)==null?void 0:s.maxZ)??1e4);const e=this._getInvertViewMatrix();c.Vector3[2].copyFromFloats(c.Vector3[1].x,c.Vector3[1].y,c.Vector3[0].z),c.Vector3[3].copyFromFloats(c.Vector3[1].x,c.Vector3[0].y,c.Vector3[0].z),c.Vector3[4].copyFromFloats(c.Vector3[0].x,c.Vector3[0].y,c.Vector3[0].z),c.Vector3[5].copyFromFloats(c.Vector3[0].x,c.Vector3[1].y,c.Vector3[0].z),d.TransformCoordinatesToRef(c.Vector3[2],e,c.Vector3[2]),d.TransformCoordinatesToRef(c.Vector3[3],e,c.Vector3[3]),d.TransformCoordinatesToRef(c.Vector3[4],e,c.Vector3[4]),d.TransformCoordinatesToRef(c.Vector3[5],e,c.Vector3[5]),c.Vector3[6].copyFromFloats(c.Vector3[1].x,c.Vector3[1].y,c.Vector3[1].z),c.Vector3[7].copyFromFloats(c.Vector3[1].x,c.Vector3[0].y,c.Vector3[1].z),c.Vector3[8].copyFromFloats(c.Vector3[0].x,c.Vector3[0].y,c.Vector3[1].z),c.Vector3[9].copyFromFloats(c.Vector3[0].x,c.Vector3[1].y,c.Vector3[1].z),d.TransformCoordinatesToRef(c.Vector3[6],e,c.Vector3[6]),d.TransformCoordinatesToRef(c.Vector3[7],e,c.Vector3[7]),d.TransformCoordinatesToRef(c.Vector3[8],e,c.Vector3[8]),d.TransformCoordinatesToRef(c.Vector3[9],e,c.Vector3[9]),re("nearlines",{updatable:!0,points:this._nearLinesPoints,instance:this._lightHelperFrustumMeshes[0]},this._scene),re("farlines",{updatable:!0,points:this._farLinesPoints,instance:this._lightHelperFrustumMeshes[1]},this._scene),re("trlines",{updatable:!0,points:this._trLinesPoints,instance:this._lightHelperFrustumMeshes[2]},this._scene),re("brlines",{updatable:!0,points:this._brLinesPoints,instance:this._lightHelperFrustumMeshes[3]},this._scene),re("tllines",{updatable:!0,points:this._tlLinesPoints,instance:this._lightHelperFrustumMeshes[4]},this._scene),re("bllines",{updatable:!0,points:this._blLinesPoints,instance:this._lightHelperFrustumMeshes[5]},this._scene),c.Vector3[2].toArray(this._nearPlaneVertices,0),c.Vector3[3].toArray(this._nearPlaneVertices,3),c.Vector3[4].toArray(this._nearPlaneVertices,6),c.Vector3[5].toArray(this._nearPlaneVertices,9),(i=this._lightHelperFrustumMeshes[6].geometry)==null||i.updateVerticesDataDirectly("position",this._nearPlaneVertices,0),c.Vector3[6].toArray(this._farPlaneVertices,0),c.Vector3[7].toArray(this._farPlaneVertices,3),c.Vector3[8].toArray(this._farPlaneVertices,6),c.Vector3[9].toArray(this._farPlaneVertices,9),(a=this._lightHelperFrustumMeshes[7].geometry)==null||a.updateVerticesDataDirectly("position",this._farPlaneVertices,0),c.Vector3[2].toArray(this._rightPlaneVertices,0),c.Vector3[6].toArray(this._rightPlaneVertices,3),c.Vector3[7].toArray(this._rightPlaneVertices,6),c.Vector3[3].toArray(this._rightPlaneVertices,9),(r=this._lightHelperFrustumMeshes[8].geometry)==null||r.updateVerticesDataDirectly("position",this._rightPlaneVertices,0),c.Vector3[5].toArray(this._leftPlaneVertices,0),c.Vector3[9].toArray(this._leftPlaneVertices,3),c.Vector3[8].toArray(this._leftPlaneVertices,6),c.Vector3[4].toArray(this._leftPlaneVertices,9),(n=this._lightHelperFrustumMeshes[9].geometry)==null||n.updateVerticesDataDirectly("position",this._leftPlaneVertices,0),c.Vector3[2].toArray(this._topPlaneVertices,0),c.Vector3[6].toArray(this._topPlaneVertices,3),c.Vector3[9].toArray(this._topPlaneVertices,6),c.Vector3[5].toArray(this._topPlaneVertices,9),(o=this._lightHelperFrustumMeshes[10].geometry)==null||o.updateVerticesDataDirectly("position",this._topPlaneVertices,0),c.Vector3[3].toArray(this._bottomPlaneVertices,0),c.Vector3[7].toArray(this._bottomPlaneVertices,3),c.Vector3[8].toArray(this._bottomPlaneVertices,6),c.Vector3[4].toArray(this._bottomPlaneVertices,9),(h=this._lightHelperFrustumMeshes[11].geometry)==null||h.updateVerticesDataDirectly("position",this._bottomPlaneVertices,0)}dispose(){this._lightHelperFrustumMeshes.forEach(e=>{var t;(t=e.material)==null||t.dispose(),e.dispose()}),this._rootNode.dispose()}_createGeometry(){this._rootNode=new ie("directionalLightHelperRoot_"+this._light.name,this._scene),this._rootNode.parent=this._light.parent,this._nearLinesPoints=[c.Vector3[0],c.Vector3[1],c.Vector3[2],c.Vector3[3],c.Vector3[4]];const e=re("nearlines",{updatable:!0,points:this._nearLinesPoints},this._scene);e.parent=this._rootNode,e.alwaysSelectAsActiveMesh=!0,this._farLinesPoints=[c.Vector3[5],c.Vector3[6],c.Vector3[7],c.Vector3[8],c.Vector3[9]];const t=re("farlines",{updatable:!0,points:this._farLinesPoints},this._scene);t.parent=this._rootNode,t.alwaysSelectAsActiveMesh=!0,this._trLinesPoints=[c.Vector3[10],c.Vector3[11]];const s=re("trlines",{updatable:!0,points:this._trLinesPoints},this._scene);s.parent=this._rootNode,s.alwaysSelectAsActiveMesh=!0,this._brLinesPoints=[c.Vector3[12],c.Vector3[0]];const i=re("brlines",{updatable:!0,points:this._brLinesPoints},this._scene);i.parent=this._rootNode,i.alwaysSelectAsActiveMesh=!0,this._tlLinesPoints=[c.Vector3[1],c.Vector3[2]];const a=re("tllines",{updatable:!0,points:this._tlLinesPoints},this._scene);a.parent=this._rootNode,a.alwaysSelectAsActiveMesh=!0,this._blLinesPoints=[c.Vector3[3],c.Vector3[4]];const r=re("bllines",{updatable:!0,points:this._blLinesPoints},this._scene);r.parent=this._rootNode,r.alwaysSelectAsActiveMesh=!0,this._lightHelperFrustumMeshes.push(e,t,s,i,a,r);const n=(o,h,l)=>{const _=new fe(o+"plane",this._scene),g=new J(o+"PlaneMat",this._scene);_.material=g,_.parent=this._rootNode,_.alwaysSelectAsActiveMesh=!0,g.emissiveColor=h,g.alpha=this.transparency,g.backFaceCulling=!1,g.disableLighting=!0;const p=[0,1,2,0,2,3],f=new Je;f.positions=l,f.indices=p,f.applyToMesh(_,!0),this._lightHelperFrustumMeshes.push(_)};this._nearPlaneVertices=[0,0,0,0,0,0,0,0,0,0,0,0],this._farPlaneVertices=[0,0,0,0,0,0,0,0,0,0,0,0],this._rightPlaneVertices=[0,0,0,0,0,0,0,0,0,0,0,0],this._leftPlaneVertices=[0,0,0,0,0,0,0,0,0,0,0,0],this._topPlaneVertices=[0,0,0,0,0,0,0,0,0,0,0,0],this._bottomPlaneVertices=[0,0,0,0,0,0,0,0,0,0,0,0],n("near",new O(1,0,0),this._nearPlaneVertices),n("far",new O(.3,0,0),this._farPlaneVertices),n("right",new O(0,1,0),this._rightPlaneVertices),n("left",new O(0,.3,0),this._leftPlaneVertices),n("top",new O(0,0,1),this._topPlaneVertices),n("bottom",new O(0,0,.3),this._bottomPlaneVertices),this._nearLinesPoints[0]=c.Vector3[2],this._nearLinesPoints[1]=c.Vector3[3],this._nearLinesPoints[2]=c.Vector3[4],this._nearLinesPoints[3]=c.Vector3[5],this._nearLinesPoints[4]=c.Vector3[2],this._farLinesPoints[0]=c.Vector3[6],this._farLinesPoints[1]=c.Vector3[7],this._farLinesPoints[2]=c.Vector3[8],this._farLinesPoints[3]=c.Vector3[9],this._farLinesPoints[4]=c.Vector3[6],this._trLinesPoints[0]=c.Vector3[2],this._trLinesPoints[1]=c.Vector3[6],this._brLinesPoints[0]=c.Vector3[3],this._brLinesPoints[1]=c.Vector3[7],this._tlLinesPoints[0]=c.Vector3[4],this._tlLinesPoints[1]=c.Vector3[8],this._blLinesPoints[0]=c.Vector3[5],this._blLinesPoints[1]=c.Vector3[9]}_getInvertViewMatrix(){return R.LookAtLHToRef(this._light.position,this._light.position.add(this._light.direction),d.UpReadOnly,this._inverseViewMatrix),this._inverseViewMatrix.invertToRef(this._inverseViewMatrix),this._inverseViewMatrix}}class gi{constructor(){this.renderWidth=512,this.renderHeight=256,this.textureSize=512,this.deterministicLockstep=!1,this.lockstepMaxSteps=4}}class mi extends je{isDeterministicLockStep(){return this._options.deterministicLockstep}getLockstepMaxSteps(){return this._options.lockstepMaxSteps}getHardwareScalingLevel(){return 1}constructor(e=new gi){super(null),e.deterministicLockstep===void 0&&(e.deterministicLockstep=!1),e.timeStep!==void 0&&(this._timeStep=e.timeStep),e.lockstepMaxSteps===void 0&&(e.lockstepMaxSteps=4),this._options=e,hs.SetMatrixPrecision(!!e.useHighPrecisionMatrix),this._caps={maxTexturesImageUnits:16,maxVertexTextureImageUnits:16,maxCombinedTexturesImageUnits:32,maxTextureSize:512,maxCubemapTextureSize:512,maxDrawBuffers:0,maxRenderTextureSize:512,maxVertexAttribs:16,maxVaryingVectors:16,maxFragmentUniformVectors:16,maxVertexUniformVectors:16,standardDerivatives:!1,astc:null,pvrtc:null,etc1:null,etc2:null,bptc:null,maxAnisotropy:0,uintIndices:!1,fragmentDepthSupported:!1,highPrecisionShaderSupported:!0,colorBufferFloat:!1,supportFloatTexturesResolve:!1,rg11b10ufColorRenderable:!1,textureFloat:!1,textureFloatLinearFiltering:!1,textureFloatRender:!1,textureHalfFloat:!1,textureHalfFloatLinearFiltering:!1,textureHalfFloatRender:!1,textureLOD:!1,texelFetch:!1,drawBuffersExtension:!1,depthTextureExtension:!1,vertexArrayObject:!1,instancedArrays:!1,supportOcclusionQuery:!1,canUseTimestampForTimerQuery:!1,maxMSAASamples:1,blendMinMax:!1,canUseGLInstanceID:!1,canUseGLVertexID:!1,supportComputeShaders:!1,supportSRGBBuffers:!1,supportTransformFeedbacks:!1,textureMaxLevel:!1,texture2DArrayMaxLayerCount:128,disableMorphTargetTexture:!1,textureNorm16:!1},this._features={forceBitmapOverHTMLImageElement:!1,supportRenderAndCopyToLodForFloatTextures:!1,supportDepthStencilTexture:!1,supportShadowSamplers:!1,uniformBufferHardCheckMatrix:!1,allowTexturePrefiltering:!1,trackUbosInFrame:!1,checkUbosContentBeforeUpload:!1,supportCSM:!1,basisNeedsPOT:!1,support3DTextures:!1,needTypeSuffixInShaderConstants:!1,supportMSAA:!1,supportSSAO2:!1,supportIBLShadows:!1,supportExtendedTextureFormats:!1,supportSwitchCaseInShader:!1,supportSyncTextureRead:!1,needsInvertingBitmap:!1,useUBOBindingCache:!1,needShaderCodeInlining:!1,needToAlwaysBindUniformBuffers:!1,supportRenderPasses:!0,supportSpriteInstancing:!1,forceVertexBufferStrideAndOffsetMultiple4Bytes:!1,_checkNonFloatVertexBuffersDontRecreatePipelineContext:!1,_collectUbosUpdatedInFrame:!1},e.renderingCanvas&&(this._renderingCanvas=e.renderingCanvas),D.Log(`Babylon.js v${je.Version} - Null engine`);const t=typeof self<"u"?self:typeof global<"u"?global:window;typeof URL>"u"&&(t.URL={createObjectURL:function(){},revokeObjectURL:function(){}}),typeof Blob>"u"&&(t.Blob=function(){})}createVertexBuffer(e){const t=new ut;return t.references=1,t}createIndexBuffer(e){const t=new ut;return t.references=1,t}clear(e,t,s,i=!1){}getRenderWidth(e=!1){return!e&&this._currentRenderTarget?this._currentRenderTarget.width:this._options.renderWidth}getRenderHeight(e=!1){return!e&&this._currentRenderTarget?this._currentRenderTarget.height:this._options.renderHeight}setViewport(e,t,s){this._cachedViewport=e}createShaderProgram(e,t,s,i,a){return{__SPECTOR_rebuildProgram:null}}getUniforms(e,t){return[]}getAttributes(e,t){return[]}bindSamplers(e){this._currentEffect=null}enableEffect(e){e=e!==null&&ls(e)?e.effect:e,this._currentEffect=e,e&&(e.onBind&&e.onBind(e),e._onBindObservable&&e._onBindObservable.notifyObservers(e))}setStateCullFaceType(e,t){}setState(e,t=0,s,i=!1,a,r,n=0){}setIntArray(e,t){return!0}setIntArray2(e,t){return!0}setIntArray3(e,t){return!0}setIntArray4(e,t){return!0}setFloatArray(e,t){return!0}setFloatArray2(e,t){return!0}setFloatArray3(e,t){return!0}setFloatArray4(e,t){return!0}setArray(e,t){return!0}setArray2(e,t){return!0}setArray3(e,t){return!0}setArray4(e,t){return!0}setMatrices(e,t){return!0}setMatrix3x3(e,t){return!0}setMatrix2x2(e,t){return!0}setFloat(e,t){return!0}setFloat2(e,t,s){return!0}setFloat3(e,t,s,i){return!0}setBool(e,t){return!0}setFloat4(e,t,s,i,a){return!0}setAlphaMode(e,t=!1){this._alphaMode!==e&&(this.alphaState.alphaBlend=e!==0,t||this.setDepthWrite(e===0),this._alphaMode=e)}bindBuffers(e,t,s){}wipeCaches(e){this.preventCacheWipeBetweenFrames||(this.resetTextureCache(),this._currentEffect=null,e&&(this._currentProgram=null,this._stencilStateComposer.reset(),this.depthCullingState.reset(),this.alphaState.reset()),this._cachedVertexBuffers=null,this._cachedIndexBuffer=null,this._cachedEffectForVertexBuffers=null)}draw(e,t,s,i){}drawElementsType(e,t,s,i){}drawArraysType(e,t,s,i){}_createTexture(){return{}}_releaseTexture(e){}createTexture(e,t,s,i,a=3,r=null,n=null,o=null,h=null,l=null,_=null,g){const p=new at(this,1),f=String(e);return p.url=f,p.generateMipMaps=!t,p.samplingMode=a,p.invertY=s,p.baseWidth=this._options.textureSize,p.baseHeight=this._options.textureSize,p.width=this._options.textureSize,p.height=this._options.textureSize,l&&(p.format=l),p.isReady=!0,r&&setTimeout(()=>{r(p)}),this._internalTexturesCache.push(p),p}_createHardwareRenderTargetWrapper(e,t,s){const i=new cs(e,t,s,this);return this._renderTargetWrapperCache.push(i),i}createRenderTargetTexture(e,t){const s=this._createHardwareRenderTargetWrapper(!1,!1,e),i={};t!==void 0&&typeof t=="object"?(i.generateMipMaps=t.generateMipMaps,i.generateDepthBuffer=t.generateDepthBuffer===void 0?!0:t.generateDepthBuffer,i.generateStencilBuffer=i.generateDepthBuffer&&t.generateStencilBuffer,i.type=t.type===void 0?0:t.type,i.samplingMode=t.samplingMode===void 0?3:t.samplingMode):(i.generateMipMaps=t,i.generateDepthBuffer=!0,i.generateStencilBuffer=!1,i.type=0,i.samplingMode=3);const a=new at(this,5),r=e.width||e,n=e.height||e;return s._generateDepthBuffer=i.generateDepthBuffer,s._generateStencilBuffer=!!i.generateStencilBuffer,a.baseWidth=r,a.baseHeight=n,a.width=r,a.height=n,a.isReady=!0,a.samples=1,a.generateMipMaps=!!i.generateMipMaps,a.samplingMode=i.samplingMode,a.type=i.type,this._internalTexturesCache.push(a),s}createRenderTargetCubeTexture(e,t){const s=this._createHardwareRenderTargetWrapper(!1,!0,e),i={generateMipMaps:!0,generateDepthBuffer:!0,generateStencilBuffer:!1,type:0,samplingMode:3,...t};i.generateStencilBuffer=i.generateDepthBuffer&&i.generateStencilBuffer,(i.type===1&&!this._caps.textureFloatLinearFiltering||i.type===2&&!this._caps.textureHalfFloatLinearFiltering)&&(i.samplingMode=1),s._generateDepthBuffer=i.generateDepthBuffer,s._generateStencilBuffer=!!i.generateStencilBuffer;const a=new at(this,5);return a.baseWidth=e,a.baseHeight=e,a.width=e,a.height=e,a.isReady=!0,a.isCube=!0,a.samples=1,a.generateMipMaps=!!i.generateMipMaps,a.samplingMode=i.samplingMode,a.type=i.type,this._internalTexturesCache.push(a),s}updateTextureSamplingMode(e,t){t.samplingMode=e}createRawTexture(e,t,s,i,a,r,n,o=null,h=0,l=0,_=!1){const g=new at(this,3);return g.baseWidth=t,g.baseHeight=s,g.width=t,g.height=s,g.format=i,g.generateMipMaps=a,g.samplingMode=n,g.invertY=r,g._compression=o,g.type=h,g._useSRGBBuffer=_,this._doNotHandleContextLost||(g._bufferView=e),g}updateRawTexture(e,t,s,i,a=null,r=0,n=!1){e&&(e._bufferView=t,e.format=s,e.invertY=i,e._compression=a,e.type=r,e._useSRGBBuffer=n)}bindFramebuffer(e,t,s,i,a){this._currentRenderTarget&&this.unBindFramebuffer(this._currentRenderTarget),this._currentRenderTarget=e,this._currentFramebuffer=null,this._cachedViewport&&!a&&this.setViewport(this._cachedViewport,s,i)}unBindFramebuffer(e,t=!1,s){this._currentRenderTarget=null,s&&s(),this._currentFramebuffer=null}createDynamicVertexBuffer(e){const t=new ut;return t.references=1,t.capacity=1,t}updateDynamicTexture(e,t,s,i=!1,a){}areAllEffectsReady(){return!0}getError(){return 0}_getUnpackAlignement(){return 1}_unpackFlipY(e){}updateDynamicIndexBuffer(e,t,s=0){}updateDynamicVertexBuffer(e,t,s,i){}_bindTextureDirectly(e,t){return this._boundTexturesCache[this._activeChannel]!==t?(this._boundTexturesCache[this._activeChannel]=t,!0):!1}_bindTexture(e,t){e<0||this._bindTextureDirectly(0,t)}_deleteBuffer(e){}releaseEffects(){}displayLoadingUI(){}hideLoadingUI(){}set loadingUIText(e){}flushFramebuffer(){}_uploadCompressedDataToTextureDirectly(e,t,s,i,a,r=0,n=0){}_uploadDataToTextureDirectly(e,t,s=0,i=0){}_uploadArrayBufferViewToTexture(e,t,s=0,i=0){}_uploadImageToTexture(e,t,s=0,i=0){}}class ba{static async CreateAsync(e,t){return await Et.IsSupportedAsync?Et.CreateAsync(e,t):je.IsSupported?new je(e,void 0,t):new mi(t)}}class xa{constructor(e,t="/"){this._context=e,this._separator=t}convert(e){const t=e.split(this._separator);if(t.length<2)throw new Error(`Path ${e} is invalid`);let s=this._context.getVariable(t[0]);const i=t[t.length-1];for(let a=1;a<t.length-1;a++)s=s[t[a]];return{object:s,info:{type:"object",get:()=>s[i],set:a=>s[i]=a,getTarget:()=>s,getPropertyName:[()=>i]}}}}class Pa{}class fi extends Ae{get attachedMesh(){return this._meshAttached}set attachedMesh(e){this._meshAttached=e,this._nodeAttached=e,this._checkBillboardTransform(),[this.xGizmo,this.yGizmo,this.zGizmo].forEach(t=>{t.isEnabled?t.attachedMesh=e:t.attachedMesh=null})}get attachedNode(){return this._nodeAttached}set attachedNode(e){this._meshAttached=null,this._nodeAttached=e,this._checkBillboardTransform(),[this.xGizmo,this.yGizmo,this.zGizmo].forEach(t=>{t.isEnabled?t.attachedNode=e:t.attachedNode=null})}_checkBillboardTransform(){this._nodeAttached&&this._nodeAttached.billboardMode&&D.Log("Rotation Gizmo will not work with transforms in billboard mode.")}set sensitivity(e){this._sensitivity=e,[this.xGizmo,this.yGizmo,this.zGizmo].forEach(t=>{t&&(t.sensitivity=e)})}get sensitivity(){return this._sensitivity}get isHovered(){return this.xGizmo.isHovered||this.yGizmo.isHovered||this.zGizmo.isHovered}get isDragging(){return this.xGizmo.dragBehavior.dragging||this.yGizmo.dragBehavior.dragging||this.zGizmo.dragBehavior.dragging}get additionalTransformNode(){return this._additionalTransformNode}set additionalTransformNode(e){[this.xGizmo,this.yGizmo,this.zGizmo].forEach(t=>{t.additionalTransformNode=e})}constructor(e=Se.DefaultUtilityLayer,t=32,s=!1,i=1,a,r){super(e),this.onDragStartObservable=new W,this.onDragObservable=new W,this.onDragEndObservable=new W,this._observables=[],this._sensitivity=1,this._gizmoAxisCache=new Map;const n=r&&r.xOptions&&r.xOptions.color?r.xOptions.color:O.Red().scale(.5),o=r&&r.yOptions&&r.yOptions.color?r.yOptions.color:O.Green().scale(.5),h=r&&r.zOptions&&r.zOptions.color?r.zOptions.color:O.Blue().scale(.5);this.xGizmo=new gt(new d(1,0,0),n,e,t,this,s,i),this.yGizmo=new gt(new d(0,1,0),o,e,t,this,s,i),this.zGizmo=new gt(new d(0,0,1),h,e,t,this,s,i),this.additionalTransformNode=r==null?void 0:r.additionalTransformNode,[this.xGizmo,this.yGizmo,this.zGizmo].forEach(l=>{r&&r.updateScale!=null&&(l.updateScale=r.updateScale),l.dragBehavior.onDragStartObservable.add(()=>{this.onDragStartObservable.notifyObservers({})}),l.dragBehavior.onDragObservable.add(()=>{this.onDragObservable.notifyObservers({})}),l.dragBehavior.onDragEndObservable.add(()=>{this.onDragEndObservable.notifyObservers({})})}),this.attachedMesh=null,this.attachedNode=null,a?a.addToAxisCache(this._gizmoAxisCache):Ae.GizmoAxisPointerObserver(e,this._gizmoAxisCache)}set updateGizmoRotationToMatchAttachedMesh(e){this.xGizmo&&(this.xGizmo.updateGizmoRotationToMatchAttachedMesh=e,this.yGizmo.updateGizmoRotationToMatchAttachedMesh=e,this.zGizmo.updateGizmoRotationToMatchAttachedMesh=e)}get updateGizmoRotationToMatchAttachedMesh(){return this.xGizmo.updateGizmoRotationToMatchAttachedMesh}set updateGizmoPositionToMatchAttachedMesh(e){this.xGizmo&&(this.xGizmo.updateGizmoPositionToMatchAttachedMesh=e,this.yGizmo.updateGizmoPositionToMatchAttachedMesh=e,this.zGizmo.updateGizmoPositionToMatchAttachedMesh=e)}get updateGizmoPositionToMatchAttachedMesh(){return this.xGizmo.updateGizmoPositionToMatchAttachedMesh}set anchorPoint(e){this._anchorPoint=e,[this.xGizmo,this.yGizmo,this.zGizmo].forEach(t=>{t.anchorPoint=e})}get anchorPoint(){return this._anchorPoint}set coordinatesMode(e){[this.xGizmo,this.yGizmo,this.zGizmo].forEach(t=>{t.coordinatesMode=e})}set updateScale(e){this.xGizmo&&(this.xGizmo.updateScale=e,this.yGizmo.updateScale=e,this.zGizmo.updateScale=e)}get updateScale(){return this.xGizmo.updateScale}set snapDistance(e){this.xGizmo&&(this.xGizmo.snapDistance=e,this.yGizmo.snapDistance=e,this.zGizmo.snapDistance=e)}get snapDistance(){return this.xGizmo.snapDistance}set scaleRatio(e){this.xGizmo&&(this.xGizmo.scaleRatio=e,this.yGizmo.scaleRatio=e,this.zGizmo.scaleRatio=e)}get scaleRatio(){return this.xGizmo.scaleRatio}get customRotationQuaternion(){return this._customRotationQuaternion}set customRotationQuaternion(e){this._customRotationQuaternion=e,[this.xGizmo,this.yGizmo,this.zGizmo].forEach(t=>{t&&(t.customRotationQuaternion=e)})}addToAxisCache(e,t){this._gizmoAxisCache.set(e,t)}releaseDrag(){this.xGizmo.dragBehavior.releaseDrag(),this.yGizmo.dragBehavior.releaseDrag(),this.zGizmo.dragBehavior.releaseDrag()}dispose(){this.xGizmo.dispose(),this.yGizmo.dispose(),this.zGizmo.dispose(),this.onDragStartObservable.clear(),this.onDragObservable.clear(),this.onDragEndObservable.clear(),this._observables.forEach(e=>{this.gizmoLayer.utilityLayerScene.onPointerObservable.remove(e)}),super.dispose()}setCustomMesh(){D.Error("Custom meshes are not supported on this gizmo, please set the custom meshes on the gizmos contained within this one (gizmo.xGizmo, gizmo.yGizmo, gizmo.zGizmo)")}}class tt extends Ae{get coloredMaterial(){return this._coloredMaterial}get hoverMaterial(){return this._hoverMaterial}get disableMaterial(){return this._disableMaterial}static _CreatePlane(e,t){const s=new ie("plane",e),i=Hs("dragPlane",{width:.1375,height:.1375,sideOrientation:2},e);return i.material=t,i.parent=s,s}constructor(e,t=O.Gray(),s=Se.DefaultUtilityLayer,i=null,a=O.Yellow(),r=O.Gray()){var g;super(s),this._pointerObserver=null,this.snapDistance=0,this.onSnapObservable=new W,this._isEnabled=!1,this._parent=null,this._dragging=!1,this._parent=i,this._coloredMaterial=new J("",s.utilityLayerScene),this._coloredMaterial.diffuseColor=t,this._coloredMaterial.specularColor=t.subtract(new O(.1,.1,.1)),this._hoverMaterial=new J("",s.utilityLayerScene),this._hoverMaterial.diffuseColor=a,this._disableMaterial=new J("",s.utilityLayerScene),this._disableMaterial.diffuseColor=r,this._disableMaterial.alpha=.4,this._gizmoMesh=tt._CreatePlane(s.utilityLayerScene,this._coloredMaterial),this._gizmoMesh.lookAt(this._rootMesh.position.add(e)),this._gizmoMesh.scaling.scaleInPlace(1/3),this._gizmoMesh.parent=this._rootMesh;let n=0;const o=new d,h={snapDistance:0};this.dragBehavior=new ct({dragPlaneNormal:e}),this.dragBehavior.moveAttached=!1,this._rootMesh.addBehavior(this.dragBehavior),this.dragBehavior.onDragObservable.add(p=>{if(this.attachedNode){if(this.snapDistance==0)this.attachedNode.getWorldMatrix().getTranslationToRef(c.Vector3[0]),c.Vector3[0].addToRef(p.delta,c.Vector3[0]),this.dragBehavior.validateDrag(c.Vector3[0])&&this.attachedNode.getWorldMatrix().addTranslationFromFloats(p.delta.x,p.delta.y,p.delta.z);else if(n+=p.dragDistance,Math.abs(n)>this.snapDistance){const f=Math.floor(Math.abs(n)/this.snapDistance);n=n%this.snapDistance,p.delta.normalizeToRef(o),o.scaleInPlace(this.snapDistance*f),this.attachedNode.getWorldMatrix().getTranslationToRef(c.Vector3[0]),c.Vector3[0].addToRef(o,c.Vector3[0]),this.dragBehavior.validateDrag(c.Vector3[0])&&(this.attachedNode.getWorldMatrix().addTranslationFromFloats(o.x,o.y,o.z),h.snapDistance=this.snapDistance*f,this.onSnapObservable.notifyObservers(h))}this._matrixChanged()}}),this.dragBehavior.onDragStartObservable.add(()=>{this._dragging=!0}),this.dragBehavior.onDragEndObservable.add(()=>{this._dragging=!1});const l=s._getSharedGizmoLight();l.includedOnlyMeshes=l.includedOnlyMeshes.concat(this._rootMesh.getChildMeshes(!1));const _={gizmoMeshes:this._gizmoMesh.getChildMeshes(),colliderMeshes:this._gizmoMesh.getChildMeshes(),material:this._coloredMaterial,hoverMaterial:this._hoverMaterial,disableMaterial:this._disableMaterial,active:!1,dragBehavior:this.dragBehavior};(g=this._parent)==null||g.addToAxisCache(this._gizmoMesh,_),this._pointerObserver=s.utilityLayerScene.onPointerObservable.add(p=>{var f;if(!this._customMeshSet&&(this._isHovered=_.colliderMeshes.indexOf((f=p==null?void 0:p.pickInfo)==null?void 0:f.pickedMesh)!=-1,!this._parent)){const m=_.dragBehavior.enabled?this._isHovered||this._dragging?this._hoverMaterial:this._coloredMaterial:this._disableMaterial;this._setGizmoMeshMaterial(_.gizmoMeshes,m)}}),this.dragBehavior.onEnabledObservable.add(p=>{this._setGizmoMeshMaterial(_.gizmoMeshes,p?this._coloredMaterial:this._disableMaterial)})}_attachedNodeChanged(e){this.dragBehavior&&(this.dragBehavior.enabled=!!e)}set isEnabled(e){this._isEnabled=e,e?this._parent&&(this.attachedNode=this._parent.attachedNode):this.attachedNode=null}get isEnabled(){return this._isEnabled}dispose(){this.onSnapObservable.clear(),this.gizmoLayer.utilityLayerScene.onPointerObservable.remove(this._pointerObserver),this.dragBehavior.detach(),super.dispose(),this._gizmoMesh&&this._gizmoMesh.dispose(),[this._coloredMaterial,this._hoverMaterial,this._disableMaterial].forEach(e=>{e&&e.dispose()})}}class bi extends Ae{get attachedMesh(){return this._meshAttached}set attachedMesh(e){this._meshAttached=e,this._nodeAttached=e,[this.xGizmo,this.yGizmo,this.zGizmo,this.xPlaneGizmo,this.yPlaneGizmo,this.zPlaneGizmo].forEach(t=>{t.isEnabled?t.attachedMesh=e:t.attachedMesh=null})}get attachedNode(){return this._nodeAttached}set attachedNode(e){this._meshAttached=null,this._nodeAttached=e,[this.xGizmo,this.yGizmo,this.zGizmo,this.xPlaneGizmo,this.yPlaneGizmo,this.zPlaneGizmo].forEach(t=>{t.isEnabled?t.attachedNode=e:t.attachedNode=null})}get isHovered(){return this.xGizmo.isHovered||this.yGizmo.isHovered||this.zGizmo.isHovered||this.xPlaneGizmo.isHovered||this.yPlaneGizmo.isHovered||this.zPlaneGizmo.isHovered}get isDragging(){return this.xGizmo.dragBehavior.dragging||this.yGizmo.dragBehavior.dragging||this.zGizmo.dragBehavior.dragging||this.xPlaneGizmo.dragBehavior.dragging||this.yPlaneGizmo.dragBehavior.dragging||this.zPlaneGizmo.dragBehavior.dragging}get additionalTransformNode(){return this._additionalTransformNode}set additionalTransformNode(e){[this.xGizmo,this.yGizmo,this.zGizmo,this.xPlaneGizmo,this.yPlaneGizmo,this.zPlaneGizmo].forEach(t=>{t.additionalTransformNode=e})}constructor(e=Se.DefaultUtilityLayer,t=1,s,i){super(e),this._meshAttached=null,this._nodeAttached=null,this._observables=[],this._gizmoAxisCache=new Map,this.onDragStartObservable=new W,this.onDragObservable=new W,this.onDragEndObservable=new W,this._planarGizmoEnabled=!1,this.xGizmo=new he(new d(1,0,0),O.Red().scale(.5),e,this,t),this.yGizmo=new he(new d(0,1,0),O.Green().scale(.5),e,this,t),this.zGizmo=new he(new d(0,0,1),O.Blue().scale(.5),e,this,t),this.xPlaneGizmo=new tt(new d(1,0,0),O.Red().scale(.5),this.gizmoLayer,this),this.yPlaneGizmo=new tt(new d(0,1,0),O.Green().scale(.5),this.gizmoLayer,this),this.zPlaneGizmo=new tt(new d(0,0,1),O.Blue().scale(.5),this.gizmoLayer,this),this.additionalTransformNode=i==null?void 0:i.additionalTransformNode,[this.xGizmo,this.yGizmo,this.zGizmo,this.xPlaneGizmo,this.yPlaneGizmo,this.zPlaneGizmo].forEach(a=>{a.dragBehavior.onDragStartObservable.add(()=>{this.onDragStartObservable.notifyObservers({})}),a.dragBehavior.onDragObservable.add(()=>{this.onDragObservable.notifyObservers({})}),a.dragBehavior.onDragEndObservable.add(()=>{this.onDragEndObservable.notifyObservers({})})}),this.attachedMesh=null,s?s.addToAxisCache(this._gizmoAxisCache):Ae.GizmoAxisPointerObserver(e,this._gizmoAxisCache)}set planarGizmoEnabled(e){this._planarGizmoEnabled=e,[this.xPlaneGizmo,this.yPlaneGizmo,this.zPlaneGizmo].forEach(t=>{t&&(t.isEnabled=e,e&&(t.attachedMesh?t.attachedMesh=this.attachedMesh:t.attachedNode=this.attachedNode))},this)}get planarGizmoEnabled(){return this._planarGizmoEnabled}get customRotationQuaternion(){return this._customRotationQuaternion}set customRotationQuaternion(e){this._customRotationQuaternion=e,[this.xGizmo,this.yGizmo,this.zGizmo,this.xPlaneGizmo,this.yPlaneGizmo,this.zPlaneGizmo].forEach(t=>{t&&(t.customRotationQuaternion=e)})}set updateGizmoRotationToMatchAttachedMesh(e){this._updateGizmoRotationToMatchAttachedMesh=e,[this.xGizmo,this.yGizmo,this.zGizmo,this.xPlaneGizmo,this.yPlaneGizmo,this.zPlaneGizmo].forEach(t=>{t&&(t.updateGizmoRotationToMatchAttachedMesh=e)})}get updateGizmoRotationToMatchAttachedMesh(){return this._updateGizmoRotationToMatchAttachedMesh}set updateGizmoPositionToMatchAttachedMesh(e){this._updateGizmoPositionToMatchAttachedMesh=e,[this.xGizmo,this.yGizmo,this.zGizmo,this.xPlaneGizmo,this.yPlaneGizmo,this.zPlaneGizmo].forEach(t=>{t&&(t.updateGizmoPositionToMatchAttachedMesh=e)})}get updateGizmoPositionToMatchAttachedMesh(){return this._updateGizmoPositionToMatchAttachedMesh}set anchorPoint(e){this._anchorPoint=e,[this.xGizmo,this.yGizmo,this.zGizmo,this.xPlaneGizmo,this.yPlaneGizmo,this.zPlaneGizmo].forEach(t=>{t.anchorPoint=e})}get anchorPoint(){return this._anchorPoint}set coordinatesMode(e){[this.xGizmo,this.yGizmo,this.zGizmo,this.xPlaneGizmo,this.yPlaneGizmo,this.zPlaneGizmo].forEach(t=>{t.coordinatesMode=e})}set updateScale(e){this.xGizmo&&(this.xGizmo.updateScale=e,this.yGizmo.updateScale=e,this.zGizmo.updateScale=e)}get updateScale(){return this.xGizmo.updateScale}set snapDistance(e){this._snapDistance=e,[this.xGizmo,this.yGizmo,this.zGizmo,this.xPlaneGizmo,this.yPlaneGizmo,this.zPlaneGizmo].forEach(t=>{t&&(t.snapDistance=e)})}get snapDistance(){return this._snapDistance}set scaleRatio(e){this._scaleRatio=e,[this.xGizmo,this.yGizmo,this.zGizmo,this.xPlaneGizmo,this.yPlaneGizmo,this.zPlaneGizmo].forEach(t=>{t&&(t.scaleRatio=e)})}get scaleRatio(){return this._scaleRatio}addToAxisCache(e,t){this._gizmoAxisCache.set(e,t)}releaseDrag(){this.xGizmo.dragBehavior.releaseDrag(),this.yGizmo.dragBehavior.releaseDrag(),this.zGizmo.dragBehavior.releaseDrag(),this.xPlaneGizmo.dragBehavior.releaseDrag(),this.yPlaneGizmo.dragBehavior.releaseDrag(),this.zPlaneGizmo.dragBehavior.releaseDrag()}dispose(){[this.xGizmo,this.yGizmo,this.zGizmo,this.xPlaneGizmo,this.yPlaneGizmo,this.zPlaneGizmo].forEach(e=>{e&&e.dispose()}),this._observables.forEach(e=>{this.gizmoLayer.utilityLayerScene.onPointerObservable.remove(e)}),this.onDragStartObservable.clear(),this.onDragObservable.clear(),this.onDragEndObservable.clear(),super.dispose()}setCustomMesh(){D.Error("Custom meshes are not supported on this gizmo, please set the custom meshes on the gizmos contained within this one (gizmo.xGizmo, gizmo.yGizmo, gizmo.zGizmo,gizmo.xPlaneGizmo, gizmo.yPlaneGizmo, gizmo.zPlaneGizmo)")}}class xi extends Ae{get coloredMaterial(){return this._coloredMaterial}get hoverMaterial(){return this._hoverMaterial}get disableMaterial(){return this._disableMaterial}get attachedMesh(){return this._meshAttached}set attachedMesh(e){this._meshAttached=e,this._nodeAttached=e,[this.xGizmo,this.yGizmo,this.zGizmo,this.uniformScaleGizmo].forEach(t=>{t.isEnabled?t.attachedMesh=e:t.attachedMesh=null})}get attachedNode(){return this._nodeAttached}set attachedNode(e){this._meshAttached=null,this._nodeAttached=e,[this.xGizmo,this.yGizmo,this.zGizmo,this.uniformScaleGizmo].forEach(t=>{t.isEnabled?t.attachedNode=e:t.attachedNode=null})}set updateScale(e){this.xGizmo&&(this.xGizmo.updateScale=e,this.yGizmo.updateScale=e,this.zGizmo.updateScale=e)}get updateScale(){return this.xGizmo.updateScale}get isHovered(){return this.xGizmo.isHovered||this.yGizmo.isHovered||this.zGizmo.isHovered||this.uniformScaleGizmo.isHovered}get isDragging(){return this.xGizmo.dragBehavior.dragging||this.yGizmo.dragBehavior.dragging||this.zGizmo.dragBehavior.dragging||this.uniformScaleGizmo.dragBehavior.dragging}get additionalTransformNode(){return this._additionalTransformNode}set additionalTransformNode(e){[this.xGizmo,this.yGizmo,this.zGizmo,this.uniformScaleGizmo].forEach(t=>{t.additionalTransformNode=e})}constructor(e=Se.DefaultUtilityLayer,t=1,s,i){super(e),this._meshAttached=null,this._nodeAttached=null,this._incrementalSnap=!1,this._sensitivity=1,this._observables=[],this._gizmoAxisCache=new Map,this.onDragStartObservable=new W,this.onDragObservable=new W,this.onDragEndObservable=new W,this.uniformScaleGizmo=this._createUniformScaleMesh(),this.xGizmo=new nt(new d(1,0,0),O.Red().scale(.5),e,this,t),this.yGizmo=new nt(new d(0,1,0),O.Green().scale(.5),e,this,t),this.zGizmo=new nt(new d(0,0,1),O.Blue().scale(.5),e,this,t),this.additionalTransformNode=i==null?void 0:i.additionalTransformNode,[this.xGizmo,this.yGizmo,this.zGizmo,this.uniformScaleGizmo].forEach(a=>{a.dragBehavior.onDragStartObservable.add(()=>{this.onDragStartObservable.notifyObservers({})}),a.dragBehavior.onDragObservable.add(()=>{this.onDragObservable.notifyObservers({})}),a.dragBehavior.onDragEndObservable.add(()=>{this.onDragEndObservable.notifyObservers({})})}),this.attachedMesh=null,this.attachedNode=null,s?s.addToAxisCache(this._gizmoAxisCache):Ae.GizmoAxisPointerObserver(e,this._gizmoAxisCache)}_createUniformScaleMesh(){this._coloredMaterial=new J("",this.gizmoLayer.utilityLayerScene),this._coloredMaterial.diffuseColor=O.Gray(),this._hoverMaterial=new J("",this.gizmoLayer.utilityLayerScene),this._hoverMaterial.diffuseColor=O.Yellow(),this._disableMaterial=new J("",this.gizmoLayer.utilityLayerScene),this._disableMaterial.diffuseColor=O.Gray(),this._disableMaterial.alpha=.4;const e=new nt(new d(0,1,0),O.Gray().scale(.5),this.gizmoLayer,this);e.updateGizmoRotationToMatchAttachedMesh=!1,e.uniformScaling=!0,this._uniformScalingMesh=Ft("uniform",{type:1},e.gizmoLayer.utilityLayerScene),this._uniformScalingMesh.scaling.scaleInPlace(.01),this._uniformScalingMesh.visibility=0,this._octahedron=Ft("",{type:1},e.gizmoLayer.utilityLayerScene),this._octahedron.scaling.scaleInPlace(.007),this._uniformScalingMesh.addChild(this._octahedron),e.setCustomMesh(this._uniformScalingMesh,!0);const t=this.gizmoLayer._getSharedGizmoLight();t.includedOnlyMeshes=t.includedOnlyMeshes.concat(this._octahedron);const s={gizmoMeshes:[this._octahedron,this._uniformScalingMesh],colliderMeshes:[this._octahedron,this._uniformScalingMesh],material:this._coloredMaterial,hoverMaterial:this._hoverMaterial,disableMaterial:this._disableMaterial,active:!1,dragBehavior:e.dragBehavior};return this.addToAxisCache(e._rootMesh,s),e}set updateGizmoRotationToMatchAttachedMesh(e){e?(this._updateGizmoRotationToMatchAttachedMesh=e,[this.xGizmo,this.yGizmo,this.zGizmo,this.uniformScaleGizmo].forEach(t=>{t&&(t.updateGizmoRotationToMatchAttachedMesh=e)})):D.Warn("Setting updateGizmoRotationToMatchAttachedMesh = false on scaling gizmo is not supported.")}get updateGizmoRotationToMatchAttachedMesh(){return this._updateGizmoRotationToMatchAttachedMesh}set anchorPoint(e){this._anchorPoint=e,[this.xGizmo,this.yGizmo,this.zGizmo,this.uniformScaleGizmo].forEach(t=>{t&&(t.anchorPoint=e)})}get anchorPoint(){return this._anchorPoint}get customRotationQuaternion(){return this._customRotationQuaternion}set customRotationQuaternion(e){this._customRotationQuaternion=e,[this.xGizmo,this.yGizmo,this.zGizmo,this.uniformScaleGizmo].forEach(t=>{t&&(t.customRotationQuaternion=e)})}set coordinatesMode(e){e==0&&D.Warn("Setting coordinates Mode to world on scaling gizmo is not supported."),[this.xGizmo,this.yGizmo,this.zGizmo,this.uniformScaleGizmo].forEach(t=>{t.coordinatesMode=1})}set snapDistance(e){this._snapDistance=e,[this.xGizmo,this.yGizmo,this.zGizmo,this.uniformScaleGizmo].forEach(t=>{t&&(t.snapDistance=e)})}get snapDistance(){return this._snapDistance}set incrementalSnap(e){this._incrementalSnap=e,[this.xGizmo,this.yGizmo,this.zGizmo,this.uniformScaleGizmo].forEach(t=>{t&&(t.incrementalSnap=e)})}get incrementalSnap(){return this._incrementalSnap}set scaleRatio(e){this._scaleRatio=e,[this.xGizmo,this.yGizmo,this.zGizmo,this.uniformScaleGizmo].forEach(t=>{t&&(t.scaleRatio=e)})}get scaleRatio(){return this._scaleRatio}set sensitivity(e){this._sensitivity=e,[this.xGizmo,this.yGizmo,this.zGizmo,this.uniformScaleGizmo].forEach(t=>{t&&(t.sensitivity=e)})}get sensitivity(){return this._sensitivity}addToAxisCache(e,t){this._gizmoAxisCache.set(e,t)}getAxisCache(e){return this._gizmoAxisCache.get(e)}releaseDrag(){this.xGizmo.dragBehavior.releaseDrag(),this.yGizmo.dragBehavior.releaseDrag(),this.zGizmo.dragBehavior.releaseDrag(),this.uniformScaleGizmo.dragBehavior.releaseDrag()}dispose(){[this.xGizmo,this.yGizmo,this.zGizmo,this.uniformScaleGizmo].forEach(e=>{e&&e.dispose()}),this._observables.forEach(e=>{this.gizmoLayer.utilityLayerScene.onPointerObservable.remove(e)}),this.onDragStartObservable.clear(),this.onDragObservable.clear(),this.onDragEndObservable.clear(),[this._uniformScalingMesh,this._octahedron].forEach(e=>{e&&e.dispose()}),[this._coloredMaterial,this._hoverMaterial,this._disableMaterial].forEach(e=>{e&&e.dispose()})}}class ya{get keepDepthUtilityLayer(){return this._defaultKeepDepthUtilityLayer}get utilityLayer(){return this._defaultUtilityLayer}get isHovered(){let e=!1;for(const t in this.gizmos){const s=this.gizmos[t];if(s&&s.isHovered){e=!0;break}}return e}get isDragging(){let e=!1;return[this.gizmos.positionGizmo,this.gizmos.rotationGizmo,this.gizmos.scaleGizmo,this.gizmos.boundingBoxGizmo].forEach(t=>{t&&t.isDragging&&(e=!0)}),e}set scaleRatio(e){this._scaleRatio=e,[this.gizmos.positionGizmo,this.gizmos.rotationGizmo,this.gizmos.scaleGizmo].forEach(t=>{t&&(t.scaleRatio=e)})}get scaleRatio(){return this._scaleRatio}set coordinatesMode(e){this._coordinatesMode=e,[this.gizmos.positionGizmo,this.gizmos.rotationGizmo,this.gizmos.scaleGizmo].forEach(t=>{t&&(t.coordinatesMode=e)})}get coordinatesMode(){return this._coordinatesMode}get attachedMesh(){return this._attachedMesh}get attachedNode(){return this._attachedNode}get additionalTransformNode(){return this._additionalTransformNode}constructor(e,t=1,s=Se.DefaultUtilityLayer,i=Se.DefaultKeepDepthUtilityLayer){this._scene=e,this.clearGizmoOnEmptyPointerEvent=!1,this.enableAutoPicking=!0,this.onAttachedToMeshObservable=new W,this.onAttachedToNodeObservable=new W,this._gizmosEnabled={positionGizmo:!1,rotationGizmo:!1,scaleGizmo:!1,boundingBoxGizmo:!1},this._pointerObservers=[],this._attachedMesh=null,this._attachedNode=null,this._boundingBoxColor=O.FromHexString("#0984e3"),this._thickness=1,this._scaleRatio=1,this._coordinatesMode=1,this._gizmoAxisCache=new Map,this.boundingBoxDragBehavior=new ui,this.attachableMeshes=null,this.attachableNodes=null,this.usePointerToAttachGizmos=!0,this._defaultUtilityLayer=s,this._defaultKeepDepthUtilityLayer=i,this._defaultKeepDepthUtilityLayer.utilityLayerScene.autoClearDepthAndStencil=!1,this._thickness=t,this.gizmos={positionGizmo:null,rotationGizmo:null,scaleGizmo:null,boundingBoxGizmo:null};const a=this._attachToMeshPointerObserver(e),r=Ae.GizmoAxisPointerObserver(this._defaultUtilityLayer,this._gizmoAxisCache);this._pointerObservers=[a,r]}_attachToMeshPointerObserver(e){return e.onPointerObservable.add(s=>{if(this.usePointerToAttachGizmos&&s.type==Ke.POINTERDOWN)if(s.pickInfo&&s.pickInfo.pickedMesh){if(this.enableAutoPicking){let i=s.pickInfo.pickedMesh;if(this.attachableMeshes==null)for(;i&&i.parent!=null;)i=i.parent;else{let a=!1;this.attachableMeshes.forEach(r=>{i&&(i==r||i.isDescendantOf(r))&&(i=r,a=!0)}),a||(i=null)}i instanceof Ut?this._attachedMesh!=i&&this.attachToMesh(i):this.clearGizmoOnEmptyPointerEvent&&this.attachToMesh(null)}}else this.clearGizmoOnEmptyPointerEvent&&this.attachToMesh(null)})}attachToMesh(e){this._attachedMesh&&this._attachedMesh.removeBehavior(this.boundingBoxDragBehavior),this._attachedNode&&this._attachedNode.removeBehavior(this.boundingBoxDragBehavior),this._attachedMesh=e,this._attachedNode=null;for(const t in this.gizmos){const s=this.gizmos[t];s&&this._gizmosEnabled[t]&&(s.attachedMesh=e)}this.boundingBoxGizmoEnabled&&this._attachedMesh&&this._attachedMesh.addBehavior(this.boundingBoxDragBehavior),this.onAttachedToMeshObservable.notifyObservers(e)}attachToNode(e){this._attachedMesh&&this._attachedMesh.removeBehavior(this.boundingBoxDragBehavior),this._attachedNode&&this._attachedNode.removeBehavior(this.boundingBoxDragBehavior),this._attachedMesh=null,this._attachedNode=e;for(const t in this.gizmos){const s=this.gizmos[t];s&&this._gizmosEnabled[t]&&(s.attachedNode=e)}this.boundingBoxGizmoEnabled&&this._attachedNode&&this._attachedNode.addBehavior(this.boundingBoxDragBehavior),this.onAttachedToNodeObservable.notifyObservers(e)}set positionGizmoEnabled(e){e?(this.gizmos.positionGizmo||(this.gizmos.positionGizmo=new bi(this._defaultUtilityLayer,this._thickness,this)),this._attachedNode?this.gizmos.positionGizmo.attachedNode=this._attachedNode:this.gizmos.positionGizmo.attachedMesh=this._attachedMesh):this.gizmos.positionGizmo&&(this.gizmos.positionGizmo.attachedNode=null),this._gizmosEnabled.positionGizmo=e,this._setAdditionalTransformNode()}get positionGizmoEnabled(){return this._gizmosEnabled.positionGizmo}set rotationGizmoEnabled(e){e?(this.gizmos.rotationGizmo||(this.gizmos.rotationGizmo=new fi(this._defaultUtilityLayer,32,!1,this._thickness,this)),this._attachedNode?this.gizmos.rotationGizmo.attachedNode=this._attachedNode:this.gizmos.rotationGizmo.attachedMesh=this._attachedMesh):this.gizmos.rotationGizmo&&(this.gizmos.rotationGizmo.attachedNode=null),this._gizmosEnabled.rotationGizmo=e,this._setAdditionalTransformNode()}get rotationGizmoEnabled(){return this._gizmosEnabled.rotationGizmo}set scaleGizmoEnabled(e){e?(this.gizmos.scaleGizmo=this.gizmos.scaleGizmo||new xi(this._defaultUtilityLayer,this._thickness,this),this._attachedNode?this.gizmos.scaleGizmo.attachedNode=this._attachedNode:this.gizmos.scaleGizmo.attachedMesh=this._attachedMesh):this.gizmos.scaleGizmo&&(this.gizmos.scaleGizmo.attachedNode=null),this._gizmosEnabled.scaleGizmo=e,this._setAdditionalTransformNode()}get scaleGizmoEnabled(){return this._gizmosEnabled.scaleGizmo}set boundingBoxGizmoEnabled(e){e?(this.gizmos.boundingBoxGizmo=this.gizmos.boundingBoxGizmo||new Us(this._boundingBoxColor,this._defaultKeepDepthUtilityLayer),this._attachedMesh?this.gizmos.boundingBoxGizmo.attachedMesh=this._attachedMesh:this.gizmos.boundingBoxGizmo.attachedNode=this._attachedNode,this._attachedMesh?(this._attachedMesh.removeBehavior(this.boundingBoxDragBehavior),this._attachedMesh.addBehavior(this.boundingBoxDragBehavior)):this._attachedNode&&(this._attachedNode.removeBehavior(this.boundingBoxDragBehavior),this._attachedNode.addBehavior(this.boundingBoxDragBehavior))):this.gizmos.boundingBoxGizmo&&(this._attachedMesh?this._attachedMesh.removeBehavior(this.boundingBoxDragBehavior):this._attachedNode&&this._attachedNode.removeBehavior(this.boundingBoxDragBehavior),this.gizmos.boundingBoxGizmo.attachedNode=null),this._gizmosEnabled.boundingBoxGizmo=e,this._setAdditionalTransformNode()}get boundingBoxGizmoEnabled(){return this._gizmosEnabled.boundingBoxGizmo}set additionalTransformNode(e){this._additionalTransformNode=e,this._setAdditionalTransformNode()}_setAdditionalTransformNode(){for(const e in this.gizmos){const t=this.gizmos[e];t&&this._gizmosEnabled[e]&&(t.additionalTransformNode=this._additionalTransformNode)}}addToAxisCache(e){e.size>0&&e.forEach((t,s)=>{this._gizmoAxisCache.set(s,t)})}releaseDrag(){[this.gizmos.positionGizmo,this.gizmos.rotationGizmo,this.gizmos.scaleGizmo,this.gizmos.boundingBoxGizmo].forEach(e=>{e==null||e.releaseDrag()})}dispose(){var e,t;this._pointerObservers.forEach(s=>{this._scene.onPointerObservable.remove(s)});for(const s in this.gizmos){const i=this.gizmos[s];i&&i.dispose()}this._defaultKeepDepthUtilityLayer!==Se._DefaultKeepDepthUtilityLayer&&((e=this._defaultKeepDepthUtilityLayer)==null||e.dispose()),this._defaultUtilityLayer!==Se._DefaultUtilityLayer&&((t=this._defaultUtilityLayer)==null||t.dispose()),this.boundingBoxDragBehavior.detach(),this.onAttachedToMeshObservable.clear()}}function Pi(u,e,t,s,i){return(1-u)*(1-u)*(1-u)*e+3*(1-u)*(1-u)*u*t+3*(1-u)*u*u*s+u*u*u*i}function Ta(u,e=new Ee(0,1),t=new Ee(0,.1),s=new Ee(0,.1),i=new Ee(1300,.1)){const a=Math.pow(u/i.x,.333333);return Pi(a,e.y,t.y,s.y,i.y)}class yi{get gpuFrameTimeCounter(){return this.engine.getGPUFrameTimeCounter()}get captureGPUFrameTime(){return this._captureGPUFrameTime}set captureGPUFrameTime(e){e!==this._captureGPUFrameTime&&(this._captureGPUFrameTime=e,this.engine.captureGPUFrameTime(e))}get shaderCompilationTimeCounter(){return this._shaderCompilationTime}get captureShaderCompilationTime(){return this._captureShaderCompilationTime}set captureShaderCompilationTime(e){e!==this._captureShaderCompilationTime&&(this._captureShaderCompilationTime=e,e?(this._onBeforeShaderCompilationObserver=this.engine.onBeforeShaderCompilationObservable.add(()=>{this._shaderCompilationTime.fetchNewFrame(),this._shaderCompilationTime.beginMonitoring()}),this._onAfterShaderCompilationObserver=this.engine.onAfterShaderCompilationObservable.add(()=>{this._shaderCompilationTime.endMonitoring()})):(this.engine.onBeforeShaderCompilationObservable.remove(this._onBeforeShaderCompilationObserver),this._onBeforeShaderCompilationObserver=null,this.engine.onAfterShaderCompilationObservable.remove(this._onAfterShaderCompilationObserver),this._onAfterShaderCompilationObserver=null))}constructor(e){this.engine=e,this._captureGPUFrameTime=!1,this._captureShaderCompilationTime=!1,this._shaderCompilationTime=new _e,this._onBeginFrameObserver=null,this._onEndFrameObserver=null,this._onBeforeShaderCompilationObserver=null,this._onAfterShaderCompilationObserver=null}dispose(){this.engine.onBeginFrameObservable.remove(this._onBeginFrameObserver),this._onBeginFrameObserver=null,this.engine.onEndFrameObservable.remove(this._onEndFrameObserver),this._onEndFrameObserver=null,this.engine.onBeforeShaderCompilationObservable.remove(this._onBeforeShaderCompilationObserver),this._onBeforeShaderCompilationObserver=null,this.engine.onAfterShaderCompilationObservable.remove(this._onAfterShaderCompilationObserver),this._onAfterShaderCompilationObserver=null,this.engine=null}}class Ti{get activeMeshesEvaluationTimeCounter(){return this._activeMeshesEvaluationTime}get captureActiveMeshesEvaluationTime(){return this._captureActiveMeshesEvaluationTime}set captureActiveMeshesEvaluationTime(e){e!==this._captureActiveMeshesEvaluationTime&&(this._captureActiveMeshesEvaluationTime=e,e?(this._onBeforeActiveMeshesEvaluationObserver=this.scene.onBeforeActiveMeshesEvaluationObservable.add(()=>{se.StartPerformanceCounter("Active meshes evaluation"),this._activeMeshesEvaluationTime.beginMonitoring()}),this._onAfterActiveMeshesEvaluationObserver=this.scene.onAfterActiveMeshesEvaluationObservable.add(()=>{se.EndPerformanceCounter("Active meshes evaluation"),this._activeMeshesEvaluationTime.endMonitoring(!1)})):(this.scene.onBeforeActiveMeshesEvaluationObservable.remove(this._onBeforeActiveMeshesEvaluationObserver),this._onBeforeActiveMeshesEvaluationObserver=null,this.scene.onAfterActiveMeshesEvaluationObservable.remove(this._onAfterActiveMeshesEvaluationObserver),this._onAfterActiveMeshesEvaluationObserver=null))}get renderTargetsRenderTimeCounter(){return this._renderTargetsRenderTime}get captureRenderTargetsRenderTime(){return this._captureRenderTargetsRenderTime}set captureRenderTargetsRenderTime(e){e!==this._captureRenderTargetsRenderTime&&(this._captureRenderTargetsRenderTime=e,e?(this._onBeforeRenderTargetsRenderObserver=this.scene.onBeforeRenderTargetsRenderObservable.add(()=>{se.StartPerformanceCounter("Render targets rendering"),this._renderTargetsRenderTime.beginMonitoring()}),this._onAfterRenderTargetsRenderObserver=this.scene.onAfterRenderTargetsRenderObservable.add(()=>{se.EndPerformanceCounter("Render targets rendering"),this._renderTargetsRenderTime.endMonitoring(!1)})):(this.scene.onBeforeRenderTargetsRenderObservable.remove(this._onBeforeRenderTargetsRenderObserver),this._onBeforeRenderTargetsRenderObserver=null,this.scene.onAfterRenderTargetsRenderObservable.remove(this._onAfterRenderTargetsRenderObserver),this._onAfterRenderTargetsRenderObserver=null))}get particlesRenderTimeCounter(){return this._particlesRenderTime}get captureParticlesRenderTime(){return this._captureParticlesRenderTime}set captureParticlesRenderTime(e){e!==this._captureParticlesRenderTime&&(this._captureParticlesRenderTime=e,e?(this._onBeforeParticlesRenderingObserver=this.scene.onBeforeParticlesRenderingObservable.add(()=>{se.StartPerformanceCounter("Particles"),this._particlesRenderTime.beginMonitoring()}),this._onAfterParticlesRenderingObserver=this.scene.onAfterParticlesRenderingObservable.add(()=>{se.EndPerformanceCounter("Particles"),this._particlesRenderTime.endMonitoring(!1)})):(this.scene.onBeforeParticlesRenderingObservable.remove(this._onBeforeParticlesRenderingObserver),this._onBeforeParticlesRenderingObserver=null,this.scene.onAfterParticlesRenderingObservable.remove(this._onAfterParticlesRenderingObserver),this._onAfterParticlesRenderingObserver=null))}get spritesRenderTimeCounter(){return this._spritesRenderTime}get captureSpritesRenderTime(){return this._captureSpritesRenderTime}set captureSpritesRenderTime(e){e!==this._captureSpritesRenderTime&&(this._captureSpritesRenderTime=e,this.scene.spriteManagers&&(e?(this._onBeforeSpritesRenderingObserver=this.scene.onBeforeSpritesRenderingObservable.add(()=>{se.StartPerformanceCounter("Sprites"),this._spritesRenderTime.beginMonitoring()}),this._onAfterSpritesRenderingObserver=this.scene.onAfterSpritesRenderingObservable.add(()=>{se.EndPerformanceCounter("Sprites"),this._spritesRenderTime.endMonitoring(!1)})):(this.scene.onBeforeSpritesRenderingObservable.remove(this._onBeforeSpritesRenderingObserver),this._onBeforeSpritesRenderingObserver=null,this.scene.onAfterSpritesRenderingObservable.remove(this._onAfterSpritesRenderingObserver),this._onAfterSpritesRenderingObserver=null)))}get physicsTimeCounter(){return this._physicsTime}get capturePhysicsTime(){return this._capturePhysicsTime}set capturePhysicsTime(e){e!==this._capturePhysicsTime&&this.scene.onBeforePhysicsObservable&&(this._capturePhysicsTime=e,e?(this._onBeforePhysicsObserver=this.scene.onBeforePhysicsObservable.add(()=>{se.StartPerformanceCounter("Physics"),this._physicsTime.beginMonitoring()}),this._onAfterPhysicsObserver=this.scene.onAfterPhysicsObservable.add(()=>{se.EndPerformanceCounter("Physics"),this._physicsTime.endMonitoring()})):(this.scene.onBeforePhysicsObservable.remove(this._onBeforePhysicsObserver),this._onBeforePhysicsObserver=null,this.scene.onAfterPhysicsObservable.remove(this._onAfterPhysicsObserver),this._onAfterPhysicsObserver=null))}get animationsTimeCounter(){return this._animationsTime}get captureAnimationsTime(){return this._captureAnimationsTime}set captureAnimationsTime(e){e!==this._captureAnimationsTime&&(this._captureAnimationsTime=e,e?this._onAfterAnimationsObserver=this.scene.onAfterAnimationsObservable.add(()=>{this._animationsTime.endMonitoring()}):(this.scene.onAfterAnimationsObservable.remove(this._onAfterAnimationsObserver),this._onAfterAnimationsObserver=null))}get frameTimeCounter(){return this._frameTime}get captureFrameTime(){return this._captureFrameTime}set captureFrameTime(e){this._captureFrameTime=e}get interFrameTimeCounter(){return this._interFrameTime}get captureInterFrameTime(){return this._captureInterFrameTime}set captureInterFrameTime(e){this._captureInterFrameTime=e}get renderTimeCounter(){return this._renderTime}get captureRenderTime(){return this._captureRenderTime}set captureRenderTime(e){e!==this._captureRenderTime&&(this._captureRenderTime=e,e?(this._onBeforeDrawPhaseObserver=this.scene.onBeforeDrawPhaseObservable.add(()=>{this._renderTime.beginMonitoring(),se.StartPerformanceCounter("Main render")}),this._onAfterDrawPhaseObserver=this.scene.onAfterDrawPhaseObservable.add(()=>{this._renderTime.endMonitoring(!1),se.EndPerformanceCounter("Main render")})):(this.scene.onBeforeDrawPhaseObservable.remove(this._onBeforeDrawPhaseObserver),this._onBeforeDrawPhaseObserver=null,this.scene.onAfterDrawPhaseObservable.remove(this._onAfterDrawPhaseObserver),this._onAfterDrawPhaseObserver=null))}get cameraRenderTimeCounter(){return this._cameraRenderTime}get captureCameraRenderTime(){return this._captureCameraRenderTime}set captureCameraRenderTime(e){e!==this._captureCameraRenderTime&&(this._captureCameraRenderTime=e,e?(this._onBeforeCameraRenderObserver=this.scene.onBeforeCameraRenderObservable.add(t=>{this._cameraRenderTime.beginMonitoring(),se.StartPerformanceCounter(`Rendering camera ${t.name}`)}),this._onAfterCameraRenderObserver=this.scene.onAfterCameraRenderObservable.add(t=>{this._cameraRenderTime.endMonitoring(!1),se.EndPerformanceCounter(`Rendering camera ${t.name}`)})):(this.scene.onBeforeCameraRenderObservable.remove(this._onBeforeCameraRenderObserver),this._onBeforeCameraRenderObserver=null,this.scene.onAfterCameraRenderObservable.remove(this._onAfterCameraRenderObserver),this._onAfterCameraRenderObserver=null))}get drawCallsCounter(){return this.scene.getEngine()._drawCalls}constructor(e){this.scene=e,this._captureActiveMeshesEvaluationTime=!1,this._activeMeshesEvaluationTime=new _e,this._captureRenderTargetsRenderTime=!1,this._renderTargetsRenderTime=new _e,this._captureFrameTime=!1,this._frameTime=new _e,this._captureRenderTime=!1,this._renderTime=new _e,this._captureInterFrameTime=!1,this._interFrameTime=new _e,this._captureParticlesRenderTime=!1,this._particlesRenderTime=new _e,this._captureSpritesRenderTime=!1,this._spritesRenderTime=new _e,this._capturePhysicsTime=!1,this._physicsTime=new _e,this._captureAnimationsTime=!1,this._animationsTime=new _e,this._captureCameraRenderTime=!1,this._cameraRenderTime=new _e,this._onBeforeActiveMeshesEvaluationObserver=null,this._onAfterActiveMeshesEvaluationObserver=null,this._onBeforeRenderTargetsRenderObserver=null,this._onAfterRenderTargetsRenderObserver=null,this._onAfterRenderObserver=null,this._onBeforeDrawPhaseObserver=null,this._onAfterDrawPhaseObserver=null,this._onBeforeAnimationsObserver=null,this._onBeforeParticlesRenderingObserver=null,this._onAfterParticlesRenderingObserver=null,this._onBeforeSpritesRenderingObserver=null,this._onAfterSpritesRenderingObserver=null,this._onBeforePhysicsObserver=null,this._onAfterPhysicsObserver=null,this._onAfterAnimationsObserver=null,this._onBeforeCameraRenderObserver=null,this._onAfterCameraRenderObserver=null,this._onBeforeAnimationsObserver=e.onBeforeAnimationsObservable.add(()=>{this._captureActiveMeshesEvaluationTime&&this._activeMeshesEvaluationTime.fetchNewFrame(),this._captureRenderTargetsRenderTime&&this._renderTargetsRenderTime.fetchNewFrame(),this._captureFrameTime&&(se.StartPerformanceCounter("Scene rendering"),this._frameTime.beginMonitoring()),this._captureInterFrameTime&&this._interFrameTime.endMonitoring(),this._captureParticlesRenderTime&&this._particlesRenderTime.fetchNewFrame(),this._captureSpritesRenderTime&&this._spritesRenderTime.fetchNewFrame(),this._captureAnimationsTime&&this._animationsTime.beginMonitoring(),this._captureRenderTime&&this._renderTime.fetchNewFrame(),this._captureCameraRenderTime&&this._cameraRenderTime.fetchNewFrame(),this.scene.getEngine()._drawCalls.fetchNewFrame()}),this._onAfterRenderObserver=e.onAfterRenderObservable.add(()=>{this._captureFrameTime&&(se.EndPerformanceCounter("Scene rendering"),this._frameTime.endMonitoring()),this._captureRenderTime&&this._renderTime.endMonitoring(!1),this._captureInterFrameTime&&this._interFrameTime.beginMonitoring(),this._captureActiveMeshesEvaluationTime&&this._activeMeshesEvaluationTime.endFrame(),this._captureRenderTargetsRenderTime&&this._renderTargetsRenderTime.endFrame(),this._captureParticlesRenderTime&&this._particlesRenderTime.endFrame(),this._captureSpritesRenderTime&&this._spritesRenderTime.endFrame(),this._captureRenderTime&&this._renderTime.endFrame(),this._captureCameraRenderTime&&this._cameraRenderTime.endFrame()})}dispose(){this.scene.onAfterRenderObservable.remove(this._onAfterRenderObserver),this._onAfterRenderObserver=null,this.scene.onBeforeActiveMeshesEvaluationObservable.remove(this._onBeforeActiveMeshesEvaluationObserver),this._onBeforeActiveMeshesEvaluationObserver=null,this.scene.onAfterActiveMeshesEvaluationObservable.remove(this._onAfterActiveMeshesEvaluationObserver),this._onAfterActiveMeshesEvaluationObserver=null,this.scene.onBeforeRenderTargetsRenderObservable.remove(this._onBeforeRenderTargetsRenderObserver),this._onBeforeRenderTargetsRenderObserver=null,this.scene.onAfterRenderTargetsRenderObservable.remove(this._onAfterRenderTargetsRenderObserver),this._onAfterRenderTargetsRenderObserver=null,this.scene.onBeforeAnimationsObservable.remove(this._onBeforeAnimationsObserver),this._onBeforeAnimationsObserver=null,this.scene.onBeforeParticlesRenderingObservable.remove(this._onBeforeParticlesRenderingObserver),this._onBeforeParticlesRenderingObserver=null,this.scene.onAfterParticlesRenderingObservable.remove(this._onAfterParticlesRenderingObserver),this._onAfterParticlesRenderingObserver=null,this._onBeforeSpritesRenderingObserver&&(this.scene.onBeforeSpritesRenderingObservable.remove(this._onBeforeSpritesRenderingObserver),this._onBeforeSpritesRenderingObserver=null),this._onAfterSpritesRenderingObserver&&(this.scene.onAfterSpritesRenderingObservable.remove(this._onAfterSpritesRenderingObserver),this._onAfterSpritesRenderingObserver=null),this.scene.onBeforeDrawPhaseObservable.remove(this._onBeforeDrawPhaseObserver),this._onBeforeDrawPhaseObserver=null,this.scene.onAfterDrawPhaseObservable.remove(this._onAfterDrawPhaseObserver),this._onAfterDrawPhaseObserver=null,this._onBeforePhysicsObserver&&(this.scene.onBeforePhysicsObservable.remove(this._onBeforePhysicsObserver),this._onBeforePhysicsObserver=null),this._onAfterPhysicsObserver&&(this.scene.onAfterPhysicsObservable.remove(this._onAfterPhysicsObserver),this._onAfterPhysicsObserver=null),this.scene.onAfterAnimationsObservable.remove(this._onAfterAnimationsObserver),this._onAfterAnimationsObserver=null,this.scene.onBeforeCameraRenderObservable.remove(this._onBeforeCameraRenderObserver),this._onBeforeCameraRenderObserver=null,this.scene.onAfterCameraRenderObservable.remove(this._onAfterCameraRenderObserver),this._onAfterCameraRenderObserver=null,this.scene=null}}class Sa extends st{constructor(e,t){super(e,t,"color",{attributes:["position"],uniforms:["world","viewProjection","color"]}),this.disableColorWrite=!0,this.forceDepthWrite=!0,this.setColor4("color",new Me(0,0,0,1))}}class Si extends Oe{constructor(e,t,s,i,a,r,n){super(e,s,null,i,a,r),this._animate=!0,this._time=0,this._texturePath=t,a&&!(a instanceof K)&&(n=!!a.skipJson),n?this.setFragment(this._texturePath):this._loadJson(t),this.refreshRate=1}_loadJson(e){const t=()=>{try{this.setFragment(this._texturePath)}catch{D.Log("No json or ShaderStore or DOM element found for CustomProceduralTexture")}},s=e+"/config.json",i=new ds;i.open("GET",s),i.addEventListener("load",()=>{if(i.status===200||i.responseText&&i.responseText.length>0)try{this._config=JSON.parse(i.response),this.updateShaderUniforms(),this.updateTextures(),this.setFragment(this._texturePath+"/custom"),this._animate=this._config.animate,this.refreshRate=this._config.refreshrate}catch{t()}else t()},!1),i.addEventListener("error",()=>{t()},!1);try{i.send()}catch{D.Error("CustomProceduralTexture: Error on XHR send request.")}}isReady(){if(!super.isReady())return!1;for(const e in this._textures)if(!this._textures[e].isReady())return!1;return!0}render(e){const t=this.getScene();this._animate&&t&&(this._time+=t.getAnimationRatio()*.03,this.updateShaderUniforms()),super.render(e)}updateTextures(){for(let e=0;e<this._config.sampler2Ds.length;e++)this.setTexture(this._config.sampler2Ds[e].sample2Dname,new K(this._texturePath+"/"+this._config.sampler2Ds[e].textureRelativeUrl,this.getScene()))}updateShaderUniforms(){if(this._config)for(let e=0;e<this._config.uniforms.length;e++){const t=this._config.uniforms[e];switch(t.type){case"float":this.setFloat(t.name,t.value);break;case"color3":this.setColor3(t.name,new O(t.r,t.g,t.b));break;case"color4":this.setColor4(t.name,new Me(t.r,t.g,t.b,t.a));break;case"vector2":this.setVector2(t.name,new Ee(t.x,t.y));break;case"vector3":this.setVector3(t.name,new d(t.x,t.y,t.z));break}}this.setFloat("time",this._time)}get animate(){return this._animate}set animate(e){this._animate=e}}class $t extends K{get width(){return this._texture?this._texture.width:0}get height(){return this._texture?this._texture.height:0}get depth(){return this._texture?this._texture.depth:0}constructor(e,t,s,i,a,r,n=!0,o=!1,h=K.TRILINEAR_SAMPLINGMODE,l=0,_){super(null,r,!n,o),this.format=a,this._texture=r.getEngine().createRawTexture3D(e,t,s,i,a,n,o,h,null,l,_),this.is3D=!0}update(e){this._texture&&this._getEngine().updateRawTexture3D(this._texture,e,this._texture.format,this._texture.invertY,null,this._texture.type)}}class Jt extends me{constructor(e,t,s,i){super(e,t,s,i,!0),this.refractionPlane=new us(0,1,0,1),this.depth=2,this.onBeforeRenderObservable.add(()=>{this.getScene().clipPlane=this.refractionPlane}),this.onAfterRenderObservable.add(()=>{this.getScene().clipPlane=null})}clone(){const e=this.getScene();if(!e)return this;const t=this.getSize(),s=new Jt(this.name,t.width,e,this._generateMipMaps);return s.hasAlpha=this.hasAlpha,s.level=this.level,s.refractionPlane=this.refractionPlane.clone(),this.renderList&&(s.renderList=this.renderList.slice(0)),s.depth=this.depth,s}serialize(){if(!this.name)return null;const e=super.serialize();return e.mirrorPlane=this.refractionPlane.asArray(),e.depth=this.depth,e}}class Ma extends _s{get renderTarget(){return this._renderTarget}constructor(e,t,s){super(null),this._renderTarget=null,this._engine=e,this._renderTargetOptions=s,this.resize(t)}resize(e){var t;(t=this._renderTarget)==null||t.dispose(),this._renderTarget=null,this._texture=null,this._size=e,this._engine&&(this._renderTarget=this._engine.createRenderTargetTexture(this._size,this._renderTargetOptions)),this._texture=this.renderTarget.texture}getInternalTexture(){return this._texture}getClassName(){return"ThinRenderTargetTexture"}dispose(e=!1){var t;(t=this._renderTarget)==null||t.dispose(!0),this._renderTarget=null,e||super.dispose()}}function va(u){u.clear(),u.editorData=null;const e=new ot("SplatIndex");e.setAsAttribute("splatIndex");const t=new js("SplatReader");e.connectTo(t);const s=new Qs("GaussianSplatting");t.connectTo(s);const i=new ot("World");i.setAsSystemValue(mt.World);const a=new Xs("WorldPos");t.connectTo(a),i.connectTo(a),a.connectTo(s,{output:"xyz",input:"splatPosition"});const r=new ot("view");r.setAsSystemValue(mt.View);const n=new ot("Projection");n.setAsSystemValue(mt.Projection),i.connectTo(s,{input:"world"}),r.connectTo(s,{input:"view"}),n.connectTo(s,{input:"projection"});const o=new qs("Gaussian");t.connectTo(o,{input:"splatColor",output:"splatColor"});const h=new Zs("FragmentOutput");o.connectTo(h);const l=new Ys("VertexOutput");s.connectTo(l),u.addOutputNode(l),u.addOutputNode(h),u._mode=Ks.GaussianSplatting}class Ba{optimize(e,t){}}class Mi{constructor(){this.mm=new Map}get(e,t){const s=this.mm.get(e);if(s!==void 0)return s.get(t)}set(e,t,s){let i=this.mm.get(e);i===void 0&&this.mm.set(e,i=new Map),i.set(t,s)}}class Aa{get standalone(){var e;return((e=this._options)==null?void 0:e.standalone)??!1}get baseMaterial(){return this._baseMaterial}get doNotInjectCode(){var e;return((e=this._options)==null?void 0:e.doNotInjectCode)??!1}constructor(e,t,s){this._baseMaterial=e,this._scene=t??Qe.LastCreatedScene,this._options=s,this._subMeshToEffect=new Map,this._subMeshToDepthWrapper=new Mi,this._meshes=new Map,this._onEffectCreatedObserver=this._baseMaterial.onEffectCreatedObservable.add(i=>{var r,n;const a=(r=i.subMesh)==null?void 0:r.getMesh();a&&!this._meshes.has(a)&&this._meshes.set(a,a.onDisposeObservable.add(o=>{const h=this._subMeshToEffect.keys();for(let l=h.next();l.done!==!0;l=h.next()){const _=l.value;(_==null?void 0:_.getMesh())===o&&(this._subMeshToEffect.delete(_),this._deleteDepthWrapperEffect(_))}})),((n=this._subMeshToEffect.get(i.subMesh))==null?void 0:n[0])!==i.effect&&(this._subMeshToEffect.set(i.subMesh,[i.effect,this._scene.getEngine().currentRenderPassId]),this._deleteDepthWrapperEffect(i.subMesh))})}_deleteDepthWrapperEffect(e){const t=this._subMeshToDepthWrapper.mm.get(e);t&&(t.forEach(s=>{var i;(i=s.mainDrawWrapper.effect)==null||i.dispose()}),this._subMeshToDepthWrapper.mm.delete(e))}getEffect(e,t,s){var r;const i=(r=this._subMeshToDepthWrapper.mm.get(e))==null?void 0:r.get(t);if(!i)return null;let a=i.drawWrapper[s];return a||(a=i.drawWrapper[s]=new Rt(this._scene.getEngine()),a.setEffect(i.mainDrawWrapper.effect,i.mainDrawWrapper.defines)),a}isReadyForSubMesh(e,t,s,i,a){var r;return this.standalone&&!this._baseMaterial.isReadyForSubMesh(e.getMesh(),e,i)?!1:((r=this._makeEffect(e,t,s,a))==null?void 0:r.isReady())??!1}dispose(){this._baseMaterial.onEffectCreatedObservable.remove(this._onEffectCreatedObserver),this._onEffectCreatedObserver=null;const e=this._meshes.entries();for(let t=e.next();t.done!==!0;t=e.next()){const[s,i]=t.value;s.onDisposeObservable.remove(i)}}_makeEffect(e,t,s,i){var f,m;const a=this._scene.getEngine(),r=this._subMeshToEffect.get(e);if(!r)return null;const[n,o]=r;let h=this._subMeshToDepthWrapper.get(e,s);if(!h){const b=new Rt(a);b.defines=((f=e._getDrawWrapper(o))==null?void 0:f.defines)??null,h={drawWrapper:[],mainDrawWrapper:b,depthDefines:"",token:ps()},h.drawWrapper[i]=b,this._subMeshToDepthWrapper.set(e,s,h)}const l=t.join(`
`);if(h.mainDrawWrapper.effect&&l===h.depthDefines)return h.mainDrawWrapper.effect;h.depthDefines=l;const _=n.getUniformNames().slice();let g=n.vertexSourceCodeBeforeMigration,p=n.fragmentSourceCodeBeforeMigration;if(!this.doNotInjectCode){const b=this._options&&this._options.remappedVariables?`#include<shadowMapVertexNormalBias>(${this._options.remappedVariables.join(",")})`:"#include<shadowMapVertexNormalBias>",y=this._options&&this._options.remappedVariables?`#include<shadowMapVertexMetric>(${this._options.remappedVariables.join(",")})`:"#include<shadowMapVertexMetric>",T=this._options&&this._options.remappedVariables?`#include<shadowMapFragmentSoftTransparentShadow>(${this._options.remappedVariables.join(",")})`:"#include<shadowMapFragmentSoftTransparentShadow>",v="#include<shadowMapFragment>",B="#include<shadowMapVertexExtraDeclaration>";n.shaderLanguage===0?g=g.replace(/void\s+?main/g,`
${B}
void main`):g=g.replace(/@vertex/g,`
${B}
@vertex`),g=g.replace(/#define SHADOWDEPTH_NORMALBIAS|#define CUSTOM_VERTEX_UPDATE_WORLDPOS/g,b),g.indexOf("#define SHADOWDEPTH_METRIC")!==-1?g=g.replace(/#define SHADOWDEPTH_METRIC/g,y):g=g.replace(/}\s*$/g,y+`
}`),g=g.replace(/#define SHADER_NAME.*?\n|out vec4 glFragColor;\n/g,"");const A=p.indexOf("#define SHADOWDEPTH_SOFTTRANSPARENTSHADOW")>=0||p.indexOf("#define CUSTOM_FRAGMENT_BEFORE_FOG")>=0,U=p.indexOf("#define SHADOWDEPTH_FRAGMENT")!==-1;let w="";A?p=p.replace(/#define SHADOWDEPTH_SOFTTRANSPARENTSHADOW|#define CUSTOM_FRAGMENT_BEFORE_FOG/g,T):w=T+`
`,p=p.replace(/void\s+?main/g,gs.IncludesShadersStore.shadowMapFragmentExtraDeclaration+`
void main`),U?p=p.replace(/#define SHADOWDEPTH_FRAGMENT/g,v):w+=v+`
`,w&&(p=p.replace(/}\s*$/g,w+"}")),_.push("biasAndScaleSM","depthValuesSM","lightDataSM","softTransparentShadowSM")}h.mainDrawWrapper.effect=a.createEffect({vertexSource:g,fragmentSource:p,vertexToken:h.token,fragmentToken:h.token},{attributes:n.getAttributesNames(),uniformsNames:_,uniformBuffersNames:n.getUniformBuffersNames(),samplers:n.getSamplers(),defines:l+`
`+n.defines.replace("#define SHADOWS","").replace(/#define SHADOW\d/g,""),indexParameters:n.getIndexParameters(),shaderLanguage:n.shaderLanguage},a);for(let b=0;b<h.drawWrapper.length;++b)b!==i&&((m=h.drawWrapper[b])==null||m.setEffect(h.mainDrawWrapper.effect,h.mainDrawWrapper.defines));return h.mainDrawWrapper.effect}}function Ca(u){return u instanceof Ge?new ms(u):null}function Ra(u){return u instanceof Ge?new fs(u):null}function Da(u){return u instanceof Ge?new bs(u):null}function wa(u){return u instanceof Ge?new xs(u):null}function Ia(u){return u instanceof Ge?new Ps(u):null}function Ea(u){return u instanceof Ge?new ys(u):null}function Fa(u){return u instanceof Ge||u instanceof J?new Ts(u):null}class pe{constructor(e,t){this.radius=e,this.theta=t,this.radius=e,this.theta=t}getClassName(){return"Polar"}toString(){return JSON.stringify(this)}asArray(){return[this.radius,this.theta]}addToRef(e,t){return t.radius=this.radius+e.radius,t.theta=this.theta+e.theta,t}add(e){const t=new pe(0,0);return this.addToRef(e,t),t}addInPlace(e){return this.addToRef(e,this),this}addInPlaceFromFloats(e,t){return this.radius+=e,this.theta+=t,this}subtractToRef(e,t){return t.radius=this.radius-e.radius,t.theta=this.theta-e.theta,t}subtract(e){const t=new pe(0,0);return this.subtractToRef(e,t),t}subtractInPlace(e){return this.subtractToRef(e,this),this}subtractFromFloatsToRef(e,t,s){return s.radius=this.radius-e,s.theta=this.theta-t,s}subtractFromFloats(e,t){const s=new pe(0,0);return this.subtractFromFloatsToRef(e,t,s),s}multiplyToRef(e,t){return t.radius=this.radius*e.radius,t.theta=this.theta*e.theta,t}multiply(e){const t=new pe(0,0);return this.multiplyToRef(e,t),t}multiplyInPlace(e){return this.multiplyToRef(e,this),this}divideToRef(e,t){return t.radius=this.radius/e.radius,t.theta=this.theta/e.theta,t}divide(e){const t=new pe(0,0);return this.divideToRef(e,t),t}divideInPlace(e){return this.divideToRef(e,this),this}clone(){return new pe(this.radius,this.theta)}copyFrom(e){return this.radius=e.radius,this.theta=e.theta,this}copyFromFloats(e,t){return this.radius=e,this.theta=t,this}scaleToRef(e,t){return t.radius=this.radius*e,t.theta=this.theta*e,t}scale(e){const t=new pe(0,0);return this.scaleToRef(e,t),t}scaleInPlace(e){return this.scaleToRef(e,this),this}set(e,t){return this.radius=e,this.theta=t,this}setAll(e){return this.set(e,e),this}toVector2ToRef(e){const t=this.radius*Math.cos(this.theta),s=this.radius*Math.sin(this.theta);return e.set(t,s),e}toVector2(){const e=new Ee(0,0);return this.toVector2ToRef(e)}static FromVector2ToRef(e,t){const s=Math.sign(e.y)*Math.acos(e.x/e.length());return t.radius=e.length(),t.theta=s,t}static FromVector2(e){const t=new pe(0,0);return pe.FromVector2ToRef(e,t),t}static FromArray(e){return new pe(e[0],e[1])}}class ge{constructor(e,t,s){this.radius=e,this.theta=t,this.phi=s,this.radius=e,this.theta=t,this.phi=s}getClassName(){return"Spherical"}toString(){return JSON.stringify(this)}asArray(){return[this.radius,this.theta,this.phi]}addToRef(e,t){return t.radius=this.radius+e.radius,t.theta=this.theta+e.theta,t.phi=this.phi+e.phi,t}add(e){const t=new ge(0,0,0);return this.addToRef(e,t),t}addInPlace(e){return this.addToRef(e,this),this}addInPlaceFromFloats(e,t,s){return this.radius+=e,this.theta+=t,this.phi+=s,this}subtractToRef(e,t){return t.radius=this.radius-e.radius,t.theta=this.theta-e.theta,t.phi=this.phi-e.phi,t}subtract(e){const t=new ge(0,0,0);return this.subtractToRef(e,t),t}subtractInPlace(e){return this.subtractToRef(e,this),this}subtractFromFloatsToRef(e,t,s,i){return i.radius=this.radius-e,i.theta=this.theta-t,i.phi=this.phi-s,i}subtractFromFloats(e,t,s){const i=new ge(0,0,0);return this.subtractFromFloatsToRef(e,t,s,i),i}multiplyToRef(e,t){return t.radius=this.radius*e.radius,t.theta=this.theta*e.theta,t.phi=this.phi*e.phi,t}multiply(e){const t=new ge(0,0,0);return this.multiplyToRef(e,t),t}multiplyInPlace(e){return this.multiplyToRef(e,this),this}divideToRef(e,t){return t.radius=this.radius/e.radius,t.theta=this.theta/e.theta,t.phi=this.phi/e.phi,t}divide(e){const t=new ge(0,0,0);return this.divideToRef(e,t),t}divideInPlace(e){return this.divideToRef(e,this),this}clone(){return new ge(this.radius,this.theta,this.phi)}copyFrom(e){return this.radius=e.radius,this.theta=e.theta,this.phi=e.phi,this}copyFromFloats(e,t,s){return this.radius=e,this.theta=t,this.phi=s,this}scaleToRef(e,t){return t.radius=this.radius*e,t.theta=this.theta*e,t.phi=this.phi*e,t}scale(e){const t=new ge(0,0,0);return this.scaleToRef(e,t),t}scaleInPlace(e){return this.scaleToRef(e,this),this}set(e,t,s){return this.radius=e,this.theta=t,this.phi=s,this}setAll(e){return this.set(e,e,e),this}toVector3ToRef(e){const t=this.radius*Math.sin(this.theta)*Math.cos(this.phi),s=this.radius*Math.cos(this.theta),i=this.radius*Math.sin(this.theta)*Math.sin(this.phi);return e.set(t,s,i),e}toVector3(){const e=new d(0,0,0);return this.toVector3ToRef(e)}static FromVector3ToRef(e,t){return t.radius=e.length(),t.theta=Math.acos(e.y/t.radius),t.phi=Math.atan2(e.z,e.x),t}static FromVector3(e){const t=new ge(0,0,0);return ge.FromVector3ToRef(e,t),t}static FromArray(e){return new ge(e[0],e[1],e[2])}}function Oa(u){var s;const e=(s=u.pickedMesh)==null?void 0:s.getIndices(),t=u.faceId*3;return{pointIndex:e?[e[t],e[t+1],e[t+2]]:[t,t+1,t+2],barycentric:[u.bu,u.bv,1-u.bu-u.bv]}}function vi(u,e,t){const s=u.getVerticesData(E.PositionKind);if(!s)return!1;const i=e*3,a=[s[i+0],s[i+1],s[i+2]];if(a.some(r=>isNaN(r??Number.NaN)))return!1;if(u.morphTargetManager)for(let r=0;r<3;r++){let n=a[r];for(let o=0;o<u.morphTargetManager.numTargets;o++){const h=u.morphTargetManager.getTarget(o),l=h.influence;if(l!==0){const _=h.getPositions();_&&(n+=(_[i+r]-s[i+r])*l)}}a[r]=n}if(t.fromArray(a),u.skeleton){const r=u.getVerticesData(E.MatricesIndicesKind),n=u.getVerticesData(E.MatricesWeightsKind);if(n&&r){const o=u.numBoneInfluencers>4,h=o?u.getVerticesData(E.MatricesIndicesExtraKind):null,l=o?u.getVerticesData(E.MatricesWeightsExtraKind):null,_=u.skeleton.getTransformMatrices(u),g=c.Matrix[0],p=c.Matrix[1];g.reset();const f=e*4;let m,b;for(m=0;m<4;m++)b=n[f+m],b>0&&(R.FromFloat32ArrayToRefScaled(_,Math.floor(r[f+m]*16),b,p),g.addToSelf(p));if(h&&l)for(m=0;m<4;m++)b=l[f+m],b>0&&(R.FromFloat32ArrayToRefScaled(_,Math.floor(h[f+m]*16),b,p),g.addToSelf(p));d.TransformCoordinatesFromFloatsToRef(a[0],a[1],a[2],g,t)}}return!0}function Ga(u,e,t,s){t.set(0,0,0);for(let i=0;i<3;i++){const a=e.pointIndex[i];if(!vi(u,a,c.Vector3[i]))return!1;c.Vector3[i].scaleAndAddToRef(e.barycentric[i],t)}if(d.TransformCoordinatesToRef(t,u.getWorldMatrix(),t),s){const i=c.Vector3[0],a=c.Vector3[1],r=c.Vector3[2],n=c.Vector3[3],o=c.Vector3[4];n.copyFrom(a),n.subtractInPlace(i),o.copyFrom(r),o.subtractInPlace(i),n.normalize(),o.normalize(),d.CrossToRef(n,o,s),u.material&&u.material.sideOrientation===(u.getScene().useRightHandedSystem?0:1)&&s.scaleInPlace(-1),d.TransformNormalToRef(s,u.getWorldMatrix(),s),s.normalize()}return!0}class ve{static _GetShader(e,t){if(!e._meshUVSpaceRendererShader){const s=new st("meshUVSpaceRendererShader",e,{vertex:"meshUVSpaceRenderer",fragment:"meshUVSpaceRenderer"},{attributes:["position","normal","uv"],uniforms:["world","projMatrix"],samplers:["textureSampler"],needAlphaBlending:!0,shaderLanguage:t});s.backFaceCulling=!1,s.alphaMode=2,e.onDisposeObservable.add(()=>{var i;(i=e._meshUVSpaceRendererShader)==null||i.dispose(),e._meshUVSpaceRendererShader=null}),e._meshUVSpaceRendererShader=s}return e._meshUVSpaceRendererShader}static _GetMaskShader(e,t){if(!e._meshUVSpaceRendererMaskShader){const s=new st("meshUVSpaceRendererMaskShader",e,{vertex:"meshUVSpaceRendererMasker",fragment:"meshUVSpaceRendererMasker"},{attributes:["position","uv"],uniforms:["worldViewProjection"],shaderLanguage:t});s.backFaceCulling=!1,s.alphaMode=2,e.onDisposeObservable.add(()=>{var i;(i=e._meshUVSpaceRendererMaskShader)==null||i.dispose(),e._meshUVSpaceRendererMaskShader=null}),e._meshUVSpaceRendererMaskShader=s}return e._meshUVSpaceRendererMaskShader}static _IsRenderTargetTexture(e){return e.renderList!==void 0}get shaderLanguage(){return this._shaderLanguage}constructor(e,t,s){this._textureCreatedInternally=!1,this._configureUserCreatedTexture=!0,this._maskTexture=null,this._finalPostProcess=null,this._shadersLoaded=!1,this._isDisposed=!1,this.clearColor=new Me(0,0,0,0),this.texture=null,this._shaderLanguage=0,this._mesh=e,this._scene=t,this._options={width:1024,height:1024,textureType:0,generateMipMaps:!0,optimizeUVAllocation:!0,uvEdgeBlending:!1,...s},this._initShaderSourceAsync()}async _initShaderSourceAsync(){this._scene.getEngine().isWebGPU?(this._shaderLanguage=1,await Promise.all([S(()=>import("./nativeXRFrame-DgHx7Vcb.js").then(t=>t.rH),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29])),S(()=>import("./nativeXRFrame-DgHx7Vcb.js").then(t=>t.rI),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29])),S(()=>import("./nativeXRFrame-DgHx7Vcb.js").then(t=>t.rJ),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29])),S(()=>import("./nativeXRFrame-DgHx7Vcb.js").then(t=>t.rK),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29])),S(()=>import("./nativeXRFrame-DgHx7Vcb.js").then(t=>t.rM),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29])),S(()=>import("./nativeXRFrame-DgHx7Vcb.js").then(t=>t.rL),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29]))])):await Promise.all([S(()=>import("./nativeXRFrame-DgHx7Vcb.js").then(t=>t.rB),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29])),S(()=>import("./nativeXRFrame-DgHx7Vcb.js").then(t=>t.rC),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29])),S(()=>import("./nativeXRFrame-DgHx7Vcb.js").then(t=>t.rD),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29])),S(()=>import("./nativeXRFrame-DgHx7Vcb.js").then(t=>t.rE),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29])),S(()=>import("./nativeXRFrame-DgHx7Vcb.js").then(t=>t.rG),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29])),S(()=>import("./nativeXRFrame-DgHx7Vcb.js").then(t=>t.rF),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29]))]),!this._isDisposed&&(this._shadersLoaded=!0)}isReady(){var i,a;if(!this._shadersLoaded)return!1;this.texture?this._configureUserCreatedTexture&&this._configureUserCreatedRTT():this._createDiffuseRTT();const e=ve._IsRenderTargetTexture(this.texture)?this.texture.isReadyForRendering():this.texture.isReady(),t=((i=this._maskTexture)==null?void 0:i.isReadyForRendering())??!0,s=((a=this._finalPostProcess)==null?void 0:a.isReady())??!0;return e&&t&&s}renderTexture(e,t,s,i,a=0,r=!0){if(r&&!this.isReady()){setTimeout(()=>{this.renderTexture(e,t,s,i,a,r)},16);return}if(this.texture?this._configureUserCreatedTexture&&this._configureUserCreatedRTT():this._createDiffuseRTT(),ve._IsRenderTargetTexture(this.texture)){const n=this._createProjectionMatrix(t,s,i,a),o=ve._GetShader(this._scene,this._shaderLanguage);o.setTexture("textureSampler",e),o.setMatrix("projMatrix",n),this.texture.render(),o.removeTexture("textureSampler")}}clear(){var e,t,s;if(this.texture&&ve._IsRenderTargetTexture(this.texture)&&this.texture.renderTarget){const i=this._scene.getEngine();i.bindFramebuffer(this.texture.renderTarget),i.clear(this.clearColor,!0,!0,!0),i.unBindFramebuffer(this.texture.renderTarget)}if((e=this._finalPostProcess)!=null&&e.inputTexture){const i=this._scene.getEngine();i.bindFramebuffer((t=this._finalPostProcess)==null?void 0:t.inputTexture),i.clear(this.clearColor,!0,!0,!0),i.unBindFramebuffer((s=this._finalPostProcess)==null?void 0:s.inputTexture)}}dispose(){var e,t,s;this._textureCreatedInternally&&((e=this.texture)==null||e.dispose(),this._textureCreatedInternally=!1),this._configureUserCreatedTexture=!0,(t=this._maskTexture)==null||t.dispose(),this._maskTexture=null,(s=this._finalPostProcess)==null||s.dispose(),this._finalPostProcess=null,this._isDisposed=!0}_configureUserCreatedRTT(){this._configureUserCreatedTexture=!1,this.texture&&ve._IsRenderTargetTexture(this.texture)&&(this.texture.setMaterialForRendering(this._mesh,ve._GetShader(this._scene,this._shaderLanguage)),this.texture.onClearObservable.add(()=>{}),this.texture.renderList=[this._mesh],this._options.uvEdgeBlending&&(this._createMaskTexture(),this._createPostProcess(),this.texture.addPostProcess(this._finalPostProcess)))}_createDiffuseRTT(){this._textureCreatedInternally=!0;const e=this._createRenderTargetTexture(this._options.width,this._options.height);e.setMaterialForRendering(this._mesh,ve._GetShader(this._scene,this._shaderLanguage)),this.texture=e,this._configureUserCreatedTexture=!1,this._options.uvEdgeBlending&&(this._createMaskTexture(),this._createPostProcess(),e.addPostProcess(this._finalPostProcess))}_createMaskTexture(){this._maskTexture||(this._maskTexture=new me(this._mesh.name+"_maskTexture",{width:this._options.width,height:this._options.height},this._scene,!1,!0,0,!1,2,void 0,void 0,void 0,6),this._maskTexture.clearColor=new Me(0,0,0,0),this._maskTexture.renderList.push(this._mesh),this._maskTexture.setMaterialForRendering(this._mesh,ve._GetMaskShader(this._scene,this._shaderLanguage)),this._maskTexture.refreshRate=me.REFRESHRATE_RENDER_ONCE,this._scene.customRenderTargets.push(this._maskTexture))}_createPostProcess(){this._finalPostProcess||(this._finalPostProcess=new be(this._mesh.name+"_fixSeamsPostProcess","meshUVSpaceRendererFinaliser",["textureSize"],["textureSampler","maskTextureSampler"],1,null,1,this._scene.getEngine(),!1,null,this._options.textureType,void 0,void 0,void 0,void 0,this._shaderLanguage),this._finalPostProcess.onApplyObservable.add(e=>{e.setTexture("maskTextureSampler",this._maskTexture),e.setFloat2("textureSize",this._options.width,this._options.height)}))}_createRenderTargetTexture(e,t){const s=new me(this._mesh.name+"_uvspaceTexture",{width:e,height:t},this._scene,this._options.generateMipMaps,!0,this._options.textureType,!1,this._options.generateMipMaps?3:2,!1,!1,!1,5);return s.renderParticles=!1,s.optimizeUVAllocation=!!this._options.optimizeUVAllocation,s.onClearObservable.addOnce(()=>{this._scene.getEngine().clear(this.clearColor,!0,!0,!0),s.onClearObservable.add(()=>{})}),s.renderList=[this._mesh],s}_createProjectionMatrix(e,t,s,i=0){const a=-Math.atan2(t.z,t.x)-Math.PI/2,r=Math.sqrt(t.x*t.x+t.z*t.z),n=Math.atan2(t.y,r),o=e.add(t.scale(s.z*.5)),h=R.RotationYawPitchRoll(a,n,i).multiply(R.Translation(o.x,o.y,o.z)),l=R.Invert(h),_=R.FromArray([2/s.x,0,0,0,0,2/s.y,0,0,0,0,1/s.z,0,0,0,0,1]),g=R.FromArray([.5,0,0,0,0,.5,0,0,0,0,1,0,.5,.5,0,1]);return l.multiply(_).multiply(g)}}function Gt(u){const e=u.minimum.x,t=u.minimum.y,s=u.minimum.z,i=u.maximum.x,a=u.maximum.y,r=u.maximum.z;return[new d(e,t,s),new d(i,a,r),new d(i,t,s),new d(e,a,s),new d(e,t,r),new d(i,a,s),new d(e,a,r),new d(i,t,r)]}function ka(u,e=null,t=1/6){const s=c.Vector3[0],i=new Map,a=new Map,r=u.reduce((p,f)=>Math.max(p,f.getTotalVertices()),0),n=Array.from({length:r},()=>new d),o=Array.from({length:r},()=>new d);for(const p of u){const f=p.getVerticesData(E.PositionKind);if(!f)continue;const m=p.getTotalVertices();n.length=Math.max(n.length,m),o.length=Math.max(n.length,m);for(let B=0,A=0;B<m;B++,A+=3)s.set(f[A],f[A+1],f[A+2]),n[B].copyFrom(s),o[B].copyFrom(s);const b=p.morphTargetManager;if(b)for(let B=0;B<b.numTargets;++B){const U=b.getTarget(B).getPositions();if(U)for(let w=0,X=0;w<m;w++,X+=3)s.set(U[X],U[X+1],U[X+2]),n[w].minimizeInPlace(s),o[w].maximizeInPlace(s)}const y=p.skeleton,T=y?p.getVerticesData(E.MatricesWeightsKind):null,v=y?p.getVerticesData(E.MatricesIndicesKind):null;if(T&&v){const B=p.numBoneInfluencers>4,A=B?p.getVerticesData(E.MatricesWeightsExtraKind):null,U=B?p.getVerticesData(E.MatricesIndicesExtraKind):null,w=a.get(p.uniqueId)||new Map;a.set(p.uniqueId,w);const X=(Q,F,q,G)=>{for(let Y=F;Y<F+4;Y++)if(q[Y]>0){const L=G[Y],te=w.get(L);te?(te.minimum.minimizeInPlace(n[Q]),te.maximum.maximizeInPlace(o[Q])):w.set(L,{minimum:n[Q].clone(),maximum:o[Q].clone()})}};for(let Q=0,F=0;Q<m;Q++,F+=4)X(Q,F,T,v),A&&U&&X(Q,F,A,U)}else{const B=i.get(p.uniqueId)||{minimum:new d().setAll(Number.POSITIVE_INFINITY),maximum:new d().setAll(Number.NEGATIVE_INFINITY)};i.set(p.uniqueId,B);for(let A=0;A<m;A++)B.minimum.minimizeInPlace(n[A]),B.maximum.maximizeInPlace(o[A])}}const h=new Map,l=new Map;for(const p of u){const f=i.get(p.uniqueId);if(f)h.set(p.uniqueId,Gt(f));else{const m=a.get(p.uniqueId);if(m){const b=p.skeleton.bones,y=new Map;l.set(p.uniqueId,y),m.forEach((T,v)=>{const B=Gt(T),A=b[v].getAbsoluteInverseBindMatrix();for(const U of B)d.TransformCoordinatesToRef(U,A,U);y.set(v,B)})}}}const _=Array.from({length:u.length},()=>({minimum:new d().setAll(Number.POSITIVE_INFINITY),maximum:new d().setAll(Number.NEGATIVE_INFINITY)})),g=()=>{for(let p=0;p<u.length;p++){const f=u[p];if(!f.getVerticesData(E.PositionKind))continue;const b=f.computeWorldMatrix(!0),y=f.skeleton;if(y){y.prepare(!0);const T=y.bones;l.get(f.uniqueId).forEach((B,A)=>{for(const U of B){const w=T[A].getFinalMatrix().multiplyToRef(b,c.Matrix[0]);d.TransformCoordinatesToRef(U,w,s),_[p].minimum.minimizeInPlace(s),_[p].maximum.maximizeInPlace(s)}})}else for(const T of h.get(f.uniqueId))d.TransformCoordinatesToRef(T,b,s),_[p].minimum.minimizeInPlace(s),_[p].maximum.maximizeInPlace(s)}};if(e&&e.isStarted){const p=e.getCurrentFrame(),f=t/e.getLength(0,1);for(let m=e.from;m<=e.to;m+=f)e.goToFrame(m),g();e.goToFrame(p)}else g();return _}class Va extends Ss{constructor(e,t){super(t,"Lattice",200),this._lattice=e,this.refreshData(),this._enable(!0)}getClassName(){return"LatticePluginMaterial"}isCompatible(e){switch(e){case 0:case 1:return!0;default:return!1}}refreshData(){const e=this._lattice.resolutionX*this._lattice.resolutionY*this._lattice.resolutionZ*4;(!this._latticeData||this._latticeData.length!==e)&&(this._latticeData=new Float32Array(e));for(let t=0;t<this._lattice.resolutionX;t++)for(let s=0;s<this._lattice.resolutionY;s++)for(let i=0;i<this._lattice.resolutionZ;i++){const a=this._lattice.data[t][s][i],r=t+this._lattice.resolutionX*(s+this._lattice.resolutionY*i);a.toArray(this._latticeData,r*4)}!this._latticeDataTexture||this._latticeDataTexture.width!==this._lattice.resolutionX||this._latticeDataTexture.height!==this._lattice.resolutionY||this._latticeDataTexture.depth!==this._lattice.resolutionZ?(this._latticeDataTexture&&this._latticeDataTexture.dispose(),this._latticeDataTexture=new $t(this._latticeData,this._lattice.resolutionX,this._lattice.resolutionY,this._lattice.resolutionZ,5,this._material.getScene(),!1,!1,1,1)):this._latticeDataTexture.update(this._latticeData)}getUniforms(e=0){return e===1?{ubo:[{name:"lattice_cellSize",size:3,type:"vec3"},{name:"lattice_min",size:3,type:"vec3"},{name:"lattice_max",size:3,type:"vec3"},{name:"lattice_resolution",size:3,type:"vec3"},{name:"lattice_position",size:3,type:"vec3"}]}:{ubo:[{name:"lattice_cellSize",size:3,type:"vec3"},{name:"lattice_min",size:3,type:"vec3"},{name:"lattice_max",size:3,type:"vec3"},{name:"lattice_resolution",size:3,type:"vec3"},{name:"lattice_position",size:3,type:"vec3"}],vertex:`
                    uniform vec3 lattice_cellSize;
                    uniform vec3 lattice_min;
                    uniform vec3 lattice_max;
                    uniform vec3 lattice_resolution;
                    uniform vec3 lattice_position;
                    `}}bindForSubMesh(e){this._lattice.updateInternals(),e.updateVector3("lattice_cellSize",this._lattice.cellSize),e.updateVector3("lattice_min",this._lattice.min),e.updateVector3("lattice_max",this._lattice.max),e.updateFloat3("lattice_resolution",this._lattice.resolutionX,this._lattice.resolutionY,this._lattice.resolutionZ),e.updateVector3("lattice_position",this._lattice.position),e.setTexture("latticeData",this._latticeDataTexture)}getSamplers(e){e.push("latticeData")}_prepareCode(e=0){if(this._code)return this._code;let t=`
            if (positionUpdated.x >= lattice_min.x && positionUpdated.x <= lattice_max.x &&
                positionUpdated.y >= lattice_min.y && positionUpdated.y <= lattice_max.y &&
                positionUpdated.z >= lattice_min.z && positionUpdated.z <= lattice_max.z) {

                // Map vertex position to lattice local coordinates
                vec3d localPos = vec3c((positionUpdated.x - lattice_min.x) / lattice_cellSize.x, (positionUpdated.y - lattice_min.y) / lattice_cellSize.y, (positionUpdated.z - lattice_min.z) / lattice_cellSize.z);

                // Get integer lattice indices
                intd i0 = intc(floor(localPos.x));
                intd j0 = intc(floor(localPos.y));
                intd k0 = intc(floor(localPos.z));

                intd resX = intc(lattice_resolution.x) - 1;
                intd resY = intc(lattice_resolution.y) - 1;
                intd resZ = intc(lattice_resolution.z) - 1;

                intd i1 = min(i0 + 1, resX);
                intd j1 = min(j0 + 1, resY);
                intd k1 = min(k0 + 1, resZ);

                // Compute interpolation weights
                floatd tx = localPos.x - floatc(i0);
                floatd ty = localPos.y - floatc(j0);
                floatd tz = localPos.z - floatc(k0);

                // Ensure indices are within bounds
                intd ii0 = clamp(i0, 0, resX);
                intd jj0 = clamp(j0, 0, resY);
                intd kk0 = clamp(k0, 0, resZ);
                intd ii1 = clamp(i1, 0, resX);
                intd jj1 = clamp(j1, 0, resY);
                intd kk1 = clamp(k1, 0, resZ);

                // Get lattice control points
                vec3d p000 = texelFetch(latticeData, ivec3c(ii0, jj0, kk0), 0).rgb;
                vec3d p100 = texelFetch(latticeData, ivec3c(ii1, jj0, kk0), 0).rgb;
                vec3d p010 = texelFetch(latticeData, ivec3c(ii0, jj1, kk0), 0).rgb;
                vec3d p110 = texelFetch(latticeData, ivec3c(ii1, jj1, kk0), 0).rgb;
                vec3d p001 = texelFetch(latticeData, ivec3c(ii0, jj0, kk1), 0).rgb;
                vec3d p101 = texelFetch(latticeData, ivec3c(ii1, jj0, kk1), 0).rgb;
                vec3d p011 = texelFetch(latticeData, ivec3c(ii0, jj1, kk1), 0).rgb;
                vec3d p111 = texelFetch(latticeData, ivec3c(ii1, jj1, kk1), 0).rgb;

                // Trilinear interpolation
                vec3d p00 = mix(p000, p100, tx);
                vec3d p01 = mix(p001, p101, tx);
                vec3d p10 = mix(p010, p110, tx);
                vec3d p11 = mix(p011, p111, tx);

                vec3d p0 = mix(p00, p10, ty);
                vec3d p1 = mix(p01, p11, ty);

                vec3d deformedPos = mix(p0, p1, tz);
                positionUpdated = deformedPos + lattice_position;
            };
        `;return e===1?(t=`
                let lattice_min = uniforms.lattice_min;
                let lattice_max = uniforms.lattice_max;
                let lattice_resolution = uniforms.lattice_resolution;
                let lattice_position = uniforms.lattice_position;
                let lattice_cellSize = uniforms.lattice_cellSize;
            `+t,t=t.replace(/ivec3c/g,"vec3i"),t=t.replace(/vec3d/g,"var"),t=t.replace(/vec3c/g,"vec3f"),t=t.replace(/intd/g,"var"),t=t.replace(/intc/g,"i32"),t=t.replace(/floatd/g,"var"),t=t.replace(/floatc/g,"f32"),t=t.replace(/texelFetch/g,"textureLoad")):(t=t.replace(/ivec3c/g,"ivec3"),t=t.replace(/vec3d/g,"vec3"),t=t.replace(/vec3c/g,"vec3"),t=t.replace(/intd/g,"int"),t=t.replace(/intc/g,"int"),t=t.replace(/floatd/g,"float"),t=t.replace(/floatc/g,"float")),this._code=t,this._code}getCustomCode(e,t=0){return e==="vertex"?t===1?{CUSTOM_VERTEX_DEFINITIONS:`
                        var latticeData: texture_3d<f32>;
                    `,CUSTOM_VERTEX_UPDATE_POSITION:this._prepareCode(t)}:{CUSTOM_VERTEX_DEFINITIONS:`
                    precision highp sampler3D;
                    uniform sampler3D latticeData;
                `,CUSTOM_VERTEX_UPDATE_POSITION:this._prepareCode(t)}:null}dispose(){this._latticeDataTexture&&(this._latticeDataTexture.dispose(),this._latticeDataTexture=null)}}class za{constructor(e,t){this._meshesOrigins=[],this._toCenterVectors=[],this._scaledDirection=new d(1,1,1),this._newPosition=d.Zero(),this._centerPosition=d.Zero(),this._meshes=e.slice(),t?this._centerMesh=t:this._setCenterMesh(),this._centerMesh.computeWorldMatrix(!0);const s=this._meshes.indexOf(this._centerMesh);s>=0&&this._meshes.splice(s,1),this._centerPosition=this._centerMesh.getAbsolutePosition().clone();for(let i=0;i<this._meshes.length;i++)if(this._meshes[i]){const a=this._meshes[i];this._meshesOrigins[i]=a.getAbsolutePosition().clone(),this._toCenterVectors[i]=d.Zero(),a.hasBoundingInfo&&this._centerMesh.hasBoundingInfo&&(a.computeWorldMatrix(!0),a.getBoundingInfo().boundingBox.centerWorld.subtractToRef(this._centerMesh.getBoundingInfo().boundingBox.centerWorld,this._toCenterVectors[i]))}}_setCenterMesh(){let e=d.Zero();const t=d.Zero();let s=Number.MAX_VALUE;for(let i=0;i<this._meshes.length;i++)if(this._meshes[i]){const r=this._meshes[i].getBoundingInfo();r&&t.addInPlace(r.boundingBox.centerWorld)}e=t.scale(1/this._meshes.length);for(let i=0;i<this._meshes.length;i++)if(this._meshes[i]){const a=this._meshes[i],r=a.getBoundingInfo();if(r){const n=r.boundingBox.centerWorld.subtract(e).lengthSquared();n<s&&(this._centerMesh=a,s=n)}}}getClassName(){return"MeshExploder"}getMeshes(){const e=this._meshes.slice();return e.unshift(this._centerMesh),e}explode(e=1){for(let t=0;t<this._meshes.length;t++)this._meshes[t]&&this._meshesOrigins[t]&&this._toCenterVectors[t]&&(this._toCenterVectors[t].scaleToRef(e,this._scaledDirection),this._meshesOrigins[t].addToRef(this._scaledDirection,this._newPosition),this._meshes[t].setAbsolutePosition(this._newPosition));this._centerMesh.setAbsolutePosition(this._centerPosition)}}class es{static get FilesToLoad(){return Ms.FilesToLoad}constructor(e,t,s,i,a,r,n,o,h,l=!1,_=!1){this.useAppend=l,this.dontInjectRenderLoop=_,this.onProcessFileCallback=()=>!0,this.displayLoadingUI=!0,this.loadAsync=(g,p)=>this.useAppend?rt.AppendAsync("file:",g,this._currentScene,p):rt.LoadAsync("file:",g,this._engine,p),this._engine=e,this._currentScene=t,this._sceneLoadedCallback=s,this._progressCallback=i,this._additionalRenderLoopLogicCallback=a,this._textureLoadingCallback=r,this._startingProcessingFilesCallback=n,this._onReloadCallback=o,this._errorCallback=h}monitorElementForDragNDrop(e){e&&(this._elementToMonitor=e,this._dragEnterHandler=t=>{this._drag(t)},this._dragOverHandler=t=>{this._drag(t)},this._dropHandler=t=>{this._drop(t)},this._elementToMonitor.addEventListener("dragenter",this._dragEnterHandler,!1),this._elementToMonitor.addEventListener("dragover",this._dragOverHandler,!1),this._elementToMonitor.addEventListener("drop",this._dropHandler,!1))}get filesToLoad(){return this._filesToLoad}dispose(){this._elementToMonitor&&(this._elementToMonitor.removeEventListener("dragenter",this._dragEnterHandler),this._elementToMonitor.removeEventListener("dragover",this._dragOverHandler),this._elementToMonitor.removeEventListener("drop",this._dropHandler))}_renderFunction(){if(this._additionalRenderLoopLogicCallback&&this._additionalRenderLoopLogicCallback(),this._currentScene){if(this._textureLoadingCallback){const e=this._currentScene.getWaitingItemsCount();e>0&&this._textureLoadingCallback(e)}this._currentScene.render()}}_drag(e){e.stopPropagation(),e.preventDefault()}_drop(e){e.stopPropagation(),e.preventDefault(),this.loadFiles(e)}_traverseFolder(e,t,s,i){const a=e.createReader(),r=e.fullPath.replace(/^\//,"").replace(/(.+?)\/?$/,"$1/");a.readEntries(n=>{s.count+=n.length;for(const o of n)o.isFile?o.file(h=>{h.correctName=r+h.name,t.push(h),--s.count===0&&i()}):o.isDirectory&&this._traverseFolder(o,t,s,i);--s.count===0&&i()})}_processFiles(e){for(let t=0;t<e.length;t++){const s=e[t].correctName.toLowerCase(),i=s.split(".").pop();this.onProcessFileCallback(e[t],s,i,a=>this._sceneFileToLoad=a)&&(rt.IsPluginForExtensionAvailable("."+i)&&(this._sceneFileToLoad=e[t]),es.FilesToLoad[s]=e[t])}}loadFiles(e){if(e&&e.dataTransfer&&e.dataTransfer.files&&(this._filesToLoad=e.dataTransfer.files),e&&e.target&&e.target.files&&(this._filesToLoad=e.target.files),!(!this._filesToLoad||this._filesToLoad.length===0)&&(this._startingProcessingFilesCallback&&this._startingProcessingFilesCallback(this._filesToLoad),this._filesToLoad&&this._filesToLoad.length>0)){const t=[],s=[],i=e.dataTransfer?e.dataTransfer.items:null;for(let a=0;a<this._filesToLoad.length;a++){const r=this._filesToLoad[a],n=r.name.toLowerCase();let o;if(r.correctName=n,i){const h=i[a];h.getAsEntry?o=h.getAsEntry():h.webkitGetAsEntry&&(o=h.webkitGetAsEntry())}o&&o.isDirectory?s.push(o):t.push(r)}if(s.length===0)this._processFiles(t),this._processReload();else{const a={count:s.length};for(const r of s)this._traverseFolder(r,t,a,()=>{this._processFiles(t),a.count===0&&this._processReload()})}}}_processReload(){this._onReloadCallback?this._onReloadCallback(this._sceneFileToLoad):this.reload()}reload(){if(this._sceneFileToLoad)this.useAppend||this._currentScene&&(D.errorsCount>0&&D.ClearLogCache(),this._engine.stopRenderLoop()),rt.ShowLoadingScreen=!1,this.displayLoadingUI&&this._engine.displayLoadingUI(),this.loadAsync(this._sceneFileToLoad,this._progressCallback).then(e=>{this.useAppend?this.displayLoadingUI&&this._engine.hideLoadingUI():(this._currentScene&&this._currentScene.dispose(),this._currentScene=e,this._currentScene.executeWhenReady(()=>{this.displayLoadingUI&&this._engine.hideLoadingUI(),this.dontInjectRenderLoop||this._engine.runRenderLoop(()=>{this._renderFunction()})})),this._sceneLoadedCallback&&this._currentScene&&this._sceneLoadedCallback(this._sceneFileToLoad,this._currentScene)}).catch(e=>{this.displayLoadingUI&&this._engine.hideLoadingUI(),this._errorCallback&&this._errorCallback(this._sceneFileToLoad,this._currentScene,e.message)});else{if(this._filesToLoad.length===1){const t=this._filesToLoad[0].name.toLowerCase().split(".").pop();if(t)switch(t.toLowerCase()){case"dds":case"env":case"hdr":return}}D.Error("Please provide a valid .babylon file.")}}}class La{constructor(){this._trackedScene=null}track(e){this._trackedScene=e,et.AllowLoadingUniqueId=!0,this._savedJSON=Ot.Serialize(e),et.AllowLoadingUniqueId=!1}getDelta(){if(!this._trackedScene)return null;const e=K.ForceSerializeBuffers;K.ForceSerializeBuffers=!1,et.AllowLoadingUniqueId=!0;const t=Ot.Serialize(this._trackedScene);et.AllowLoadingUniqueId=!1;const s={};for(const i in t)this._compareCollections(i,this._savedJSON[i],t[i],s);return K.ForceSerializeBuffers=e,s}_compareArray(e,t,s,i){if(t.length===0&&s.length===0)return!0;if(t.length&&!isNaN(t[0])||s.length&&!isNaN(s[0])){if(t.length!==s.length)return!1;if(t.length===0)return!0;for(let r=0;r<t.length;r++)if(t[r]!==s[r])return i[e]=s,!1;return!0}const a=[];for(let r=0;r<t.length;r++){const n=t[r],o=n.uniqueId;a.push(o);const h=s.filter(l=>l.uniqueId===o);if(h.length){const l=h[0],_={};this._compareObjects(n,l,_)||(i[e]||(i[e]=[]),_.__state={id:l.id||l.name},i[e].push(_))}else{const l={__state:{deleteId:n.id||n.name}};i[e]||(i[e]=[]),i[e].push(l)}}for(let r=0;r<s.length;r++){const n=s[r],o=n.uniqueId;a.indexOf(o)===-1&&(i[e]||(i[e]=[]),i[e].push(n))}return!0}_compareObjects(e,t,s){let i=!1;for(const a in e){if(!Object.prototype.hasOwnProperty.call(e,a))continue;const r=e[a],n=t[a];let o=!1;if(Array.isArray(r))o=JSON.stringify(r)!==JSON.stringify(n);else if(!isNaN(r)||Object.prototype.toString.call(r)=="[object String]")o=r!==n;else if(typeof r=="object"&&typeof n=="object"){const h={};this._compareObjects(r,n,h)||(s[a]=h,i=!0)}o&&(i=!0,s[a]=n)}return!i}_compareCollections(e,t,s,i){if(t!==s&&t&&s){if(Array.isArray(t)&&Array.isArray(s)){if(this._compareArray(e,t,s,i))return}else if(typeof t=="object"&&typeof s=="object"){const a={};this._compareObjects(t,s,a)||(i[e]=a);return}}}static GetShadowGeneratorById(e,t){const s=e.lights.map(i=>i.getShadowGenerators());for(const i of s)if(i){const a=i.values();for(let r=a.next();r.done!==!0;r=a.next()){const n=r.value;if(n&&n.id===t)return n}}return null}static ApplyDelta(e,t){typeof e=="string"&&(e=JSON.parse(e));const s=t;for(const i in e){const a=e[i],r=s[i];if(Array.isArray(r)||i==="shadowGenerators")switch(i){case"cameras":this._ApplyDeltaForEntity(a,t,t.getCameraById.bind(t),n=>lt.Parse(n,t));break;case"lights":this._ApplyDeltaForEntity(a,t,t.getLightById.bind(t),n=>As.Parse(n,t));break;case"shadowGenerators":this._ApplyDeltaForEntity(a,t,n=>this.GetShadowGeneratorById(t,n),n=>Js.Parse(n,t));break;case"meshes":this._ApplyDeltaForEntity(a,t,t.getMeshById.bind(t),n=>fe.Parse(n,t,""));break;case"skeletons":this._ApplyDeltaForEntity(a,t,t.getSkeletonById.bind(t),n=>Ht.Parse(n,t));break;case"materials":this._ApplyDeltaForEntity(a,t,t.getMaterialById.bind(t),n=>Bs.Parse(n,t,""));break;case"multiMaterials":this._ApplyDeltaForEntity(a,t,t.getMaterialById.bind(t),n=>ft.Parse(n,t,""));break;case"transformNodes":this._ApplyDeltaForEntity(a,t,t.getTransformNodeById.bind(t),n=>ie.Parse(n,t,""));break;case"particleSystems":this._ApplyDeltaForEntity(a,t,t.getParticleSystemById.bind(t),n=>$s.Parse(n,t,""));break;case"morphTargetManagers":this._ApplyDeltaForEntity(a,t,t.getMorphTargetById.bind(t),n=>vs.Parse(n,t));break;case"postProcesses":this._ApplyDeltaForEntity(a,t,t.getPostProcessByName.bind(t),n=>be.Parse(n,t,""));break}else isNaN(r)?r.fromArray&&r.fromArray(a):s[i]=a}}static _ApplyPropertiesToEntity(e,t){for(const s in e){const i=e[s],a=t[s];a!==void 0&&(!isNaN(a)||Array.isArray(a)?t[s]=i:a.fromArray?a.fromArray(i):typeof a=="object"&&a!==null&&this._ApplyPropertiesToEntity(i,a))}}static _ApplyDeltaForEntity(e,t,s,i){for(const a of e)if(a.__state&&a.__state.id!==void 0){const r=s(a.__state.id);r&&(this._ApplyPropertiesToEntity(a,r),et.ParseProperties(a,r,t,null))}else if(a.__state&&a.__state.deleteId!==void 0){const r=s(a.__state.deleteId);r==null||r.dispose()}else i(a)}}class yt{constructor(e){this._observer=null,this._currentState=[],this.onPressureChanged=new W,yt.IsAvailable&&(this._observer=new PressureObserver(t=>{this._currentState=t,this.onPressureChanged.notifyObservers(t)},e))}static get IsAvailable(){return typeof PressureObserver<"u"&&PressureObserver.knownSources&&PressureObserver.knownSources.includes("cpu")}observe(e){var t;try{(t=this._observer)==null||t.observe(e),this.onPressureChanged.notifyObservers(this._currentState)}catch{}}unobserve(e){var t;try{(t=this._observer)==null||t.unobserve(e)}catch{}}dispose(){var e;(e=this._observer)==null||e.disconnect(),this._observer=null,this.onPressureChanged.clear()}}const oe=()=>{};class Na{static FpsStrategy(){return e=>{const t=e.getEngine();return{id:"FPS",getData:()=>t.getFps(),dispose:oe}}}static ThermalStrategy(){return this._PressureStrategy("Thermal utilization","thermal")}static PowerSupplyStrategy(){return this._PressureStrategy("Power supply utilization","power-supply")}static PressureStrategy(){return this._PressureStrategy("Pressure")}static _PressureStrategy(e,t=null){return()=>{let s=0;const i=new yt;return i.observe("cpu"),i.onPressureChanged.add(a=>{var r;for(const n of a)if(t&&n.factors.includes(t)||!t&&(((r=n.factors)==null?void 0:r.length)??0)===0)switch(n.state){case"nominal":s=0;break;case"fair":s=.25;break;case"serious":s=.5;break;case"critical":s=1;break}}),{id:e,getData:()=>s,dispose:()=>i.dispose()}}}static TotalMeshesStrategy(){return e=>({id:"Total meshes",getData:()=>e.meshes.length,dispose:oe})}static ActiveMeshesStrategy(){return e=>({id:"Active meshes",getData:()=>e.getActiveMeshes().length,dispose:oe})}static ActiveIndicesStrategy(){return e=>({id:"Active indices",getData:()=>e.getActiveIndices(),dispose:oe})}static ActiveFacesStrategy(){return e=>({id:"Active faces",getData:()=>e.getActiveIndices()/3,dispose:oe})}static ActiveBonesStrategy(){return e=>({id:"Active bones",getData:()=>e.getActiveBones(),dispose:oe})}static ActiveParticlesStrategy(){return e=>({id:"Active particles",getData:()=>e.getActiveParticles(),dispose:oe})}static DrawCallsStrategy(){return e=>{let t=0;const s=e.onBeforeAnimationsObservable.add(()=>{e.getEngine()._drawCalls.fetchNewFrame()}),i=e.onAfterRenderObservable.add(()=>{t=e.getEngine()._drawCalls.current});return{id:"Draw calls",getData:()=>t,dispose:()=>{e.onBeforeAnimationsObservable.remove(s),e.onAfterRenderObservable.remove(i)}}}}static TotalLightsStrategy(){return e=>({id:"Total lights",getData:()=>e.lights.length,dispose:oe})}static TotalVerticesStrategy(){return e=>({id:"Total vertices",getData:()=>e.getTotalVertices(),dispose:oe})}static TotalMaterialsStrategy(){return e=>({id:"Total materials",getData:()=>e.materials.length,dispose:oe})}static TotalTexturesStrategy(){return e=>({id:"Total textures",getData:()=>e.textures.length,dispose:oe})}static AbsoluteFpsStrategy(){return e=>{const t=new Ti(e);return t.captureFrameTime=!0,{id:"Absolute FPS",getData:()=>1e3/t.frameTimeCounter.lastSecAverage,dispose:oe}}}static MeshesSelectionStrategy(){return e=>{let t=j.Now,s=0;const i=e.onBeforeActiveMeshesEvaluationObservable.add(()=>{t=j.Now}),a=e.onAfterActiveMeshesEvaluationObservable.add(()=>{s=j.Now-t});return{id:"Meshes Selection",getData:()=>s,dispose:()=>{e.onBeforeActiveMeshesEvaluationObservable.remove(i),e.onAfterActiveMeshesEvaluationObservable.remove(a)}}}}static RenderTargetsStrategy(){return e=>{let t=j.Now,s=0;const i=e.onBeforeRenderTargetsRenderObservable.add(()=>{t=j.Now}),a=e.onAfterRenderTargetsRenderObservable.add(()=>{s=j.Now-t});return{id:"Render Targets",getData:()=>s,dispose:()=>{e.onBeforeRenderTargetsRenderObservable.remove(i),e.onAfterRenderTargetsRenderObservable.remove(a)}}}}static ParticlesStrategy(){return e=>{let t=j.Now,s=0;const i=e.onBeforeParticlesRenderingObservable.add(()=>{t=j.Now}),a=e.onAfterParticlesRenderingObservable.add(()=>{s=j.Now-t});return{id:"Particles",getData:()=>s,dispose:()=>{e.onBeforeParticlesRenderingObservable.remove(i),e.onAfterParticlesRenderingObservable.remove(a)}}}}static SpritesStrategy(){return e=>{var r,n;let t=j.Now,s=0;const i=(r=e.onBeforeSpritesRenderingObservable)==null?void 0:r.add(()=>{t=j.Now}),a=(n=e.onAfterSpritesRenderingObservable)==null?void 0:n.add(()=>{s=j.Now-t});return{id:"Sprites",getData:()=>s,dispose:()=>{var o,h;(o=e.onBeforeSpritesRenderingObservable)==null||o.remove(i),(h=e.onAfterSpritesRenderingObservable)==null||h.remove(a)}}}}static AnimationsStrategy(){return e=>{let t=j.Now,s=0;const i=e.onBeforeAnimationsObservable.add(()=>{t=j.Now}),a=e.onAfterAnimationsObservable.add(()=>{s=j.Now-t});return{id:"Animations",getData:()=>s,dispose:()=>{e.onBeforeAnimationsObservable.remove(i),e.onAfterAnimationsObservable.remove(a)}}}}static PhysicsStrategy(){return e=>{var r,n;let t=j.Now,s=0;const i=(r=e.onBeforePhysicsObservable)==null?void 0:r.add(()=>{t=j.Now}),a=(n=e.onAfterPhysicsObservable)==null?void 0:n.add(()=>{s=j.Now-t});return{id:"Physics",getData:()=>s,dispose:()=>{var o,h;(o=e.onBeforePhysicsObservable)==null||o.remove(i),(h=e.onAfterPhysicsObservable)==null||h.remove(a)}}}}static RenderStrategy(){return e=>{let t=j.Now,s=0;const i=e.onBeforeDrawPhaseObservable.add(()=>{t=j.Now}),a=e.onAfterDrawPhaseObservable.add(()=>{s=j.Now-t});return{id:"Render",getData:()=>s,dispose:()=>{e.onBeforeDrawPhaseObservable.remove(i),e.onAfterDrawPhaseObservable.remove(a)}}}}static FrameTotalStrategy(){return e=>{let t=j.Now,s=0;const i=e.onBeforeAnimationsObservable.add(()=>{t=j.Now}),a=e.onAfterRenderObservable.add(()=>{s=j.Now-t});return{id:"Frame Total",getData:()=>s,dispose:()=>{e.onBeforeAnimationsObservable.remove(i),e.onAfterRenderObservable.remove(a)}}}}static InterFrameStrategy(){return e=>{let t=j.Now,s=0;const i=e.onBeforeAnimationsObservable.add(()=>{s=j.Now-t}),a=e.onAfterRenderObservable.add(()=>{t=j.Now});return{id:"Inter-frame",getData:()=>s,dispose:()=>{e.onBeforeAnimationsObservable.remove(i),e.onAfterRenderObservable.remove(a)}}}}static GpuFrameTimeStrategy(){return e=>{const t=new yi(e.getEngine());return t.captureGPUFrameTime=!0,{id:"GPU frame time",getData:()=>Math.max(t.gpuFrameTimeCounter.current*1e-6,0),dispose:()=>{t.dispose()}}}}}class Wa{constructor(e,t){this._disableRenderingRefCount=0,this._currentPerformancePriorityMode=0,this._isEnabling=!1,this._enableCancelFunctions=new Map,this._disableCancelFunctions=new Map,this.showDebugLogs=!1,this._scene=e,this._engine=e.getEngine(),this._engine.isWebGPU&&(this._options={morphTargetsNumMaxInfluences:20,...t},this._engine.snapshotRenderingMode=1,this.fixMeshes(),this._onResizeObserver=this._engine.onResizeObservable.add(()=>{this._log("onResize","start"),this._fastSnapshotRenderingEnabled&&(this.disableSnapshotRendering(),this.enableSnapshotRendering()),this._log("onResize","end")}),this._scene.onBeforeRenderObservable.add(()=>{var s;if(this._fastSnapshotRenderingEnabled){e.skeletons.forEach(i=>i.prepare(!0));for(const i of e.meshes)if(i.infiniteDistance&&i.transferToEffect(i.computeWorldMatrix(!0)),i.skeleton&&i.transferToEffect(i.computeWorldMatrix(!0)),i.getClassName()==="GaussianSplattingMesh"&&i._postToWorker(),i.morphTargetManager&&i.subMeshes)for(const a of i.subMeshes){const r=a._drawWrapper,n=r.effect;if(n){const o=r.drawContext.buffers.LeftOver,h=(s=n._pipelineContext)==null?void 0:s.uniformBuffer;o&&h&&h.setDataBuffer(o)&&(i.morphTargetManager._bind(n),Cs(i,n),h.update())}}}}))}get isReady(){return!this._isEnabling}enableSnapshotRendering(){if(!this._engine.isWebGPU||--this._disableRenderingRefCount>0)return;this._log("enableSnapshotRendering","called"),this._disableCancelFunctions.size>0&&this._log("enableSnapshotRendering",`cancelling ${this._disableCancelFunctions.size} "disable" callbacks`),this._disableCancelFunctions.forEach(t=>t()),this._disableCancelFunctions.clear(),this._isEnabling=!0,this._disableRenderingRefCount=0,this._currentPerformancePriorityMode=this._pendingCurrentPerformancePriorityMode??this._scene.performancePriority,this._pendingCurrentPerformancePriorityMode=void 0,this._scene.performancePriority=0;const e=()=>{this._enableCancelFunctions.delete(e);const t=this._engine.frameId+2;this._log("enableSnapshotRendering",`scene ready, add callbacks for frames ${t} and ${t+1}`),this._executeAtFrame(t,()=>{this._log("enableSnapshotRendering","callback #1, enable snapshot rendering at the engine level"),this._engine.snapshotRendering=!0}),this._executeAtFrame(t+1,()=>{this._log("enableSnapshotRendering","callback #2, signals that snapshot rendering helper is ready"),this._isEnabling=!1})};this._enableCancelFunctions.set(e,()=>this._scene.onReadyObservable.removeCallback(e)),this._scene.executeWhenReady(e)}disableSnapshotRendering(){if(this._engine.isWebGPU){if(this._log("disableSnapshotRendering","called"),this._disableRenderingRefCount===0&&(this._enableCancelFunctions.size>0&&this._log("disableSnapshotRendering",`cancelling ${this._enableCancelFunctions.size} "enable" callbacks`),this._enableCancelFunctions.forEach(e=>e()),this._enableCancelFunctions.clear(),this._isEnabling=!1,this._scene.performancePriority=0,this._currentPerformancePriorityMode!==0)){this._log("disableSnapshotRendering",`makes sure that the scene is rendered once in BackwardCompatible mode (code: 0) before switching to mode ${this._currentPerformancePriorityMode}`),this._pendingCurrentPerformancePriorityMode=this._currentPerformancePriorityMode;const e=()=>{this._log("disableSnapshotRendering",`scene ready, add callback for frame ${this._engine.frameId+2}`),this._executeAtFrame(this._engine.frameId+2,()=>{this._log("disableSnapshotRendering",`switching to performance priority mode ${this._pendingCurrentPerformancePriorityMode}`),this._scene.performancePriority=this._pendingCurrentPerformancePriorityMode,this._pendingCurrentPerformancePriorityMode=void 0},"whenDisabled")};this._disableCancelFunctions.set(e,()=>this._scene.onReadyObservable.removeCallback(e)),this._scene.executeWhenReady(e)}this._engine.snapshotRendering=!1,this._disableRenderingRefCount++}}fixMeshes(e){if(this._engine.isWebGPU){e=e||this._scene.meshes;for(const t of e)t.ignoreCameraMaxZ=!1,t.morphTargetManager&&(t.morphTargetManager.numMaxInfluencers=Math.min(t.morphTargetManager.numTargets,this._options.morphTargetsNumMaxInfluences))}}updateMesh(e,t=!0){if(this._fastSnapshotRenderingEnabled){if(Array.isArray(e)){for(const s of e)(!t||!this._updateInstancedMesh(s))&&s.transferToEffect(s.computeWorldMatrix());return}(!t||!this._updateInstancedMesh(e))&&e.transferToEffect(e.computeWorldMatrix())}}_updateInstancedMesh(e){if(e.hasInstances){if(e.subMeshes){const t=e;for(const s of t.subMeshes)t._updateInstancedBuffers(s,t._getInstancesRenderList(s._id),t._instanceDataStorage.instancesBufferSize,this._engine)}return!0}else if(e.isAnInstance)return!0;return!1}updateMeshesForEffectLayer(e,t=!0){if(!this._engine.isWebGPU)return;const s=e.mainTexture.renderPassId;t?this._onBeforeRenderObserverUpdateLayer=this._scene.onBeforeRenderObservable.add(()=>{this._updateMeshMatricesForRenderPassId(s)}):this._updateMeshMatricesForRenderPassId(s)}dispose(){this._engine.isWebGPU&&(this._scene.onBeforeRenderObservable.remove(this._onBeforeRenderObserver),this._scene.onBeforeRenderObservable.remove(this._onBeforeRenderObserverUpdateLayer),this._engine.onResizeObservable.remove(this._onResizeObserver))}get _fastSnapshotRenderingEnabled(){return this._engine.snapshotRendering&&this._engine.snapshotRenderingMode===1}_updateMeshMatricesForRenderPassId(e){var s;if(!this._fastSnapshotRenderingEnabled)return;const t=this._scene.getTransformMatrix();for(let i=0;i<this._scene.meshes.length;++i){const a=this._scene.meshes[i];if(a.subMeshes)for(let r=0;r<a.subMeshes.length;++r){const n=a.subMeshes[r]._getDrawWrapper(e),o=n==null?void 0:n.effect;if(o){const h=n.drawContext.buffers.LeftOver,l=(s=o._pipelineContext)==null?void 0:s.uniformBuffer;h&&l&&l.setDataBuffer(h)&&(o.setMatrix("viewProjection",t),o.setMatrix("world",a.computeWorldMatrix()),l.update())}}}}_executeAtFrame(e,t,s="whenEnabled"){const i=()=>{this._engine.frameId>=e&&(this._engine.onEndFrameObservable.remove(a),s==="whenEnabled"?this._enableCancelFunctions.delete(i):this._disableCancelFunctions.delete(i),t())},a=this._engine.onEndFrameObservable.add(i);s==="whenEnabled"?this._enableCancelFunctions.set(i,()=>this._engine.onEndFrameObservable.remove(a)):this._disableCancelFunctions.set(i,()=>this._engine.onEndFrameObservable.remove(a))}_log(e,t){this.showDebugLogs&&D.Log(`[Frame: ${this._engine.frameId}] SnapshotRenderingHelper:${e} - ${t}`)}}async function Ha(u,e){var r;const t=e.probe??new ei("tempProbe",e.size,u),s=!!e.probe;s||(e.position?t.position=e.position.clone():u.activeCamera&&(t.position=u.activeCamera.position.clone()));const i=e.meshesFilter?u.meshes.filter(e.meshesFilter):u.meshes;(r=t.renderList)==null||r.push(...i),t.refreshRate=me.REFRESHRATE_RENDER_ONCE,t.cubeTexture.render();const a=new Si("tempProceduralTexture","equirectangularPanorama",{width:e.size*2,height:e.size},u);return a.setTexture("cubeMap",t.cubeTexture),new Promise((n,o)=>{a.onGeneratedObservable.addOnce(()=>{const h=a.readPixels();if(!h){o(new Error("No Pixel Data found on procedural texture")),a.dispose(),s||t.dispose();return}h.then(l=>{a.dispose(),s||t.dispose(),e.filename?(Rs(e.size*2,e.size,l,void 0,"image/png",e.filename),n(null)):n(l)})})})}class Ua{constructor(){this._currentOperation=Promise.resolve()}lockAsync(e,t){t==null||t.throwIfAborted();const s=t?()=>(t.throwIfAborted(),e()):e,i=this._currentOperation.then(s);return this._currentOperation=new Promise(a=>i.then(()=>a(),a)),i}static async LockAsync(e,t,s){if(s==null||s.throwIfAborted(),t.length===0)return await e();const i=new ai;let a=0;return t.forEach(r=>r.lockAsync(async()=>(a++,a===t.length&&i.resolve(await e()),i.promise),s).catch(n=>i.reject(n))),i.promise}}class ja{constructor(e=Recast){if(this.bjsRECAST={},this.name="RecastJSPlugin",this._maximumSubStepCount=10,this._timeStep=1/60,this._timeFactor=1,this._worker=null,typeof e=="function"?D.Error("RecastJS is not ready. Please make sure you await Recast() before using the plugin."):this.bjsRECAST=e,!this.isSupported()){D.Error("RecastJS is not available. Please make sure you included the js file.");return}this.setTimeStep(),this._tempVec1=new this.bjsRECAST.Vec3,this._tempVec2=new this.bjsRECAST.Vec3}setWorkerURL(e){return window&&window.Worker?(this._worker=new Worker(e),!0):!1}setTimeStep(e=1/60){this._timeStep=e}getTimeStep(){return this._timeStep}setMaximumSubStepCount(e=10){this._maximumSubStepCount=e}getMaximumSubStepCount(){return this._maximumSubStepCount}set timeFactor(e){this._timeFactor=Math.max(e,0)}get timeFactor(){return this._timeFactor}createNavMesh(e,t,s){this._worker&&!s?D.Warn("A worker is avaible but no completion callback. Defaulting to blocking navmesh creation"):!this._worker&&s&&D.Warn("A completion callback is avaible but no worker. Defaulting to blocking navmesh creation"),this.navMesh=new this.bjsRECAST.NavMesh;let i,a,r;const n=[],o=[];let h=0;for(i=0;i<e.length;i++)if(e[i]){const l=e[i],_=l.getIndices();if(!_)continue;const g=l.getVerticesData(E.PositionKind,!1,!1);if(!g)continue;const p=[],f=l.computeWorldMatrix(!0);if(l.hasThinInstances){const m=l.thinInstanceGetWorldMatrices();for(let b=0;b<m.length;b++){const y=new R;m[b].multiplyToRef(f,y),p.push(y)}}else p.push(f);for(let m=0;m<p.length;m++){const b=p[m];for(a=0;a<_.length;a++)n.push(_[a]+h);const y=d.Zero(),T=d.Zero();for(r=0;r<g.length;r+=3)d.FromArrayToRef(g,r,T),d.TransformCoordinatesToRef(T,b,y),o.push(y.x,y.y,y.z);h+=g.length/3}}if(this._worker&&s)this._worker.postMessage([o,h,n,n.length,t]),this._worker.onmessage=function(l){s(l.data)};else{const l=new this.bjsRECAST.rcConfig;l.cs=t.cs,l.ch=t.ch,l.borderSize=t.borderSize?t.borderSize:0,l.tileSize=t.tileSize?t.tileSize:0,l.walkableSlopeAngle=t.walkableSlopeAngle,l.walkableHeight=t.walkableHeight,l.walkableClimb=t.walkableClimb,l.walkableRadius=t.walkableRadius,l.maxEdgeLen=t.maxEdgeLen,l.maxSimplificationError=t.maxSimplificationError,l.minRegionArea=t.minRegionArea,l.mergeRegionArea=t.mergeRegionArea,l.maxVertsPerPoly=t.maxVertsPerPoly,l.detailSampleDist=t.detailSampleDist,l.detailSampleMaxError=t.detailSampleMaxError,this.navMesh.build(o,h,n,n.length,l)}}createDebugNavMesh(e){let t,s;const i=this.navMesh.getDebugNavMesh(),a=i.getTriangleCount(),r=[],n=[];for(t=0;t<a*3;t++)r.push(t);for(t=0;t<a;t++)for(s=0;s<3;s++){const l=i.getTriangle(t).getPoint(s);n.push(l.x,l.y,l.z)}const o=new fe("NavMeshDebug",e),h=new Je;return h.indices=r,h.positions=n,h.applyToMesh(o,!1),o}getClosestPoint(e){this._tempVec1.x=e.x,this._tempVec1.y=e.y,this._tempVec1.z=e.z;const t=this.navMesh.getClosestPoint(this._tempVec1);return new d(t.x,t.y,t.z)}getClosestPointToRef(e,t){this._tempVec1.x=e.x,this._tempVec1.y=e.y,this._tempVec1.z=e.z;const s=this.navMesh.getClosestPoint(this._tempVec1);t.set(s.x,s.y,s.z)}getRandomPointAround(e,t){this._tempVec1.x=e.x,this._tempVec1.y=e.y,this._tempVec1.z=e.z;const s=this.navMesh.getRandomPointAround(this._tempVec1,t);return new d(s.x,s.y,s.z)}getRandomPointAroundToRef(e,t,s){this._tempVec1.x=e.x,this._tempVec1.y=e.y,this._tempVec1.z=e.z;const i=this.navMesh.getRandomPointAround(this._tempVec1,t);s.set(i.x,i.y,i.z)}moveAlong(e,t){this._tempVec1.x=e.x,this._tempVec1.y=e.y,this._tempVec1.z=e.z,this._tempVec2.x=t.x,this._tempVec2.y=t.y,this._tempVec2.z=t.z;const s=this.navMesh.moveAlong(this._tempVec1,this._tempVec2);return new d(s.x,s.y,s.z)}moveAlongToRef(e,t,s){this._tempVec1.x=e.x,this._tempVec1.y=e.y,this._tempVec1.z=e.z,this._tempVec2.x=t.x,this._tempVec2.y=t.y,this._tempVec2.z=t.z;const i=this.navMesh.moveAlong(this._tempVec1,this._tempVec2);s.set(i.x,i.y,i.z)}_convertNavPathPoints(e){let t;const s=e.getPointCount(),i=[];for(t=0;t<s;t++){const a=e.getPoint(t);i.push(new d(a.x,a.y,a.z))}return i}computePath(e,t){this._tempVec1.x=e.x,this._tempVec1.y=e.y,this._tempVec1.z=e.z,this._tempVec2.x=t.x,this._tempVec2.y=t.y,this._tempVec2.z=t.z;const s=this.navMesh.computePath(this._tempVec1,this._tempVec2);return this._convertNavPathPoints(s)}computePathSmooth(e,t){this._tempVec1.x=e.x,this._tempVec1.y=e.y,this._tempVec1.z=e.z,this._tempVec2.x=t.x,this._tempVec2.y=t.y,this._tempVec2.z=t.z;const s=this.navMesh.computePathSmooth(this._tempVec1,this._tempVec2);return this._convertNavPathPoints(s)}createCrowd(e,t,s){return new Bi(this,e,t,s)}setDefaultQueryExtent(e){this._tempVec1.x=e.x,this._tempVec1.y=e.y,this._tempVec1.z=e.z,this.navMesh.setDefaultQueryExtent(this._tempVec1)}getDefaultQueryExtent(){const e=this.navMesh.getDefaultQueryExtent();return new d(e.x,e.y,e.z)}buildFromNavmeshData(e){const t=e.length*e.BYTES_PER_ELEMENT,s=this.bjsRECAST._malloc(t),i=new Uint8Array(this.bjsRECAST.HEAPU8.buffer,s,t);i.set(e);const a=new this.bjsRECAST.NavmeshData;a.dataPointer=i.byteOffset,a.size=e.length,this.navMesh=new this.bjsRECAST.NavMesh,this.navMesh.buildFromNavmeshData(a),this.bjsRECAST._free(i.byteOffset)}getNavmeshData(){const e=this.navMesh.getNavmeshData(),t=new Uint8Array(this.bjsRECAST.HEAPU8.buffer,e.dataPointer,e.size),s=new Uint8Array(e.size);return s.set(t),this.navMesh.freeNavmeshData(e),s}getDefaultQueryExtentToRef(e){const t=this.navMesh.getDefaultQueryExtent();e.set(t.x,t.y,t.z)}dispose(){}addCylinderObstacle(e,t,s){return this._tempVec1.x=e.x,this._tempVec1.y=e.y,this._tempVec1.z=e.z,this.navMesh.addCylinderObstacle(this._tempVec1,t,s)}addBoxObstacle(e,t,s){return this._tempVec1.x=e.x,this._tempVec1.y=e.y,this._tempVec1.z=e.z,this._tempVec2.x=t.x,this._tempVec2.y=t.y,this._tempVec2.z=t.z,this.navMesh.addBoxObstacle(this._tempVec1,this._tempVec2,s)}removeObstacle(e){this.navMesh.removeObstacle(e)}isSupported(){return this.bjsRECAST!==void 0}getRandomSeed(){return this.bjsRECAST._getRandomSeed()}setRandomSeed(e){this.bjsRECAST._setRandomSeed(e)}}class Bi{constructor(e,t,s,i){this.recastCrowd={},this.transforms=new Array,this.agents=new Array,this.reachRadii=new Array,this._agentDestinationArmed=new Array,this._agentDestination=new Array,this._onBeforeAnimationsObserver=null,this.onReachTargetObservable=new W,this.bjsRECASTPlugin=e,this.recastCrowd=new this.bjsRECASTPlugin.bjsRECAST.Crowd(t,s,this.bjsRECASTPlugin.navMesh.getNavMesh()),this._scene=i,this._onBeforeAnimationsObserver=i.onBeforeAnimationsObservable.add(()=>{this.update(i.getEngine().getDeltaTime()*.001*e.timeFactor)})}addAgent(e,t,s){const i=new this.bjsRECASTPlugin.bjsRECAST.dtCrowdAgentParams;i.radius=t.radius,i.height=t.height,i.maxAcceleration=t.maxAcceleration,i.maxSpeed=t.maxSpeed,i.collisionQueryRange=t.collisionQueryRange,i.pathOptimizationRange=t.pathOptimizationRange,i.separationWeight=t.separationWeight,i.updateFlags=7,i.obstacleAvoidanceType=0,i.queryFilterType=0,i.userData=0;const a=this.recastCrowd.addAgent(new this.bjsRECASTPlugin.bjsRECAST.Vec3(e.x,e.y,e.z),i);return this.transforms.push(s),this.agents.push(a),this.reachRadii.push(t.reachRadius?t.reachRadius:t.radius),this._agentDestinationArmed.push(!1),this._agentDestination.push(new d(0,0,0)),a}getAgentPosition(e){const t=this.recastCrowd.getAgentPosition(e);return new d(t.x,t.y,t.z)}getAgentPositionToRef(e,t){const s=this.recastCrowd.getAgentPosition(e);t.set(s.x,s.y,s.z)}getAgentVelocity(e){const t=this.recastCrowd.getAgentVelocity(e);return new d(t.x,t.y,t.z)}getAgentVelocityToRef(e,t){const s=this.recastCrowd.getAgentVelocity(e);t.set(s.x,s.y,s.z)}getAgentNextTargetPath(e){const t=this.recastCrowd.getAgentNextTargetPath(e);return new d(t.x,t.y,t.z)}getAgentNextTargetPathToRef(e,t){const s=this.recastCrowd.getAgentNextTargetPath(e);t.set(s.x,s.y,s.z)}getAgentState(e){return this.recastCrowd.getAgentState(e)}overOffmeshConnection(e){return this.recastCrowd.overOffmeshConnection(e)}agentGoto(e,t){this.recastCrowd.agentGoto(e,new this.bjsRECASTPlugin.bjsRECAST.Vec3(t.x,t.y,t.z));const s=this.agents.indexOf(e);s>-1&&(this._agentDestinationArmed[s]=!0,this._agentDestination[s].set(t.x,t.y,t.z))}agentTeleport(e,t){this.recastCrowd.agentTeleport(e,new this.bjsRECASTPlugin.bjsRECAST.Vec3(t.x,t.y,t.z))}updateAgentParameters(e,t){const s=this.recastCrowd.getAgentParameters(e);t.radius!==void 0&&(s.radius=t.radius),t.height!==void 0&&(s.height=t.height),t.maxAcceleration!==void 0&&(s.maxAcceleration=t.maxAcceleration),t.maxSpeed!==void 0&&(s.maxSpeed=t.maxSpeed),t.collisionQueryRange!==void 0&&(s.collisionQueryRange=t.collisionQueryRange),t.pathOptimizationRange!==void 0&&(s.pathOptimizationRange=t.pathOptimizationRange),t.separationWeight!==void 0&&(s.separationWeight=t.separationWeight),this.recastCrowd.setAgentParameters(e,s)}removeAgent(e){this.recastCrowd.removeAgent(e);const t=this.agents.indexOf(e);t>-1&&(this.agents.splice(t,1),this.transforms.splice(t,1),this.reachRadii.splice(t,1),this._agentDestinationArmed.splice(t,1),this._agentDestination.splice(t,1))}getAgents(){return this.agents}update(e){if(this.bjsRECASTPlugin.navMesh.update(),e<=Te)return;const t=this.bjsRECASTPlugin.getTimeStep(),s=this.bjsRECASTPlugin.getMaximumSubStepCount();if(t<=Te)this.recastCrowd.update(e);else{let i=Math.floor(e/t);s&&i>s&&(i=s),i<1&&(i=1);const a=e/i;for(let r=0;r<i;r++)this.recastCrowd.update(a)}for(let i=0;i<this.agents.length;i++){const a=this.agents[i],r=this.getAgentPosition(a);if(this.transforms[i].position=r,this._agentDestinationArmed[i]){const n=r.x-this._agentDestination[i].x,o=r.z-this._agentDestination[i].z,h=this.reachRadii[i],l=this._agentDestination[i].y-this.reachRadii[i],_=this._agentDestination[i].y+this.reachRadii[i],g=n*n+o*o;r.y>l&&r.y<_&&g<h*h&&(this._agentDestinationArmed[i]=!1,this.onReachTargetObservable.notifyObservers({agentIndex:a,destination:this._agentDestination[i]}))}}}setDefaultQueryExtent(e){const t=new this.bjsRECASTPlugin.bjsRECAST.Vec3(e.x,e.y,e.z);this.recastCrowd.setDefaultQueryExtent(t)}getDefaultQueryExtent(){const e=this.recastCrowd.getDefaultQueryExtent();return new d(e.x,e.y,e.z)}getDefaultQueryExtentToRef(e){const t=this.recastCrowd.getDefaultQueryExtent();e.set(t.x,t.y,t.z)}getCorners(e){let t;const s=this.recastCrowd.getCorners(e),i=s.getPointCount(),a=[];for(t=0;t<i;t++){const r=s.getPoint(t);a.push(new d(r.x,r.y,r.z))}return a}dispose(){this.recastCrowd.destroy(),this._scene.onBeforeAnimationsObservable.remove(this._onBeforeAnimationsObserver),this._onBeforeAnimationsObserver=null,this.onReachTargetObservable.clear()}}class kt{getBoundingInfo(){return this._boundingInfo}get hasBoundingInfo(){return this._boundingInfo!==null}constructor(e,t,s,i,a,r,n,o,h=null,l=null){this.idx=0,this.id=0,this.color=new Me(1,1,1,1),this.position=d.Zero(),this.rotation=d.Zero(),this.scaling=d.One(),this.uvs=new le(0,0,1,1),this.velocity=d.Zero(),this.pivot=d.Zero(),this.translateFromPivot=!1,this.alive=!0,this.isVisible=!0,this._pos=0,this._ind=0,this.shapeId=0,this.idxInShape=0,this._stillInvisible=!1,this._rotationMatrix=[1,0,0,0,1,0,0,0,1],this.parentId=null,this.materialIndex=null,this.props=null,this.cullingStrategy=Ut.CULLINGSTRATEGY_BOUNDINGSPHERE_ONLY,this._globalPosition=d.Zero(),this.idx=e,this.id=t,this._pos=s,this._ind=i,this._model=a,this.shapeId=r,this.idxInShape=n,this._sps=o,h&&(this._modelBoundingInfo=h,this._boundingInfo=new jt(h.minimum,h.maximum)),l!==null&&(this.materialIndex=l)}copyToRef(e){return e.position.copyFrom(this.position),e.rotation.copyFrom(this.rotation),this.rotationQuaternion&&(e.rotationQuaternion?e.rotationQuaternion.copyFrom(this.rotationQuaternion):e.rotationQuaternion=this.rotationQuaternion.clone()),e.scaling.copyFrom(this.scaling),this.color&&(e.color?e.color.copyFrom(this.color):e.color=this.color.clone()),e.uvs.copyFrom(this.uvs),e.velocity.copyFrom(this.velocity),e.pivot.copyFrom(this.pivot),e.translateFromPivot=this.translateFromPivot,e.alive=this.alive,e.isVisible=this.isVisible,e.parentId=this.parentId,e.cullingStrategy=this.cullingStrategy,this.materialIndex!==null&&(e.materialIndex=this.materialIndex),this}get scale(){return this.scaling}set scale(e){this.scaling=e}get quaternion(){return this.rotationQuaternion}set quaternion(e){this.rotationQuaternion=e}intersectsMesh(e){return!this._boundingInfo||!e.hasBoundingInfo?!1:this._sps._bSphereOnly?Ds.Intersects(this._boundingInfo.boundingSphere,e.getBoundingInfo().boundingSphere):this._boundingInfo.intersects(e.getBoundingInfo(),!1)}isInFrustum(e){return this._boundingInfo!==null&&this._boundingInfo.isInFrustum(e,this.cullingStrategy)}getRotationMatrix(e){let t;if(this.rotationQuaternion)t=this.rotationQuaternion;else{t=c.Quaternion[0];const s=this.rotation;M.RotationYawPitchRollToRef(s.y,s.x,s.z,t)}t.toRotationMatrix(e)}}class Vt{get shapeID(){return this.shapeId}set shapeID(e){this.shapeId=e}constructor(e,t,s,i,a,r,n,o,h){this._indicesLength=0,this.shapeId=e,this._shape=t,this._indices=s,this._indicesLength=s.length,this._shapeUV=r,this._shapeColors=a,this._normals=i,this._positionFunction=n,this._vertexFunction=o,this._material=h}}class Ai{constructor(e,t,s,i){this.idx=0,this.ind=0,this.indicesLength=0,this.sqDistance=0,this.materialIndex=0,this.idx=e,this.ind=t,this.indicesLength=s,this.materialIndex=i}}class Ci{constructor(){this.position=d.Zero(),this.color=new Me(1,1,1,1),this.uv=Ee.Zero()}get x(){return this.position.x}set x(e){this.position.x=e}get y(){return this.position.y}set y(e){this.position.y=e}get z(){return this.position.z}set z(e){this.position.z=e}}class Qa{constructor(e,t,s){this.particles=new Array,this.nbParticles=0,this.billboard=!1,this.recomputeNormals=!1,this.counter=0,this.vars={},this._bSphereOnly=!1,this._bSphereRadiusFactor=1,this._positions=new Array,this._indices=new Array,this._normals=new Array,this._colors=new Array,this._uvs=new Array,this._index=0,this._updatable=!0,this._pickable=!1,this._isVisibilityBoxLocked=!1,this._alwaysVisible=!1,this._depthSort=!1,this._expandable=!1,this._shapeCounter=0,this._copy=new kt(0,0,0,0,null,0,0,this),this._color=new Me(0,0,0,0),this._computeParticleColor=!0,this._computeParticleTexture=!0,this._computeParticleRotation=!0,this._computeParticleVertex=!1,this._computeBoundingBox=!1,this._autoFixFaceOrientation=!1,this._depthSortParticles=!0,this._mustUnrotateFixedNormals=!1,this._particlesIntersect=!1,this._needs32Bits=!1,this._isNotBuilt=!0,this._lastParticleId=0,this._idxOfId=[],this._multimaterialEnabled=!1,this._useModelMaterial=!1,this._depthSortFunction=(i,a)=>a.sqDistance-i.sqDistance,this._materialSortFunction=(i,a)=>i.materialIndex-a.materialIndex,this._autoUpdateSubMeshes=!1,this._recomputeInvisibles=!1,this.name=e,this._scene=t||Qe.LastCreatedScene,this._camera=t.activeCamera,this._pickable=s?s.isPickable:!1,this._depthSort=s?s.enableDepthSort:!1,this._multimaterialEnabled=s?s.enableMultiMaterial:!1,this._useModelMaterial=s?s.useModelMaterial:!1,this._multimaterialEnabled=this._useModelMaterial?!0:this._multimaterialEnabled,this._expandable=s?s.expandable:!1,this._particlesIntersect=s?s.particleIntersection:!1,this._bSphereOnly=s?s.boundingSphereOnly:!1,this._bSphereRadiusFactor=s&&s.bSphereRadiusFactor?s.bSphereRadiusFactor:1,this._computeBoundingBox=s!=null&&s.computeBoundingBox?s.computeBoundingBox:!1,this._autoFixFaceOrientation=s!=null&&s.autoFixFaceOrientation?s.autoFixFaceOrientation:!1,s&&s.updatable!==void 0?this._updatable=s.updatable:this._updatable=!0,this._pickable&&(this.pickedBySubMesh=[[]],this.pickedParticles=this.pickedBySubMesh[0]),(this._depthSort||this._multimaterialEnabled)&&(this.depthSortedParticles=[]),this._multimaterialEnabled&&(this._multimaterial=new ft(this.name+"MultiMaterial",this._scene),this._materials=[],this._materialIndexesById={}),this._tmpVertex=new Ci}buildMesh(){if(!this._isNotBuilt&&this.mesh)return this.mesh;if(this.nbParticles===0&&!this.mesh){const t=ti("",{radius:1,tessellation:3},this._scene);this.addShape(t,1),t.dispose()}if(this._indices32=this._needs32Bits?new Uint32Array(this._indices):new Uint16Array(this._indices),this._positions32=new Float32Array(this._positions),this._uvs32=new Float32Array(this._uvs),this._colors32=new Float32Array(this._colors),!this.mesh){const t=new fe(this.name,this._scene);this.mesh=t}!this._updatable&&this._multimaterialEnabled&&this._sortParticlesByMaterial(),this.recomputeNormals&&Je.ComputeNormals(this._positions32,this._indices32,this._normals),this._normals32=new Float32Array(this._normals),this._fixedNormal32=new Float32Array(this._normals),this._mustUnrotateFixedNormals&&this._unrotateFixedNormals();const e=new Je;if(e.indices=this._depthSort?this._indices:this._indices32,e.set(this._positions32,E.PositionKind),e.set(this._normals32,E.NormalKind),this._uvs32.length>0&&e.set(this._uvs32,E.UVKind),this._colors32.length>0&&e.set(this._colors32,E.ColorKind),e.applyToMesh(this.mesh,this._updatable),this.mesh.isPickable=this._pickable,this._pickable){let t=0;for(let s=0;s<this.nbParticles;s++){const i=this.particles[s],a=i._model._indicesLength;for(let r=0;r<a;r++)if(r%3==0){const o={idx:i.idx,faceId:t};this.pickedParticles[t]=o,t++}}}return this._multimaterialEnabled&&this.setMultiMaterial(this._materials),this._expandable||(!this._depthSort&&!this._multimaterialEnabled&&!this._autoFixFaceOrientation&&(this._indices=null),this._positions=null,this._normals=null,this._uvs=null,this._colors=null,this._updatable||(this.particles.length=0)),this._isNotBuilt=!1,this.recomputeNormals=!1,this._recomputeInvisibles=!0,this.mesh}_getUVKind(e,t){var s,i;return t===-1&&((s=e.material)!=null&&s.diffuseTexture?t=e.material.diffuseTexture.coordinatesIndex:(i=e.material)!=null&&i.albedoTexture&&(t=e.material.albedoTexture.coordinatesIndex)),"uv"+(t?t+1:"")}digest(e,t){let s=t&&t.facetNb||1,i=t&&t.number||0,a=t&&t.delta||0;const r=e.getVerticesData(E.PositionKind),n=e.getIndices(),o=e.getVerticesData(this._getUVKind(e,(t==null?void 0:t.uvKind)??0)),h=e.getVerticesData(E.ColorKind),l=e.getVerticesData(E.NormalKind),_=t&&t.storage?t.storage:null;let g=0;const p=n.length/3;i?(i=i>p?p:i,s=Math.round(p/i),a=0):s=s>p?p:s;const f=[],m=[],b=[],y=[],T=[],v=d.Zero(),B=s;for(;g<p;){s=B+Math.floor((1+a)*Math.random()),g>p-s&&(s=p-g),f.length=0,m.length=0,b.length=0,y.length=0,T.length=0;let A=0;for(let k=g*3;k<(g+s)*3;k++){b.push(A);const N=n[k],P=N*3;if(f.push(r[P],r[P+1],r[P+2]),m.push(l[P],l[P+1],l[P+2]),o){const V=N*2;y.push(o[V],o[V+1])}if(h){const V=N*4;T.push(h[V],h[V+1],h[V+2],h[V+3])}A++}let U=this.nbParticles;const w=this._posToShape(f),X=this._uvsToShapeUV(y),Q=b.slice(),F=T.slice(),q=m.slice();v.copyFromFloats(0,0,0);let G;for(G=0;G<w.length;G++)v.addInPlace(w[G]);v.scaleInPlace(1/w.length);const Y=new d(1/0,1/0,1/0),L=new d(-1/0,-1/0,-1/0);for(G=0;G<w.length;G++)w[G].subtractInPlace(v),Y.minimizeInPlaceFromFloats(w[G].x,w[G].y,w[G].z),L.maximizeInPlaceFromFloats(w[G].x,w[G].y,w[G].z);let te;this._particlesIntersect&&(te=new jt(Y,L));let C=null;this._useModelMaterial&&(C=e.material?e.material:this._setDefaultMaterial());const ce=new Vt(this._shapeCounter,w,Q,q,F,X,null,null,C),Z=this._positions.length,x=this._indices.length;this._meshBuilder(this._index,x,w,this._positions,Q,this._indices,y,this._uvs,F,this._colors,q,this._normals,U,0,null,ce),this._addParticle(U,this._lastParticleId,Z,x,ce,this._shapeCounter,0,te,_),this.particles[this.nbParticles].position.addInPlace(v),_||(this._index+=w.length,U++,this.nbParticles++,this._lastParticleId++),this._shapeCounter++,g+=s}return this._isNotBuilt=!0,this}_unrotateFixedNormals(){let e=0,t=0;const s=c.Vector3[0],i=c.Quaternion[0],a=c.Matrix[0];for(let r=0;r<this.particles.length;r++){const n=this.particles[r],o=n._model._shape;if(n.rotationQuaternion)n.rotationQuaternion.conjugateToRef(i);else{const h=n.rotation;M.RotationYawPitchRollToRef(h.y,h.x,h.z,i),i.conjugateInPlace()}i.toRotationMatrix(a);for(let h=0;h<o.length;h++)t=e+h*3,d.TransformNormalFromFloatsToRef(this._normals32[t],this._normals32[t+1],this._normals32[t+2],a,s),s.toArray(this._fixedNormal32,t);e=t+3}}_resetCopy(){const e=this._copy;e.position.setAll(0),e.rotation.setAll(0),e.rotationQuaternion=null,e.scaling.setAll(1),e.uvs.copyFromFloats(0,0,1,1),e.color=null,e.translateFromPivot=!1,e.shapeId=0,e.materialIndex=null}_meshBuilder(e,t,s,i,a,r,n,o,h,l,_,g,p,f,m,b){let y,T=0,v=0,B=0;this._resetCopy();const A=this._copy,U=!!(m&&m.storage);if(A.idx=p,A.idxInShape=f,A.shapeId=b.shapeId,this._useModelMaterial){const C=b._material.uniqueId,ce=this._materialIndexesById;Object.prototype.hasOwnProperty.call(ce,C)||(ce[C]=this._materials.length,this._materials.push(b._material));const Z=ce[C];A.materialIndex=Z}if(m&&m.positionFunction&&(m.positionFunction(A,p,f),this._mustUnrotateFixedNormals=!0),U)return A;const w=c.Matrix[0],X=this._tmpVertex,Q=X.position,F=X.color,q=X.uv,G=c.Vector3[1],Y=c.Vector3[2],L=c.Vector3[3];R.IdentityToRef(w),A.getRotationMatrix(w),A.pivot.multiplyToRef(A.scaling,L),A.translateFromPivot?Y.setAll(0):Y.copyFrom(L);const te=m&&m.vertexFunction;for(y=0;y<s.length;y++){if(Q.copyFrom(s[y]),A.color&&F.copyFrom(A.color),n&&q.copyFromFloats(n[T],n[T+1]),te&&m.vertexFunction(A,X,y),Q.multiplyInPlace(A.scaling).subtractInPlace(L),d.TransformCoordinatesToRef(Q,w,G),G.addInPlace(Y).addInPlace(A.position),i.push(G.x,G.y,G.z),n){const C=A.uvs;o.push((C.z-C.x)*q.x+C.x,(C.w-C.y)*q.y+C.y),T+=2}if(A.color)this._color.copyFrom(F);else{const C=this._color;h&&h[v]!==void 0?(C.r=h[v],C.g=h[v+1],C.b=h[v+2],C.a=h[v+3]):(C.r=1,C.g=1,C.b=1,C.a=1)}l.push(this._color.r,this._color.g,this._color.b,this._color.a),v+=4,!this.recomputeNormals&&_&&(d.TransformNormalFromFloatsToRef(_[B],_[B+1],_[B+2],w,Q),g.push(Q.x,Q.y,Q.z),B+=3)}for(y=0;y<a.length;y++){const C=e+a[y];r.push(C),C>65535&&(this._needs32Bits=!0)}if(this._depthSort||this._multimaterialEnabled){const C=A.materialIndex!==null?A.materialIndex:0;this.depthSortedParticles.push(new Ai(p,t,a.length,C))}return A}_posToShape(e){const t=[];for(let s=0;s<e.length;s+=3)t.push(d.FromArray(e,s));return t}_uvsToShapeUV(e){const t=[];if(e)for(let s=0;s<e.length;s++)t.push(e[s]);return t}_addParticle(e,t,s,i,a,r,n,o=null,h=null){const l=new kt(e,t,s,i,a,r,n,this,o);return(h||this.particles).push(l),l}addShape(e,t,s){const i=e.getVerticesData(E.PositionKind),a=e.getIndices(),r=e.getVerticesData(E.UVKind),n=e.getVerticesData(E.ColorKind),o=e.getVerticesData(E.NormalKind);this.recomputeNormals=!o;const h=Array.from(a),l=o?Array.from(o):[],_=n?Array.from(n):[],g=s&&s.storage?s.storage:null;let p=null;this._particlesIntersect&&(p=e.getBoundingInfo());const f=this._posToShape(i),m=this._uvsToShapeUV(r),b=s?s.positionFunction:null,y=s?s.vertexFunction:null;let T=null;this._useModelMaterial&&(T=e.material?e.material:this._setDefaultMaterial());const v=new Vt(this._shapeCounter,f,h,l,_,m,b,y,T);for(let B=0;B<t;B++)this._insertNewParticle(this.nbParticles,B,v,f,a,r,n,o,p,g,s);return this._shapeCounter++,this._isNotBuilt=!0,this._shapeCounter-1}_rebuildParticle(e,t=!1){this._resetCopy();const s=this._copy;e._model._positionFunction&&e._model._positionFunction(s,e.idx,e.idxInShape);const i=c.Matrix[0],a=c.Vector3[0],r=c.Vector3[1],n=c.Vector3[2],o=c.Vector3[3];s.getRotationMatrix(i),e.pivot.multiplyToRef(e.scaling,o),s.translateFromPivot?n.copyFromFloats(0,0,0):n.copyFrom(o);const h=e._model._shape;for(let l=0;l<h.length;l++)a.copyFrom(h[l]),e._model._vertexFunction&&e._model._vertexFunction(s,a,l),a.multiplyInPlace(s.scaling).subtractInPlace(o),d.TransformCoordinatesToRef(a,i,r),r.addInPlace(n).addInPlace(s.position).toArray(this._positions32,e._pos+l*3);t&&(e.position.setAll(0),e.rotation.setAll(0),e.rotationQuaternion=null,e.scaling.setAll(1),e.uvs.setAll(0),e.pivot.setAll(0),e.translateFromPivot=!1,e.parentId=null)}rebuildMesh(e=!1){for(let t=0;t<this.particles.length;t++)this._rebuildParticle(this.particles[t],e);return this.mesh.updateVerticesData(E.PositionKind,this._positions32,!1,!1),this}removeParticles(e,t){const s=t-e+1;if(!this._expandable||s<=0||s>=this.nbParticles||!this._updatable)return[];const i=this.particles,a=this.nbParticles;if(t<a-1){const h=t+1,l=i[h]._pos-i[e]._pos,_=i[h]._ind-i[e]._ind;for(let g=h;g<a;g++){const p=i[g];p._pos-=l,p._ind-=_}}const r=i.splice(e,s);this._positions.length=0,this._indices.length=0,this._colors.length=0,this._uvs.length=0,this._normals.length=0,this._index=0,this._idxOfId.length=0,(this._depthSort||this._multimaterialEnabled)&&(this.depthSortedParticles=[]);let n=0;const o=i.length;for(let h=0;h<o;h++){const l=i[h],_=l._model,g=_._shape,p=_._indices,f=_._normals,m=_._shapeColors,b=_._shapeUV;l.idx=h,this._idxOfId[l.id]=h,this._meshBuilder(this._index,n,g,this._positions,p,this._indices,b,this._uvs,m,this._colors,f,this._normals,l.idx,l.idxInShape,null,_),this._index+=g.length,n+=p.length}return this.nbParticles-=s,this._isNotBuilt=!0,r}insertParticlesFromArray(e){if(!this._expandable)return this;let t=0,s=e[0].shapeId;const i=e.length;for(let a=0;a<i;a++){const r=e[a],n=r._model,o=n._shape,h=n._indices,l=n._shapeUV,_=n._shapeColors,g=n._normals,p=!g;this.recomputeNormals=p||this.recomputeNormals;const f=r.getBoundingInfo(),m=this._insertNewParticle(this.nbParticles,t,n,o,h,l,_,g,f,null,null);r.copyToRef(m),t++,s!=r.shapeId&&(s=r.shapeId,t=0)}return this._isNotBuilt=!0,this}_insertNewParticle(e,t,s,i,a,r,n,o,h,l,_){const g=this._positions.length,p=this._indices.length,f=this._meshBuilder(this._index,p,i,this._positions,a,this._indices,r,this._uvs,n,this._colors,o,this._normals,e,t,_,s);let m=null;return this._updatable&&(m=this._addParticle(this.nbParticles,this._lastParticleId,g,p,s,this._shapeCounter,t,h,l),m.position.copyFrom(f.position),m.rotation.copyFrom(f.rotation),f.rotationQuaternion&&(m.rotationQuaternion?m.rotationQuaternion.copyFrom(f.rotationQuaternion):m.rotationQuaternion=f.rotationQuaternion.clone()),f.color&&(m.color?m.color.copyFrom(f.color):m.color=f.color.clone()),m.scaling.copyFrom(f.scaling),m.uvs.copyFrom(f.uvs),f.materialIndex!==null&&(m.materialIndex=f.materialIndex),this.expandable&&(this._idxOfId[m.id]=m.idx)),l||(this._index+=i.length,this.nbParticles++,this._lastParticleId++),m}setParticles(e=0,t=this.nbParticles-1,s=!0){if(!this._updatable||this._isNotBuilt)return this;this.beforeUpdateParticles(e,t,s);const i=c.Matrix[0],a=c.Matrix[1],r=this.mesh,n=this._colors32,o=this._positions32,h=this._normals32,l=this._uvs32,_=this._indices32,g=this._indices,p=this._fixedNormal32,f=this._depthSort&&this._depthSortParticles,m=c.Vector3,b=m[5].copyFromFloats(1,0,0),y=m[6].copyFromFloats(0,1,0),T=m[7].copyFromFloats(0,0,1),v=m[8].setAll(Number.MAX_VALUE),B=m[9].setAll(-Number.MAX_VALUE),A=m[10].setAll(0),U=this._tmpVertex,w=U.position,X=U.color,Q=U.uv;if((this.billboard||this._depthSort)&&(this.mesh.computeWorldMatrix(!0),this.mesh._worldMatrix.invertToRef(a)),this.billboard){const Z=m[0];this._camera.getDirectionToRef($e.Z,Z),d.TransformNormalToRef(Z,a,T),T.normalize();const x=this._camera.getViewMatrix(!0);d.TransformNormalFromFloatsToRef(x.m[1],x.m[5],x.m[9],a,y),d.CrossToRef(y,T,b),y.normalize(),b.normalize()}this._depthSort&&d.TransformCoordinatesToRef(this._camera.globalPosition,a,A),R.IdentityToRef(i);let F=0,q=0,G=0,Y=0,L=0,te=0,C=0;if(this.mesh.isFacetDataEnabled&&(this._computeBoundingBox=!0),t=t>=this.nbParticles?this.nbParticles-1:t,this._computeBoundingBox&&(e!=0||t!=this.nbParticles-1)){const Z=this.mesh.getBoundingInfo();Z&&(v.copyFrom(Z.minimum),B.copyFrom(Z.maximum))}q=this.particles[e]._pos;const ce=q/3|0;Y=ce*4,te=ce*2;for(let Z=e;Z<=t;Z++){const x=this.particles[Z];this.updateParticle(x);const k=x._model._shape,N=x._model._shapeUV,P=x._rotationMatrix,V=x.position,de=x.rotation,ue=x.scaling,ne=x._globalPosition;if(f){const H=this.depthSortedParticles[Z];H.idx=x.idx,H.ind=x._ind,H.indicesLength=x._model._indicesLength,H.sqDistance=d.DistanceSquared(x.position,A)}if(!x.alive||x._stillInvisible&&!x.isVisible&&!this._recomputeInvisibles){C=k.length,q+=C*3,Y+=C*4,te+=C*2;continue}if(x.isVisible){x._stillInvisible=!1;const H=m[12];if(x.pivot.multiplyToRef(ue,H),this.billboard&&(de.x=0,de.y=0),(this._computeParticleRotation||this.billboard)&&x.getRotationMatrix(i),x.parentId!==null){const $=this.getParticleById(x.parentId);if($){const I=$._rotationMatrix,Pe=$._globalPosition,Ce=V.x*I[1]+V.y*I[4]+V.z*I[7],Re=V.x*I[0]+V.y*I[3]+V.z*I[6],De=V.x*I[2]+V.y*I[5]+V.z*I[8];if(ne.x=Pe.x+Re,ne.y=Pe.y+Ce,ne.z=Pe.z+De,this._computeParticleRotation||this.billboard){const z=i.m;P[0]=z[0]*I[0]+z[1]*I[3]+z[2]*I[6],P[1]=z[0]*I[1]+z[1]*I[4]+z[2]*I[7],P[2]=z[0]*I[2]+z[1]*I[5]+z[2]*I[8],P[3]=z[4]*I[0]+z[5]*I[3]+z[6]*I[6],P[4]=z[4]*I[1]+z[5]*I[4]+z[6]*I[7],P[5]=z[4]*I[2]+z[5]*I[5]+z[6]*I[8],P[6]=z[8]*I[0]+z[9]*I[3]+z[10]*I[6],P[7]=z[8]*I[1]+z[9]*I[4]+z[10]*I[7],P[8]=z[8]*I[2]+z[9]*I[5]+z[10]*I[8]}}else x.parentId=null}else if(ne.x=V.x,ne.y=V.y,ne.z=V.z,this._computeParticleRotation||this.billboard){const $=i.m;P[0]=$[0],P[1]=$[1],P[2]=$[2],P[3]=$[4],P[4]=$[5],P[5]=$[6],P[6]=$[8],P[7]=$[9],P[8]=$[10]}const xe=m[11];for(x.translateFromPivot?xe.setAll(0):xe.copyFrom(H),C=0;C<k.length;C++){F=q+C*3,G=Y+C*4,L=te+C*2;const $=2*C,I=$+1;w.copyFrom(k[C]),this._computeParticleColor&&x.color&&X.copyFrom(x.color),this._computeParticleTexture&&Q.copyFromFloats(N[$],N[I]),this._computeParticleVertex&&this.updateParticleVertex(x,U,C);const Pe=w.x*ue.x-H.x,Ce=w.y*ue.y-H.y,Re=w.z*ue.z-H.z;let De=Pe*P[0]+Ce*P[3]+Re*P[6],z=Pe*P[1]+Ce*P[4]+Re*P[7],we=Pe*P[2]+Ce*P[5]+Re*P[8];De+=xe.x,z+=xe.y,we+=xe.z;const Xe=o[F]=ne.x+b.x*De+y.x*z+T.x*we,qe=o[F+1]=ne.y+b.y*De+y.y*z+T.y*we,Ie=o[F+2]=ne.z+b.z*De+y.z*z+T.z*we;if(this._computeBoundingBox&&(v.minimizeInPlaceFromFloats(Xe,qe,Ie),B.maximizeInPlaceFromFloats(Xe,qe,Ie)),!this._computeParticleVertex){const ee=p[F],Ve=p[F+1],ze=p[F+2],Le=ee*P[0]+Ve*P[3]+ze*P[6],Ne=ee*P[1]+Ve*P[4]+ze*P[7],We=ee*P[2]+Ve*P[5]+ze*P[8];h[F]=b.x*Le+y.x*Ne+T.x*We,h[F+1]=b.y*Le+y.y*Ne+T.y*We,h[F+2]=b.z*Le+y.z*Ne+T.z*We}if(this._computeParticleColor&&x.color){const ee=this._colors32;ee[G]=X.r,ee[G+1]=X.g,ee[G+2]=X.b,ee[G+3]=X.a}if(this._computeParticleTexture){const ee=x.uvs;l[L]=Q.x*(ee.z-ee.x)+ee.x,l[L+1]=Q.y*(ee.w-ee.y)+ee.y}}}else for(x._stillInvisible=!0,C=0;C<k.length;C++){if(F=q+C*3,G=Y+C*4,L=te+C*2,o[F]=o[F+1]=o[F+2]=0,h[F]=h[F+1]=h[F+2]=0,this._computeParticleColor&&x.color){const H=x.color;n[G]=H.r,n[G+1]=H.g,n[G+2]=H.b,n[G+3]=H.a}if(this._computeParticleTexture){const H=x.uvs;l[L]=N[C*2]*(H.z-H.x)+H.x,l[L+1]=N[C*2+1]*(H.w-H.y)+H.y}}if(this._particlesIntersect){const H=x.getBoundingInfo(),dt=H.boundingBox,xe=H.boundingSphere,$=x._modelBoundingInfo;if(!this._bSphereOnly){const we=$.boundingBox.vectors,Xe=m[1],qe=m[2];Xe.setAll(Number.MAX_VALUE),qe.setAll(-Number.MAX_VALUE);for(let Ie=0;Ie<8;Ie++){const ee=we[Ie].x*ue.x,Ve=we[Ie].y*ue.y,ze=we[Ie].z*ue.z,Le=ee*P[0]+Ve*P[3]+ze*P[6],Ne=ee*P[1]+Ve*P[4]+ze*P[7],We=ee*P[2]+Ve*P[5]+ze*P[8],St=V.x+b.x*Le+y.x*Ne+T.x*We,Mt=V.y+b.y*Le+y.y*Ne+T.y*We,vt=V.z+b.z*Le+y.z*Ne+T.z*We;Xe.minimizeInPlaceFromFloats(St,Mt,vt),qe.maximizeInPlaceFromFloats(St,Mt,vt)}dt.reConstruct(Xe,qe,r._worldMatrix)}const I=$.minimum.multiplyToRef(ue,m[1]),Pe=$.maximum.multiplyToRef(ue,m[2]),Ce=Pe.addToRef(I,m[3]).scaleInPlace(.5).addInPlace(ne),Re=Pe.subtractToRef(I,m[4]).scaleInPlace(.5*this._bSphereRadiusFactor),De=Ce.subtractToRef(Re,m[1]),z=Ce.addToRef(Re,m[2]);xe.reConstruct(De,z,r._worldMatrix)}q=F+3,Y=G+4,te=L+2}if(s){if(this._computeParticleColor){const x=r.getVertexBuffer(E.ColorKind);x&&!r.isPickable?x.updateDirectly(n,0):r.updateVerticesData(E.ColorKind,n,!1,!1)}if(this._computeParticleTexture){const x=r.getVertexBuffer(E.UVKind);x&&!r.isPickable?x.updateDirectly(l,0):r.updateVerticesData(E.UVKind,l,!1,!1)}const Z=r.getVertexBuffer(E.PositionKind);if(Z&&!r.isPickable?Z.updateDirectly(o,0):r.updateVerticesData(E.PositionKind,o,!1,!1),!r.areNormalsFrozen||r.isFacetDataEnabled){if(this._computeParticleVertex||r.isFacetDataEnabled){const x=r.isFacetDataEnabled?r.getFacetDataParameters():null;Je.ComputeNormals(o,_,h,x);for(let k=0;k<h.length;k++)p[k]=h[k]}if(!r.areNormalsFrozen){const x=r.getVertexBuffer(E.NormalKind);x&&!r.isPickable?x.updateDirectly(h,0):r.updateVerticesData(E.NormalKind,h,!1,!1)}}if(f){const x=this.depthSortedParticles;x.sort(this._depthSortFunction);const k=x.length;let N=0,P=0;for(let V=0;V<k;V++){const de=x[V],ue=de.indicesLength,ne=de.ind;for(let H=0;H<ue;H++)if(_[N]=g[ne+H],N++,this._pickable&&H%3==0){const xe=this.pickedParticles[P];xe.idx=de.idx,xe.faceId=P,P++}}}if(this._autoFixFaceOrientation){let x=0;for(let k=0;k<this.particles.length;k++){const N=f?this.particles[this.depthSortedParticles[k].idx]:this.particles[k];if(N.scale.x*N.scale.y*N.scale.z<0)for(let V=0;V<N._model._indicesLength;V+=3){const de=g[N._ind+V];_[x+V]=g[N._ind+V+1],_[x+V+1]=de}x+=N._model._indicesLength}}(f||this._autoFixFaceOrientation)&&r.updateIndices(_)}return this._computeBoundingBox&&(r.hasBoundingInfo?r.getBoundingInfo().reConstruct(v,B,r._worldMatrix):r.buildBoundingInfo(v,B,r._worldMatrix)),this._autoUpdateSubMeshes&&this.computeSubMeshes(),this._recomputeInvisibles=!1,this.afterUpdateParticles(e,t,s),this}dispose(){this.mesh.dispose(),this.vars=null,this._positions=null,this._indices=null,this._normals=null,this._uvs=null,this._colors=null,this._indices32=null,this._positions32=null,this._normals32=null,this._fixedNormal32=null,this._uvs32=null,this._colors32=null,this.pickedParticles=null,this.pickedBySubMesh=null,this._materials=null,this._materialIndexes=null,this._indicesByMaterial=null,this._idxOfId=null}pickedParticle(e){if(e.hit){const t=e.subMeshId,s=e.faceId-this.mesh.subMeshes[t].indexStart/3,i=this.pickedBySubMesh;if(i[t]&&i[t][s])return i[t][s]}return null}getParticleById(e){const t=this.particles[e];if(t&&t.id==e)return t;const s=this.particles,i=this._idxOfId[e];if(i!==void 0)return s[i];let a=0;const r=this.nbParticles;for(;a<r;){const n=s[a];if(n.id==e)return n;a++}return null}getParticlesByShapeId(e){const t=[];return this.getParticlesByShapeIdToRef(e,t),t}getParticlesByShapeIdToRef(e,t){t.length=0;for(let s=0;s<this.nbParticles;s++){const i=this.particles[s];i.shapeId==e&&t.push(i)}return this}computeSubMeshes(){if(!this.mesh||!this._multimaterialEnabled)return this;const e=this.depthSortedParticles;if(this.particles.length>0)for(let r=0;r<this.particles.length;r++){const n=this.particles[r];n.materialIndex||(n.materialIndex=0);const o=e[r];o.materialIndex=n.materialIndex,o.ind=n._ind,o.indicesLength=n._model._indicesLength,o.idx=n.idx}this._sortParticlesByMaterial();const t=this._indicesByMaterial,s=this._materialIndexes,i=this.mesh;i.subMeshes=[];const a=i.getTotalVertices();for(let r=0;r<s.length;r++){const n=t[r],o=t[r+1]-n,h=s[r];new ws(h,0,a,n,o,i)}return this}_sortParticlesByMaterial(){const e=[0];this._indicesByMaterial=e;const t=[];this._materialIndexes=t;const s=this.depthSortedParticles;s.sort(this._materialSortFunction);const i=s.length,a=this._indices32,r=this._indices;let n=0,o=0,h=0,l=s[0].materialIndex;t.push(l),this._pickable&&(this.pickedBySubMesh=[[]],this.pickedParticles=this.pickedBySubMesh[0]);for(let _=0;_<i;_++){const g=s[_],p=g.indicesLength,f=g.ind;g.materialIndex!==l&&(l=g.materialIndex,e.push(h),t.push(l),this._pickable&&(n++,this.pickedBySubMesh[n]=[],o=0));let m=0;for(let b=0;b<p;b++){if(a[h]=r[f+b],this._pickable&&b%3==0){const T=this.pickedBySubMesh[n][o];T?(T.idx=g.idx,T.faceId=m):this.pickedBySubMesh[n][o]={idx:g.idx,faceId:m},o++,m++}h++}}return e.push(a.length),this._updatable&&this.mesh.updateIndices(a),this}_setMaterialIndexesById(){this._materialIndexesById={};for(let e=0;e<this._materials.length;e++){const t=this._materials[e].uniqueId;this._materialIndexesById[t]=e}}_filterUniqueMaterialId(e){return e.filter(function(s,i,a){return a.indexOf(s)===i})}_setDefaultMaterial(){return this._defaultMaterial||(this._defaultMaterial=new J(this.name+"DefaultMaterial",this._scene)),this._defaultMaterial}refreshVisibleSize(){return this._isVisibilityBoxLocked||this.mesh.refreshBoundingInfo(),this}setVisibilityBox(e){const t=e/2;this.mesh.buildBoundingInfo(new d(-t,-t,-t),new d(t,t,t))}get isAlwaysVisible(){return this._alwaysVisible}set isAlwaysVisible(e){this._alwaysVisible=e,this.mesh.alwaysSelectAsActiveMesh=e}set isVisibilityBoxLocked(e){this._isVisibilityBoxLocked=e;const t=this.mesh.getBoundingInfo();t.isLocked=e}get isVisibilityBoxLocked(){return this._isVisibilityBoxLocked}set computeParticleRotation(e){this._computeParticleRotation=e}set computeParticleColor(e){this._computeParticleColor=e}set computeParticleTexture(e){this._computeParticleTexture=e}set computeParticleVertex(e){this._computeParticleVertex=e}set computeBoundingBox(e){this._computeBoundingBox=e}set depthSortParticles(e){this._depthSortParticles=e}get computeParticleRotation(){return this._computeParticleRotation}get computeParticleColor(){return this._computeParticleColor}get computeParticleTexture(){return this._computeParticleTexture}get computeParticleVertex(){return this._computeParticleVertex}get computeBoundingBox(){return this._computeBoundingBox}get depthSortParticles(){return this._depthSortParticles}get expandable(){return this._expandable}get multimaterialEnabled(){return this._multimaterialEnabled}get useModelMaterial(){return this._useModelMaterial}get materials(){return this._materials}setMultiMaterial(e){this._materials=this._filterUniqueMaterialId(e),this._setMaterialIndexesById(),this._multimaterial&&this._multimaterial.dispose(),this._multimaterial=new ft(this.name+"MultiMaterial",this._scene);for(let t=0;t<this._materials.length;t++)this._multimaterial.subMaterials.push(this._materials[t]);this.computeSubMeshes(),this.mesh.material=this._multimaterial}get multimaterial(){return this._multimaterial}set multimaterial(e){this._multimaterial=e}get autoUpdateSubMeshes(){return this._autoUpdateSubMeshes}set autoUpdateSubMeshes(e){this._autoUpdateSubMeshes=e}initParticles(){}recycleParticle(e){return e}updateParticle(e){return e}updateParticleVertex(e,t,s){return this}beforeUpdateParticles(e,t,s){}afterUpdateParticles(e,t,s){}}class Tt{get disablePreStep(){return this._prestepType==He.DISABLED}set disablePreStep(e){this._prestepType=e?He.DISABLED:He.TELEPORT}constructor(e,t,s,i){if(this._pluginData=void 0,this._pluginDataInstances=[],this._collisionCBEnabled=!1,this._collisionEndedCBEnabled=!1,this.disableSync=!1,this._isDisposed=!1,this._shape=null,this._prestepType=He.DISABLED,!i)return;const a=i.getPhysicsEngine();if(!a)throw new Error("No Physics Engine available.");if(this._physicsEngine=a,a.getPluginVersion()!=2)throw new Error("Plugin version is incorrect. Expected version 2.");const r=a.getPhysicsPlugin();if(!r)throw new Error("No Physics Plugin available.");this._physicsPlugin=r,e.rotationQuaternion||(e.rotationQuaternion=M.FromEulerAngles(e.rotation.x,e.rotation.y,e.rotation.z)),this.startAsleep=s,this._motionType=t,this.disableSync=t==0;const n=e;n.hasThinInstances?this._physicsPlugin.initBodyInstances(this,t,n):(e.parent&&e.computeWorldMatrix(!0),this._physicsPlugin.initBody(this,t,e.absolutePosition,e.absoluteRotationQuaternion)),this.transformNode=e,e.physicsBody=this,a.addBody(this),this._nodeDisposeObserver=e.onDisposeObservable.add(()=>{this.dispose()})}getClassName(){return"PhysicsBody"}clone(e){const t=new Tt(e,this.getMotionType(),this.startAsleep,this.transformNode.getScene());return t.shape=this.shape,t.setMassProperties(this.getMassProperties()),t.setLinearDamping(this.getLinearDamping()),t.setAngularDamping(this.getAngularDamping()),t}updateBodyInstances(){const e=this.transformNode;e.hasThinInstances&&this._physicsPlugin.updateBodyInstances(this,e)}get numInstances(){return this._pluginDataInstances.length}get motionType(){return this._motionType}set shape(e){this._shape=e,e&&this._physicsPlugin.setShape(this,e)}get shape(){return this._shape}getBoundingBox(){return this._physicsPlugin.getBodyBoundingBox(this)}setEventMask(e,t){this._physicsPlugin.setEventMask(this,e,t)}getEventMask(e){return this._physicsPlugin.getEventMask(this,e)}setMotionType(e,t){this.disableSync=e==0,this._physicsPlugin.setMotionType(this,e,t)}getMotionType(e){return this._physicsPlugin.getMotionType(this,e)}setPrestepType(e){this._prestepType=e}getPrestepType(){return this._prestepType}computeMassProperties(e){return this._physicsPlugin.computeMassProperties(this,e)}setMassProperties(e,t){this._physicsPlugin.setMassProperties(this,e,t)}getMassProperties(e){return this._physicsPlugin.getMassProperties(this,e)}setLinearDamping(e,t){this._physicsPlugin.setLinearDamping(this,e,t)}getLinearDamping(e){return this._physicsPlugin.getLinearDamping(this,e)}setAngularDamping(e,t){this._physicsPlugin.setAngularDamping(this,e,t)}getAngularDamping(e){return this._physicsPlugin.getAngularDamping(this,e)}setLinearVelocity(e,t){this._physicsPlugin.setLinearVelocity(this,e,t)}getLinearVelocityToRef(e,t){this._physicsPlugin.getLinearVelocityToRef(this,e,t)}getLinearVelocity(e){const t=new d;return this.getLinearVelocityToRef(t,e),t}setAngularVelocity(e,t){this._physicsPlugin.setAngularVelocity(this,e,t)}getAngularVelocityToRef(e,t){this._physicsPlugin.getAngularVelocityToRef(this,e,t)}getAngularVelocity(e){const t=new d;return this.getAngularVelocityToRef(t,e),t}applyImpulse(e,t,s){this._physicsPlugin.applyImpulse(this,e,t,s)}applyAngularImpulse(e,t){this._physicsPlugin.applyAngularImpulse(this,e,t)}applyForce(e,t,s){this._physicsPlugin.applyForce(this,e,t,s)}getGeometry(){return this._physicsPlugin.getBodyGeometry(this)}getCollisionObservable(){return this._physicsPlugin.getCollisionObservable(this)}getCollisionEndedObservable(){return this._physicsPlugin.getCollisionEndedObservable(this)}setCollisionCallbackEnabled(e){this._collisionCBEnabled=e,this._physicsPlugin.setCollisionCallbackEnabled(this,e)}setCollisionEndedCallbackEnabled(e){this._collisionEndedCBEnabled=e,this._physicsPlugin.setCollisionEndedCallbackEnabled(this,e)}getObjectCenterWorld(e){const t=new d;return this.getObjectCenterWorldToRef(t,e)}getObjectCenterWorldToRef(e,t){var s;if(((s=this._pluginDataInstances)==null?void 0:s.length)>0){const i=t||0,a=this.transformNode._thinInstanceDataStorage.matrixData;a&&e.set(a[i*16+12],a[i*16+13],a[i*16+14])}else e.copyFrom(this.transformNode.position);return e}addConstraint(e,t,s,i){this._physicsPlugin.addConstraint(this,e,t,s,i)}syncWithBone(e,t,s,i,a,r){const n=this.transformNode;if(n.rotationQuaternion)if(a){const l=c.Quaternion[0];e.getRotationQuaternionToRef(1,t,l),l.multiplyToRef(a,n.rotationQuaternion)}else e.getRotationQuaternionToRef(1,t,n.rotationQuaternion);const o=c.Vector3[0],h=c.Vector3[1];r||(r=c.Vector3[2],r.x=0,r.y=1,r.z=0),e.getDirectionToRef(r,t,h),e.getAbsolutePositionToRef(t,o),i==null&&s&&(i=s.length()),i!=null&&(o.x+=h.x*i,o.y+=h.y*i,o.z+=h.z*i),n.setAbsolutePosition(o)}iterateOverAllInstances(e){var t;if(((t=this._pluginDataInstances)==null?void 0:t.length)>0)for(let s=0;s<this._pluginDataInstances.length;s++)e(this,s);else e(this,void 0)}setGravityFactor(e,t){this._physicsPlugin.setGravityFactor(this,e,t)}getGravityFactor(e){return this._physicsPlugin.getGravityFactor(this,e)}setTargetTransform(e,t,s){this._physicsPlugin.setTargetTransform(this,e,t,s)}get isDisposed(){return this._isDisposed}dispose(){this._isDisposed||(this._collisionCBEnabled&&this.setCollisionCallbackEnabled(!1),this._collisionEndedCBEnabled&&this.setCollisionEndedCallbackEnabled(!1),this._nodeDisposeObserver&&(this.transformNode.onDisposeObservable.remove(this._nodeDisposeObserver),this._nodeDisposeObserver=null),this._physicsEngine.removeBody(this),this._physicsPlugin.removeBody(this),this._physicsPlugin.disposeBody(this),this.transformNode.physicsBody=null,this._pluginData=null,this._pluginDataInstances.length=0,this._isDisposed=!0,this.shape=null)}}class ke{constructor(e,t,s){if(this._pluginData=void 0,!s)throw new Error("Missing scene parameter for constraint constructor.");const i=s.getPhysicsEngine();if(!i)throw new Error("No Physics Engine available.");if(i.getPluginVersion()!=2)throw new Error("Plugin version is incorrect. Expected version 2.");const a=i.getPhysicsPlugin();if(!a)throw new Error("No Physics Plugin available.");this._physicsPlugin=a,this._options=t,this._type=e}get type(){return this._type}get options(){return this._options}set isEnabled(e){this._physicsPlugin.setEnabled(this,e)}get isEnabled(){return this._physicsPlugin.getEnabled(this)}set isCollisionsEnabled(e){this._physicsPlugin.setCollisionsEnabled(this,e)}get isCollisionsEnabled(){return this._physicsPlugin.getCollisionsEnabled(this)}getBodiesUsingConstraint(){return this._physicsPlugin.getBodiesUsingConstraint(this)}dispose(){this._physicsPlugin.disposeConstraint(this)}}class Xa{}class Ri extends ke{constructor(e,t,s){super(7,e,s),this.limits=t}setAxisFriction(e,t){this._physicsPlugin.setAxisFriction(this,e,t)}getAxisFriction(e){return this._physicsPlugin.getAxisFriction(this,e)}setAxisMode(e,t){this._physicsPlugin.setAxisMode(this,e,t)}getAxisMode(e){return this._physicsPlugin.getAxisMode(this,e)}setAxisMinLimit(e,t){this._physicsPlugin.setAxisMinLimit(this,e,t)}getAxisMinLimit(e){return this._physicsPlugin.getAxisMinLimit(this,e)}setAxisMaxLimit(e,t){this._physicsPlugin.setAxisMaxLimit(this,e,t)}getAxisMaxLimit(e){return this._physicsPlugin.getAxisMaxLimit(this,e)}setAxisMotorType(e,t){this._physicsPlugin.setAxisMotorType(this,e,t)}getAxisMotorType(e){return this._physicsPlugin.getAxisMotorType(this,e)}setAxisMotorTarget(e,t){this._physicsPlugin.setAxisMotorTarget(this,e,t)}getAxisMotorTarget(e){return this._physicsPlugin.getAxisMotorTarget(this,e)}setAxisMotorMaxForce(e,t){this._physicsPlugin.setAxisMotorMaxForce(this,e,t)}getAxisMotorMaxForce(e){return this._physicsPlugin.getAxisMotorMaxForce(this,e)}}class qa extends ke{constructor(e,t,s,i,a){super(1,{pivotA:e,pivotB:t,axisA:s,axisB:i},a)}}class Za extends ke{constructor(e,t){super(2,{maxDistance:e},t)}}class Ya extends ke{constructor(e,t,s,i,a){super(3,{pivotA:e,pivotB:t,axisA:s,axisB:i},a)}}class Ka extends ke{constructor(e,t,s,i,a){super(4,{pivotA:e,pivotB:t,axisA:s,axisB:i},a)}}class $a extends ke{constructor(e,t,s,i,a){super(5,{pivotA:e,pivotB:t,axisA:s,axisB:i},a)}}class Ja extends ke{constructor(e,t,s,i,a){super(6,{pivotA:e,pivotB:t,axisA:s,axisB:i},a)}}class er extends Ri{constructor(e,t,s,i,a,r,n,o,h){super({pivotA:e,pivotB:t,axisA:s,axisB:i},[{axis:6,minLimit:a,maxLimit:r,stiffness:n,damping:o}],h)}}class Di{constructor(e,t,s={mass:0},i){if(this.transformNode=e,this.type=t,this._options=s,this._scene=i,this._disposeShapeWhenDisposed=!0,!this.transformNode){D.Error("No object was provided. A physics object is obligatory");return}const a=e;if(this.transformNode.parent&&this._options.mass!==0&&a.hasThinInstances&&D.Warn("A physics body has been created for an object which has a parent and thin instances. Babylon physics currently works in local space so unexpected issues may occur."),!this._scene&&e.getScene&&(this._scene=e.getScene()),!this._scene)return;this._options.mass=s.mass===void 0?0:s.mass,this._options.friction=s.friction===void 0?.2:s.friction,this._options.restitution=s.restitution===void 0?.2:s.restitution;const r=this._options.mass===0?0:2,n=this._options.startAsleep??!1;this.body=new Tt(e,r,n,this._scene),this._addSizeOptions(),t.getClassName&&t.getClassName()==="PhysicsShape"?(this.shape=t,this._disposeShapeWhenDisposed=!1):this.shape=new Qt({type:t,parameters:this._options},this._scene),this._options.isTriggerShape&&(this.shape.isTrigger=!0),this.material={friction:this._options.friction,restitution:this._options.restitution},this.body.shape=this.shape,this.shape.material=this.material,this.body.setMassProperties({mass:this._options.mass}),this._nodeDisposeObserver=this.transformNode.onDisposeObservable.add(()=>{this.dispose()})}_getObjectBoundingBox(){return this.transformNode.getRawBoundingInfo?this.transformNode.getRawBoundingInfo().boundingBox:new bt(new d(-.5,-.5,-.5),new d(.5,.5,.5))}_hasVertices(e){return(e==null?void 0:e.getTotalVertices())>0}_addSizeOptions(){this.transformNode.computeWorldMatrix(!0);const e=this._getObjectBoundingBox(),t=c.Vector3[0];t.copyFrom(e.extendSize),t.scaleInPlace(2),t.multiplyInPlace(this.transformNode.absoluteScaling),t.x=Math.abs(t.x),t.y=Math.abs(t.y),t.z=Math.abs(t.z);const s=c.Vector3[1];if(s.copyFrom(e.minimum),s.multiplyInPlace(this.transformNode.absoluteScaling),!this._options.center){const i=new d;i.copyFrom(e.center),i.multiplyInPlace(this.transformNode.absoluteScaling),this._options.center=i}switch(this.type){case 0:!this._options.radius&&Dt(t.x,t.y,1e-4)&&Dt(t.x,t.z,1e-4)?this._options.radius=t.x/2:this._options.radius||(D.Warn("Non uniform scaling is unsupported for sphere shapes. Setting the radius to the biggest bounding box extent."),this._options.radius=Math.max(t.x,t.y,t.z)/2);break;case 1:{const i=t.x/2;this._options.radius=this._options.radius??i,this._options.pointA=this._options.pointA??new d(0,s.y+i,0),this._options.pointB=this._options.pointB??new d(0,s.y+t.y-i,0)}break;case 2:{const i=t.x/2;this._options.radius=this._options.radius??i,this._options.pointA=this._options.pointA??new d(0,s.y,0),this._options.pointB=this._options.pointB??new d(0,s.y+t.y,0)}break;case 6:case 4:case 7:if(!this._options.mesh&&this._hasVertices(this.transformNode))this._options.mesh=this.transformNode;else if(!this._options.mesh||!this._hasVertices(this._options.mesh))throw new Error("No valid mesh was provided for mesh or convex hull shape parameter. Please provide a mesh with valid geometry (number of vertices greater than 0).");break;case 3:this._options.extents=this._options.extents??new d(t.x,t.y,t.z),this._options.rotation=this._options.rotation??M.Identity();break}}dispose(){this._nodeDisposeObserver&&(this.body.transformNode.onDisposeObservable.remove(this._nodeDisposeObserver),this._nodeDisposeObserver=null),this.body.dispose(),this._disposeShapeWhenDisposed&&this.shape.dispose()}}class tr{}class sr{constructor(e,t,s){this._boxConfigs=new Array,this._constraints=new Array,this._bones=new Array,this._initialRotation=new Array,this._initialRotation2=new Array,this._boneNames=[],this._transforms=new Array,this._aggregates=new Array,this._ragdollMode=!1,this._rootBoneName="",this._rootBoneIndex=-1,this._mass=10,this._restitution=0,this.pauseSync=!1,this._defaultJoint=3,this._defaultJointMin=-90,this._defaultJointMax=90,this._skeleton=e,this._scene=e.getScene(),this._rootTransformNode=t,this._config=s,this._boxConfigs=[],this._putBoxesInBoneCenter=!1,this._defaultJoint=3,this._init()}getConstraints(){return this._constraints}getAggregate(e){return e<0||e>=this._aggregates.length?this._aggregates[this._rootBoneIndex]:this._aggregates[e]}_createColliders(){this._rootTransformNode.computeWorldMatrix(),this._skeleton.computeAbsoluteMatrices(!0),this._skeleton.prepare(!0);const e=this._config;for(let t=0;t<e.length;t++){const s=e[t].bone!==void 0?[e[t].bone]:e[t].bones;for(let i=0;i<s.length;i++){const a=this._skeleton.bones[this._skeleton.getBoneIndexByName(s[i])];if(a==null)return;const r={width:this._config[t].width,depth:this._config[t].depth,height:this._config[t].height,size:this._config[t].size};r.width=r.width??r.size,r.depth=r.depth??r.size,r.height=r.height??r.size;const n=new ie(s[i]+"_transform",this._scene);r.joint=e[t].joint!==void 0?e[t].joint:this._defaultJoint,r.rotationAxis=e[t].rotationAxis!==void 0?e[t].rotationAxis:$e.X,r.min=e[t].min!==void 0?e[t].min:this._defaultJointMin,r.max=e[t].max!==void 0?e[t].max:this._defaultJointMax;let o=0;e[t].putBoxInBoneCenter!==void 0&&e[t].putBoxInBoneCenter||this._putBoxesInBoneCenter?(a.length===void 0&&D.Log("The length property is not defined for bone "+a.name),o=a.length/2):e[t].boxOffset!==void 0&&(o=e[t].boxOffset),r.boxOffset=o;const h=e[t].boneOffsetAxis!==void 0?e[t].boneOffsetAxis:$e.Y,l=a.getDirection(h,this._rootTransformNode);r.boneOffsetAxis=h,n.position=a.getAbsolutePosition(this._rootTransformNode).add(l.scale(o));const _=e[t].mass!==void 0?e[t].mass:this._mass,g=e[t].restitution!==void 0?e[t].restitution:this._restitution,p=new Di(n,3,{mass:_,restitution:g,friction:.6,extents:new d(r.width,r.height,r.depth)},this._scene);p.body.setCollisionCallbackEnabled(!0),p.body.disablePreStep=!1,p.body.setMotionType(1),this._aggregates.push(p),this._bones.push(a),this._boneNames.push(a.name),this._transforms.push(n),this._boxConfigs.push(r),this._initialRotation.push(a.getRotationQuaternion(1,this._rootTransformNode)),this._initialRotation2.push(a.getRotationQuaternion(1))}}}_initJoints(){this._rootTransformNode.computeWorldMatrix();for(let e=0;e<this._bones.length;e++){if(e==this._rootBoneIndex)continue;const t=this._findNearestParent(e);if(t==null){D.Warn("Couldn't find a nearest parent bone in the configs for bone called "+this._boneNames[e]);return}const s=this._boneNames.indexOf(t.name);let i=this._bones[e].getAbsolutePosition(this._rootTransformNode).subtract(this._transforms[s].position);const a=this._transforms[s].computeWorldMatrix(),r=R.Invert(a);i=d.TransformCoordinates(this._bones[e].getAbsolutePosition(this._rootTransformNode),r);const n=this._bones[e].getAbsolutePosition(this._rootTransformNode),o=this._transforms[e].position.clone(),h=n.subtract(o),l=this._boxConfigs[e].joint??this._defaultJoint,_=new ke(l,{pivotA:i,pivotB:h,axisA:this._boxConfigs[e].rotationAxis,axisB:this._boxConfigs[e].rotationAxis,collision:!1},this._scene);this._aggregates[s].body.addConstraint(this._aggregates[e].body,_),_.isEnabled=!1,this._constraints.push(_)}}_syncBonesToPhysics(){const e=this._rootTransformNode.getWorldMatrix();for(let t=0;t<this._bones.length;t++){const s=this._aggregates[t].transformNode,i=this._bones[t].getAbsolutePosition();d.TransformCoordinatesToRef(i,e,s.position),this._bones[t].getDirectionToRef(this._boxConfigs[t].boneOffsetAxis,this._rootTransformNode,c.Vector3[0]),c.Vector3[0].scaleInPlace(this._boxConfigs[t].boxOffset??0),s.position.addInPlace(c.Vector3[0]),this._setBoneOrientationToBody(t)}}_setBoneOrientationToBody(e){const t=this._aggregates[e].transformNode,s=this._bones[e];this._initialRotation[e].conjugateToRef(c.Quaternion[0]),s.getRotationQuaternionToRef(1,this._rootTransformNode,c.Quaternion[1]),c.Quaternion[1].multiplyToRef(c.Quaternion[0],t.rotationQuaternion),t.rotationQuaternion.normalize()}_syncBonesAndBoxes(){if(!this.pauseSync)if(this._ragdollMode){this._setBodyOrientationToBone(this._rootBoneIndex);const e=this._aggregates[this._rootBoneIndex].body.transformNode.position;this._rootTransformNode.getWorldMatrix().invertToRef(c.Matrix[0]),d.TransformCoordinatesToRef(e,c.Matrix[0],c.Vector3[0]),this._bones[this._rootBoneIndex].setAbsolutePosition(c.Vector3[0]);for(let t=0;t<this._bones.length;t++)t!=this._rootBoneIndex&&this._setBodyOrientationToBone(t)}else this._syncBonesToPhysics()}_setBodyOrientationToBone(e){var a,r;const t=this._rootTransformNode.rotationQuaternion??M.FromEulerAngles(this._rootTransformNode.rotation.x,this._rootTransformNode.rotation.y,this._rootTransformNode.rotation.z),s=this._initialRotation2[e],i=(r=(a=this._aggregates[e].body)==null?void 0:a.transformNode)==null?void 0:r.rotationQuaternion;t.multiplyToRef(s,c.Quaternion[1]),i.multiplyToRef(c.Quaternion[1],c.Quaternion[0]),this._bones[e].setRotationQuaternion(c.Quaternion[0],1,this._rootTransformNode)}_defineRootBone(){const e=this._skeleton.getChildren();return e.length!=1?(D.Log("Ragdoll creation failed: there can only be one root in the skeleton."),!1):(this._rootBoneName=e[0].name,this._rootBoneIndex=this._boneNames.indexOf(this._rootBoneName),this._rootBoneIndex==-1?(D.Log("Ragdoll creation failed: the array boneNames doesn't have the root bone. The root bone is "+this._skeleton.getChildren()),!1):!0)}_findNearestParent(e){let t=this._bones[e].getParent();do{if(t!=null&&this._boneNames.includes(t.name))break;t=t==null?void 0:t.getParent()}while(t!=null);return t}_init(){this._createColliders(),this._defineRootBone()&&(this._initJoints(),this._scene.registerBeforeRender(()=>{this._syncBonesAndBoxes()}),this._syncBonesToPhysics())}ragdoll(){this._ragdollMode=!0,this._skeleton.bones.forEach(e=>{e.linkTransformNode(null)});for(let e=0;e<this._constraints.length;e++)this._constraints[e].isEnabled=!0;for(let e=0;e<this._aggregates.length;e++)this._aggregates[e].body.setMotionType(2)}dispose(){this._aggregates.forEach(e=>{e.dispose()})}}class wi{constructor(e,t,s){this._vertices=[],this._indices=[],this._isRightHanded=s.useRightHandedSystem,this._collectIndices=t}addNodeMeshes(e,t){e.computeWorldMatrix(!0);const s=c.Matrix[0];if(R.ScalingToRef(e.absoluteScaling.x,e.absoluteScaling.y,e.absoluteScaling.z,s),e instanceof fe?this._addMesh(e,s):e instanceof wt&&this._addMesh(e.sourceMesh,s),t){const i=c.Matrix[1];e.computeWorldMatrix().invertToRef(i);const a=c.Matrix[2];i.multiplyToRef(s,a),e.getChildMeshes(!1).filter(n=>!n.physicsBody).forEach(n=>{const o=n.computeWorldMatrix(),h=c.Matrix[3];o.multiplyToRef(a,h),n instanceof fe?this._addMesh(n,h):n instanceof wt&&this._addMesh(n.sourceMesh,h)})}}_addMesh(e,t){const s=e.getVerticesData(E.PositionKind)||[],i=s.length/3,a=this._vertices.length;for(let r=0;r<i;r++){const n=new d(s[r*3+0],s[r*3+1],s[r*3+2]);this._vertices.push(d.TransformCoordinates(n,t))}if(this._collectIndices){const r=e.getIndices();if(r)for(let n=0;n<r.length;n+=3)this._isRightHanded?(this._indices.push(r[n+0]+a),this._indices.push(r[n+1]+a),this._indices.push(r[n+2]+a)):(this._indices.push(r[n+2]+a),this._indices.push(r[n+1]+a),this._indices.push(r[n+0]+a))}}getVertices(e){const t=this._vertices.length*3,i=t*4,a=e._malloc(i),r=new Float32Array(e.HEAPU8.buffer,a,t);for(let n=0;n<this._vertices.length;n++)r[n*3+0]=this._vertices[n].x,r[n*3+1]=this._vertices[n].y,r[n*3+2]=this._vertices[n].z;return{offset:a,numObjects:t}}freeBuffer(e,t){e._free(t.offset)}getTriangles(e){const s=this._indices.length*4,i=e._malloc(s),a=new Int32Array(e.HEAPU8.buffer,i,this._indices.length);for(let r=0;r<this._indices.length;r++)a[r]=this._indices[r];return{offset:i,numObjects:this._indices.length}}}class zt{constructor(e){this.hpBodyId=e,this.userMassProps={centerOfMass:void 0,mass:void 0,inertia:void 0,inertiaOrientation:void 0}}}class Lt{constructor(){this.bodyId=BigInt(0),this.position=new d,this.normal=new d}}class Nt{constructor(){this.contactOnA=new Lt,this.contactOnB=new Lt,this.impulseApplied=0,this.type=0}static readToRef(e,t,s){const i=new Int32Array(e,t),a=new Float32Array(e,t),r=2;s.contactOnA.bodyId=BigInt(i[r]),s.contactOnA.position.set(a[r+8],a[r+9],a[r+10]),s.contactOnA.normal.set(a[r+11],a[r+12],a[r+13]);const n=18;s.contactOnB.bodyId=BigInt(i[n]),s.contactOnB.position.set(a[n+8],a[n+9],a[n+10]),s.contactOnB.normal.set(a[n+11],a[n+12],a[n+13]),s.impulseApplied=a[n+13+3],s.type=i[0]}}class Wt{constructor(){this.bodyIdA=BigInt(0),this.bodyIdB=BigInt(0),this.type=0}static readToRef(e,t,s){const i=new Int32Array(e,t);s.type=i[0],s.bodyIdA=BigInt(i[2]),s.bodyIdB=BigInt(i[6])}}class ir{constructor(e=!0,t=HK){if(this._useDeltaForWorldStep=e,this._hknp={},this.name="HavokPlugin",this._fixedTimeStep=1/60,this._tmpVec3=Is(3,d.Zero),this._bodies=new Map,this._shapes=new Map,this._bodyCollisionObservable=new Map,this._constraintToBodyIdPair=new Map,this._bodyCollisionEndedObservable=new Map,this.onCollisionObservable=new W,this.onCollisionEndedObservable=new W,this.onTriggerCollisionObservable=new W,typeof t=="function"){D.Error("Havok is not ready. Please make sure you await HK() before using the plugin.");return}else this._hknp=t;if(!this.isSupported()){D.Error("Havok is not available. Please make sure you included the js file.");return}this.world=this._hknp.HP_World_Create()[1],this._queryCollector=this._hknp.HP_QueryCollector_Create(1)[1]}isSupported(){return this._hknp!==void 0}setGravity(e){this._hknp.HP_World_SetGravity(this.world,this._bVecToV3(e))}setTimeStep(e){this._fixedTimeStep=e}getTimeStep(){return this._fixedTimeStep}executeStep(e,t){for(const i of t)i.disablePreStep||this.setPhysicsBodyTransformation(i,i.transformNode);const s=this._useDeltaForWorldStep?e:this._fixedTimeStep;this._hknp.HP_World_SetIdealStepTime(this.world,s),this._hknp.HP_World_Step(this.world,s),this._bodyBuffer=this._hknp.HP_World_GetBodyBuffer(this.world)[1];for(const i of t)i.disableSync||this.sync(i);this._notifyCollisions(),this._notifyTriggers()}getPluginVersion(){return 2}setVelocityLimits(e,t){this._hknp.HP_World_SetSpeedLimit(this.world,e,t)}getMaxLinearVelocity(){return this._hknp.HP_World_GetSpeedLimit(this.world)[1]}getMaxAngularVelocity(){return this._hknp.HP_World_GetSpeedLimit(this.world)[2]}initBody(e,t,s,i){e._pluginData=new zt(this._hknp.HP_Body_Create()[1]),this._internalSetMotionType(e._pluginData,t);const a=[this._bVecToV3(s),this._bQuatToV4(i)];this._hknp.HP_Body_SetQTransform(e._pluginData.hpBodyId,a),this._hknp.HP_World_AddBody(this.world,e._pluginData.hpBodyId,e.startAsleep),this._bodies.set(e._pluginData.hpBodyId[0],{body:e,index:0})}removeBody(e){if(e._pluginDataInstances&&e._pluginDataInstances.length>0)for(const t of e._pluginDataInstances)this._bodyCollisionObservable.delete(t.hpBodyId[0]),this._hknp.HP_World_RemoveBody(this.world,t.hpBodyId),this._bodies.delete(t.hpBodyId[0]);e._pluginData&&(this._bodyCollisionObservable.delete(e._pluginData.hpBodyId[0]),this._hknp.HP_World_RemoveBody(this.world,e._pluginData.hpBodyId),this._bodies.delete(e._pluginData.hpBodyId[0]))}initBodyInstances(e,t,s){var r;const i=((r=s._thinInstanceDataStorage)==null?void 0:r.instancesCount)??0,a=s._thinInstanceDataStorage.matrixData;a&&(this._createOrUpdateBodyInstances(e,t,a,0,i,!1),e._pluginDataInstances.forEach((n,o)=>{this._bodies.set(n.hpBodyId[0],{body:e,index:o})}))}_createOrUpdateBodyInstances(e,t,s,i,a,r){const n=c.Quaternion[0],o=R.Identity();for(let h=i;h<a;h++){const l=[s[h*16+12],s[h*16+13],s[h*16+14]];let _;r?_=e._pluginDataInstances[h].hpBodyId:_=this._hknp.HP_Body_Create()[1],o.setRowFromFloats(0,s[h*16+0],s[h*16+1],s[h*16+2],0),o.setRowFromFloats(1,s[h*16+4],s[h*16+5],s[h*16+6],0),o.setRowFromFloats(2,s[h*16+8],s[h*16+9],s[h*16+10],0),M.FromRotationMatrixToRef(o,n);const g=[l,[n.x,n.y,n.z,n.w]];if(this._hknp.HP_Body_SetQTransform(_,g),!r){const p=new zt(_);e._pluginDataInstances.length&&(p.userMassProps=e._pluginDataInstances[0].userMassProps),this._internalSetMotionType(p,t),this._internalUpdateMassProperties(p),e._pluginDataInstances.push(p),this._hknp.HP_World_AddBody(this.world,_,e.startAsleep),p.worldTransformOffset=this._hknp.HP_Body_GetWorldTransformOffset(_)[1]}}}updateBodyInstances(e,t){var n,o;const s=((n=t._thinInstanceDataStorage)==null?void 0:n.instancesCount)??0,i=t._thinInstanceDataStorage.matrixData;if(!i)return;const a=e._pluginDataInstances.length,r=this.getMotionType(e);if(s>a){this._createOrUpdateBodyInstances(e,r,i,a,s,!1);const h=this._hknp.HP_Body_GetShape(e._pluginDataInstances[0].hpBodyId)[1];h[0]||(h[0]=(o=e.shape)==null?void 0:o._pluginData[0]);for(let l=a;l<s;l++)this._hknp.HP_Body_SetShape(e._pluginDataInstances[l].hpBodyId,h),this._internalUpdateMassProperties(e._pluginDataInstances[l]),this._bodies.set(e._pluginDataInstances[l].hpBodyId[0],{body:e,index:l})}else if(s<a){const h=a-s;for(let l=0;l<h;l++){const _=e._pluginDataInstances.pop();this._bodies.delete(_.hpBodyId[0]),this._hknp.HP_World_RemoveBody(this.world,_.hpBodyId),this._hknp.HP_Body_Release(_.hpBodyId)}this._createOrUpdateBodyInstances(e,r,i,0,s,!0)}}sync(e){this.syncTransform(e,e.transformNode)}syncTransform(e,t){var s;if(e._pluginDataInstances.length){const i=t,a=i._thinInstanceDataStorage.matrixData;if(!a)return;const r=e._pluginDataInstances.length;for(let n=0;n<r;n++){const o=e._pluginDataInstances[n].worldTransformOffset,h=new Float32Array(this._hknp.HEAPU8.buffer,this._bodyBuffer+o,16),l=n*16;for(let _=0;_<15;_++)(_&3)!=3&&(a[l+_]=h[_]);a[l+15]=1}i.thinInstanceBufferUpdated("matrix")}else try{const i=this._hknp.HP_Body_GetQTransform(e._pluginData.hpBodyId)[1],a=i[0],r=i[1],n=c.Quaternion[0];n.set(r[0],r[1],r[2],r[3]);const o=t.parent;if(o&&!o.getWorldMatrix().isIdentity()){o.computeWorldMatrix(!0),c.Vector3[1].copyFrom(t.scaling),n.normalize();const h=c.Matrix[0],l=c.Vector3[0];l.copyFromFloats(a[0],a[1],a[2]),R.ComposeToRef(t.absoluteScaling,n,l,h);const _=c.Matrix[1];o.getWorldMatrix().invertToRef(_);const g=c.Matrix[2];h.multiplyToRef(_,g),g.decomposeToTransformNode(t),(s=t.rotationQuaternion)==null||s.normalize(),t.scaling.copyFrom(c.Vector3[1])}else t.position.set(a[0],a[1],a[2]),t.rotationQuaternion?t.rotationQuaternion.copyFrom(n):n.toEulerAnglesToRef(t.rotation)}catch(i){D.Error(`Syncing transform failed for node ${t.name}: ${i.message}...`)}}setShape(e,t){var r,n;const s=t&&t._pluginData?t._pluginData:BigInt(0);if(!(e.transformNode instanceof fe)||!((r=e.transformNode._thinInstanceDataStorage)!=null&&r.matrixData)){this._hknp.HP_Body_SetShape(e._pluginData.hpBodyId,s),this._internalUpdateMassProperties(e._pluginData);return}const a=((n=e.transformNode._thinInstanceDataStorage)==null?void 0:n.instancesCount)??0;for(let o=0;o<a;o++)this._hknp.HP_Body_SetShape(e._pluginDataInstances[o].hpBodyId,s),this._internalUpdateMassProperties(e._pluginDataInstances[o])}_getPluginReference(e,t){var s;return(s=e._pluginDataInstances)!=null&&s.length?e._pluginDataInstances[t??0]:e._pluginData}getShape(e){const t=this._getPluginReference(e),s=this._hknp.HP_Body_GetShape(t.hpBodyId)[1];if(s!=0){const i=e.transformNode.getScene();return new Qt({pluginData:s},i)}return null}getShapeType(e){return e.type?e.type:this._hknp.HP_Shape_GetType(e._pluginData)}setEventMask(e,t,s){this._applyToBodyOrInstances(e,i=>{this._hknp.HP_Body_SetEventMask(i.hpBodyId,t)},s)}getEventMask(e,t){const s=this._getPluginReference(e,t);return this._hknp.HP_Body_GetEventMask(s.hpBodyId)[1]}_fromMassPropertiesTuple(e){return{centerOfMass:d.FromArray(e[0]),mass:e[1],inertia:d.FromArray(e[2]),inertiaOrientation:M.FromArray(e[3])}}_internalUpdateMassProperties(e){const t=this._internalComputeMassProperties(e),s=e.userMassProps;s.centerOfMass&&(t[0]=s.centerOfMass.asArray()),s.mass!=null&&(t[1]=s.mass),s.inertia&&(t[2]=s.inertia.asArray()),s.inertiaOrientation&&(t[3]=s.inertiaOrientation.asArray()),this._hknp.HP_Body_SetMassProperties(e.hpBodyId,t)}_internalSetMotionType(e,t){switch(t){case 0:this._hknp.HP_Body_SetMotionType(e.hpBodyId,this._hknp.MotionType.STATIC);break;case 1:this._hknp.HP_Body_SetMotionType(e.hpBodyId,this._hknp.MotionType.KINEMATIC);break;case 2:this._hknp.HP_Body_SetMotionType(e.hpBodyId,this._hknp.MotionType.DYNAMIC);break}}setMotionType(e,t,s){this._applyToBodyOrInstances(e,i=>{this._internalSetMotionType(i,t)},s)}getMotionType(e,t){const s=this._getPluginReference(e,t),i=this._hknp.HP_Body_GetMotionType(s.hpBodyId)[1];switch(i){case this._hknp.MotionType.STATIC:return 0;case this._hknp.MotionType.KINEMATIC:return 1;case this._hknp.MotionType.DYNAMIC:return 2}throw new Error("Unknown motion type: "+i)}setActivationControl(e,t){switch(t){case 1:this._hknp.HP_Body_SetActivationControl(e._pluginData.hpBodyId,this._hknp.ActivationControl.ALWAYS_ACTIVE);break;case 2:this._hknp.HP_Body_SetActivationControl(e._pluginData.hpBodyId,this._hknp.ActivationControl.ALWAYS_INACTIVE);break;case 0:this._hknp.HP_Body_SetActivationControl(e._pluginData.hpBodyId,this._hknp.ActivationControl.SIMULATION_CONTROLLED);break}}_internalComputeMassProperties(e){const t=this._hknp.HP_Body_GetShape(e.hpBodyId);if(t[0]==this._hknp.Result.RESULT_OK){const s=this._hknp.HP_Shape_BuildMassProperties(t[1]);if(s[0]==this._hknp.Result.RESULT_OK)return s[1]}return[[0,0,0],1,[1,1,1],[0,0,0,1]]}computeMassProperties(e,t){const s=this._getPluginReference(e,t),i=this._internalComputeMassProperties(s);return this._fromMassPropertiesTuple(i)}setMassProperties(e,t,s){this._applyToBodyOrInstances(e,i=>{i.userMassProps=t,this._internalUpdateMassProperties(i)},s)}getMassProperties(e,t){const s=this._getPluginReference(e,t),i=this._hknp.HP_Body_GetMassProperties(s.hpBodyId)[1];return this._fromMassPropertiesTuple(i)}setLinearDamping(e,t,s){this._applyToBodyOrInstances(e,i=>{this._hknp.HP_Body_SetLinearDamping(i.hpBodyId,t)},s)}getLinearDamping(e,t){const s=this._getPluginReference(e,t);return this._hknp.HP_Body_GetLinearDamping(s.hpBodyId)[1]}setAngularDamping(e,t,s){this._applyToBodyOrInstances(e,i=>{this._hknp.HP_Body_SetAngularDamping(i.hpBodyId,t)},s)}getAngularDamping(e,t){const s=this._getPluginReference(e,t);return this._hknp.HP_Body_GetAngularDamping(s.hpBodyId)[1]}setLinearVelocity(e,t,s){this._applyToBodyOrInstances(e,i=>{this._hknp.HP_Body_SetLinearVelocity(i.hpBodyId,this._bVecToV3(t))},s)}getLinearVelocityToRef(e,t,s){const i=this._getPluginReference(e,s),a=this._hknp.HP_Body_GetLinearVelocity(i.hpBodyId)[1];this._v3ToBvecRef(a,t)}_applyToBodyOrInstances(e,t,s){var i;if(((i=e._pluginDataInstances)==null?void 0:i.length)>0&&s===void 0)for(let a=0;a<e._pluginDataInstances.length;a++)t(e._pluginDataInstances[a]);else t(this._getPluginReference(e,s))}applyImpulse(e,t,s,i){this._applyToBodyOrInstances(e,a=>{this._hknp.HP_Body_ApplyImpulse(a.hpBodyId,this._bVecToV3(s),this._bVecToV3(t))},i)}applyAngularImpulse(e,t,s){this._applyToBodyOrInstances(e,i=>{this._hknp.HP_Body_ApplyAngularImpulse(i.hpBodyId,this._bVecToV3(t))},s)}applyForce(e,t,s,i){t.scaleToRef(this.getTimeStep(),this._tmpVec3[0]),this.applyImpulse(e,this._tmpVec3[0],s,i)}setAngularVelocity(e,t,s){this._applyToBodyOrInstances(e,i=>{this._hknp.HP_Body_SetAngularVelocity(i.hpBodyId,this._bVecToV3(t))},s)}getAngularVelocityToRef(e,t,s){const i=this._getPluginReference(e,s),a=this._hknp.HP_Body_GetAngularVelocity(i.hpBodyId)[1];this._v3ToBvecRef(a,t)}setPhysicsBodyTransformation(e,t){if(e.getPrestepType()==He.TELEPORT){const s=e.transformNode;if(e.numInstances>0){const a=s._thinInstanceDataStorage.matrixData;if(!a)return;const r=e.numInstances;this._createOrUpdateBodyInstances(e,e.getMotionType(),a,0,r,!0)}else this._hknp.HP_Body_SetQTransform(e._pluginData.hpBodyId,this._getTransformInfos(t))}else e.getPrestepType()==He.ACTION?this.setTargetTransform(e,t.absolutePosition,t.absoluteRotationQuaternion):e.getPrestepType()==He.DISABLED?D.Warn("Prestep type is set to DISABLED. Unable to set physics body transformation."):D.Warn("Invalid prestep type set to physics body.")}setTargetTransform(e,t,s,i){this._applyToBodyOrInstances(e,a=>{this._hknp.HP_Body_SetTargetQTransform(a.hpBodyId,[this._bVecToV3(t),this._bQuatToV4(s)])},i)}setGravityFactor(e,t,s){this._applyToBodyOrInstances(e,i=>{this._hknp.HP_Body_SetGravityFactor(i.hpBodyId,t)},s)}getGravityFactor(e,t){const s=this._getPluginReference(e,t);return this._hknp.HP_Body_GetGravityFactor(s.hpBodyId)[1]}disposeBody(e){if(e._pluginDataInstances&&e._pluginDataInstances.length>0)for(const t of e._pluginDataInstances)this._hknp.HP_Body_Release(t.hpBodyId),t.hpBodyId=void 0;e._pluginData&&(this._hknp.HP_Body_Release(e._pluginData.hpBodyId),e._pluginData.hpBodyId=void 0)}_createOptionsFromGroundMesh(e){const t=e.groundMesh;if(!t)return;let s=t.getVerticesData(E.PositionKind);const i=t.computeWorldMatrix(!0),a=[];let r;for(r=0;r<s.length;r+=3)d.FromArrayToRef(s,r,c.Vector3[0]),d.TransformCoordinatesToRef(c.Vector3[0],i,c.Vector3[1]),c.Vector3[1].toArray(a,r);s=a;const n=~~(Math.sqrt(s.length/3)-1),o=t.getBoundingInfo(),h=Math.min(o.boundingBox.extendSizeWorld.x,o.boundingBox.extendSizeWorld.z),l=o.boundingBox.minimumWorld.x,_=o.boundingBox.minimumWorld.y,g=o.boundingBox.minimumWorld.z,p=new Float32Array((n+1)*(n+1)),f=h*2/n;for(let m=0;m<p.length;m++)p[m]=_;for(let m=0;m<s.length;m=m+3){const b=Math.round((s[m+0]-l)/f),y=n-Math.round((s[m+2]-g)/f),T=s[m+1]-_;p[y*(n+1)+b]=T}e.numHeightFieldSamplesX=n+1,e.numHeightFieldSamplesZ=n+1,e.heightFieldSizeX=o.boundingBox.extendSizeWorld.x*2,e.heightFieldSizeZ=o.boundingBox.extendSizeWorld.z*2,e.heightFieldData=p}initShape(e,t,s){switch(t){case 0:{const i=s.radius||1,a=s.center?this._bVecToV3(s.center):[0,0,0];e._pluginData=this._hknp.HP_Shape_CreateSphere(a,i)[1]}break;case 3:{const i=s.rotation?this._bQuatToV4(s.rotation):[0,0,0,1],a=s.extents?this._bVecToV3(s.extents):[1,1,1],r=s.center?this._bVecToV3(s.center):[0,0,0];e._pluginData=this._hknp.HP_Shape_CreateBox(r,i,a)[1]}break;case 1:{const i=s.pointA?this._bVecToV3(s.pointA):[0,0,0],a=s.pointB?this._bVecToV3(s.pointB):[0,1,0],r=s.radius||0;e._pluginData=this._hknp.HP_Shape_CreateCapsule(i,a,r)[1]}break;case 5:e._pluginData=this._hknp.HP_Shape_CreateContainer()[1];break;case 2:{const i=s.pointA?this._bVecToV3(s.pointA):[0,0,0],a=s.pointB?this._bVecToV3(s.pointB):[0,1,0],r=s.radius||0;e._pluginData=this._hknp.HP_Shape_CreateCylinder(i,a,r)[1]}break;case 4:case 6:{const i=s.mesh;if(i){const a=!!s.includeChildMeshes,r=t!=4,n=new wi(i,r,i==null?void 0:i.getScene());n.addNodeMeshes(i,a);const o=n.getVertices(this._hknp),h=o.numObjects/3;if(t==4)e._pluginData=this._hknp.HP_Shape_CreateConvexHull(o.offset,h)[1];else{const l=n.getTriangles(this._hknp),_=l.numObjects/3;e._pluginData=this._hknp.HP_Shape_CreateMesh(o.offset,h,l.offset,_)[1],n.freeBuffer(this._hknp,l)}n.freeBuffer(this._hknp,o)}else throw new Error("No mesh provided to create physics shape.")}break;case 7:if(s.groundMesh&&this._createOptionsFromGroundMesh(s),s.numHeightFieldSamplesX&&s.numHeightFieldSamplesZ&&s.heightFieldSizeX&&s.heightFieldSizeZ&&s.heightFieldData){const i=s.numHeightFieldSamplesX*s.numHeightFieldSamplesZ,a=i*4,r=this._hknp._malloc(a),n=new Float32Array(this._hknp.HEAPU8.buffer,r,i);for(let l=0;l<s.numHeightFieldSamplesX;l++)for(let _=0;_<s.numHeightFieldSamplesZ;_++){const g=_*s.numHeightFieldSamplesX+l,p=(s.numHeightFieldSamplesX-1-l)*s.numHeightFieldSamplesZ+_;n[g]=s.heightFieldData[p]}const o=s.heightFieldSizeX/(s.numHeightFieldSamplesX-1),h=s.heightFieldSizeZ/(s.numHeightFieldSamplesZ-1);e._pluginData=this._hknp.HP_Shape_CreateHeightField(s.numHeightFieldSamplesX,s.numHeightFieldSamplesZ,[o,1,h],r)[1],this._hknp._free(r)}else throw new Error("Missing required heightfield parameters");break;default:throw new Error("Unsupported Shape Type.")}this._shapes.set(e._pluginData[0],e)}setShapeFilterMembershipMask(e,t){const s=this._hknp.HP_Shape_GetFilterInfo(e._pluginData)[1][1];this._hknp.HP_Shape_SetFilterInfo(e._pluginData,[t,s])}getShapeFilterMembershipMask(e){return this._hknp.HP_Shape_GetFilterInfo(e._pluginData)[1][0]}setShapeFilterCollideMask(e,t){const s=this._hknp.HP_Shape_GetFilterInfo(e._pluginData)[1][0];this._hknp.HP_Shape_SetFilterInfo(e._pluginData,[s,t])}getShapeFilterCollideMask(e){return this._hknp.HP_Shape_GetFilterInfo(e._pluginData)[1][1]}setMaterial(e,t){const s=t.friction??.5,i=t.staticFriction??s,a=t.restitution??0,r=t.frictionCombine??1,n=t.restitutionCombine??2,o=[i,s,a,this._materialCombineToNative(r),this._materialCombineToNative(n)];this._hknp.HP_Shape_SetMaterial(e._pluginData,o)}getMaterial(e){const t=this._hknp.HP_Shape_GetMaterial(e._pluginData)[1];return{staticFriction:t[0],friction:t[1],restitution:t[2],frictionCombine:this._nativeToMaterialCombine(t[3]),restitutionCombine:this._nativeToMaterialCombine(t[4])}}setDensity(e,t){this._hknp.HP_Shape_SetDensity(e._pluginData,t)}getDensity(e){return this._hknp.HP_Shape_GetDensity(e._pluginData)[1]}_getTransformInfos(e){if(e.parent)return e.computeWorldMatrix(!0),[this._bVecToV3(e.absolutePosition),this._bQuatToV4(e.absoluteRotationQuaternion)];let t=c.Quaternion[0];if(e.rotationQuaternion)t=e.rotationQuaternion;else{const i=e.rotation;M.FromEulerAnglesToRef(i.x,i.y,i.z,t)}return[this._bVecToV3(e.position),this._bQuatToV4(t)]}addChild(e,t,s,i,a){const r=[s?this._bVecToV3(s):[0,0,0],i?this._bQuatToV4(i):[0,0,0,1],a?this._bVecToV3(a):[1,1,1]];this._hknp.HP_Shape_AddChild(e._pluginData,t._pluginData,r)}removeChild(e,t){this._hknp.HP_Shape_RemoveChild(e._pluginData,t)}getNumChildren(e){return this._hknp.HP_Shape_GetNumChildren(e._pluginData)[1]}setTrigger(e,t){this._hknp.HP_Shape_SetTrigger(e._pluginData,t)}getBoundingBox(e){const t=this._hknp.HP_Shape_GetBoundingBox(e._pluginData,[[0,0,0],[0,0,0,1]])[1];return c.Vector3[0].set(t[0][0],t[0][1],t[0][2]),c.Vector3[1].set(t[1][0],t[1][1],t[1][2]),new bt(c.Vector3[0],c.Vector3[1],R.IdentityReadOnly)}getBodyBoundingBox(e){const t=this.getBoundingBox(e.shape);return new bt(t.minimum,t.maximum,e.transformNode.getWorldMatrix())}getBodyGeometry(e){var l;const t=((l=e._pluginDataInstances)==null?void 0:l.length)>0?e._pluginDataInstances[0]:e._pluginData,s=this._hknp.HP_Body_GetShape(t.hpBodyId)[1],i=this._hknp.HP_Shape_CreateDebugDisplayGeometry(s);if(i[0]!=this._hknp.Result.RESULT_OK)return{positions:[],indices:[]};const a=this._hknp.HP_DebugGeometry_GetInfo(i[1])[1],r=new Float32Array(this._hknp.HEAPU8.buffer,a[0],a[1]*3),n=new Uint32Array(this._hknp.HEAPU8.buffer,a[2],a[3]*3),o=r.slice(0),h=n.slice(0);return this._hknp.HP_DebugGeometry_Release(i[1]),{positions:o,indices:h}}disposeShape(e){this._shapes.delete(e._pluginData[0]),this._hknp.HP_Shape_Release(e._pluginData),e._pluginData=void 0}initConstraint(e,t,s,i,a){const r=e.type,n=e.options;if(!r||!n){D.Warn("No constraint type or options. Constraint is invalid.");return}if(t._pluginDataInstances.length>0&&i===void 0||s._pluginDataInstances.length>0&&a===void 0){D.Warn("Body is instanced but no instance index was specified. Constraint will not be applied.");return}e._pluginData=e._pluginData??[];const o=this._hknp.HP_Constraint_Create()[1];e._pluginData.push(o);const h=this._getPluginReference(t,i).hpBodyId,l=this._getPluginReference(s,a).hpBodyId;this._hknp.HP_Constraint_SetParentBody(o,h),this._hknp.HP_Constraint_SetChildBody(o,l),this._constraintToBodyIdPair.set(o[0],[h[0],l[0]]);const _=n.pivotA?this._bVecToV3(n.pivotA):this._bVecToV3(d.Zero()),g=n.axisA??new d(1,0,0),p=this._tmpVec3[0];n.perpAxisA?p.copyFrom(n.perpAxisA):g.getNormalToRef(p),this._hknp.HP_Constraint_SetAnchorInParent(o,_,this._bVecToV3(g),this._bVecToV3(p));const f=n.pivotB?this._bVecToV3(n.pivotB):this._bVecToV3(d.Zero()),m=n.axisB??new d(1,0,0),b=this._tmpVec3[0];if(n.perpAxisB?b.copyFrom(n.perpAxisB):m.getNormalToRef(b),this._hknp.HP_Constraint_SetAnchorInChild(o,f,this._bVecToV3(m),this._bVecToV3(b)),e._initOptions||(e._initOptions={axisA:g.clone(),axisB:m.clone(),perpAxisA:p.clone(),perpAxisB:b.clone(),pivotA:new d(_[0],_[1],_[2]),pivotB:new d(f[0],f[1],f[2])}),r==5)this._hknp.HP_Constraint_SetAxisMode(o,this._hknp.ConstraintAxis.LINEAR_X,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(o,this._hknp.ConstraintAxis.LINEAR_Y,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(o,this._hknp.ConstraintAxis.LINEAR_Z,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(o,this._hknp.ConstraintAxis.ANGULAR_X,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(o,this._hknp.ConstraintAxis.ANGULAR_Y,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(o,this._hknp.ConstraintAxis.ANGULAR_Z,this._hknp.ConstraintAxisLimitMode.LOCKED);else if(r==2){const T=n.maxDistance||0,v=this._hknp.ConstraintAxis.LINEAR_DISTANCE;this._hknp.HP_Constraint_SetAxisMode(o,v,this._hknp.ConstraintAxisLimitMode.LIMITED),this._hknp.HP_Constraint_SetAxisMinLimit(o,v,T),this._hknp.HP_Constraint_SetAxisMaxLimit(o,v,T)}else if(r==3)this._hknp.HP_Constraint_SetAxisMode(o,this._hknp.ConstraintAxis.LINEAR_X,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(o,this._hknp.ConstraintAxis.LINEAR_Y,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(o,this._hknp.ConstraintAxis.LINEAR_Z,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(o,this._hknp.ConstraintAxis.ANGULAR_Y,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(o,this._hknp.ConstraintAxis.ANGULAR_Z,this._hknp.ConstraintAxisLimitMode.LOCKED);else if(r==6)this._hknp.HP_Constraint_SetAxisMode(o,this._hknp.ConstraintAxis.LINEAR_Y,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(o,this._hknp.ConstraintAxis.LINEAR_Z,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(o,this._hknp.ConstraintAxis.ANGULAR_X,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(o,this._hknp.ConstraintAxis.ANGULAR_Y,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(o,this._hknp.ConstraintAxis.ANGULAR_Z,this._hknp.ConstraintAxisLimitMode.LOCKED);else if(r==4)this._hknp.HP_Constraint_SetAxisMode(o,this._hknp.ConstraintAxis.LINEAR_Y,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(o,this._hknp.ConstraintAxis.LINEAR_Z,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(o,this._hknp.ConstraintAxis.ANGULAR_Y,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(o,this._hknp.ConstraintAxis.ANGULAR_Z,this._hknp.ConstraintAxisLimitMode.LOCKED);else if(r==1)this._hknp.HP_Constraint_SetAxisMode(o,this._hknp.ConstraintAxis.LINEAR_X,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(o,this._hknp.ConstraintAxis.LINEAR_Y,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(o,this._hknp.ConstraintAxis.LINEAR_Z,this._hknp.ConstraintAxisLimitMode.LOCKED);else if(r==7){const T=e;for(const v of T.limits){const B=this._constraintAxisToNative(v.axis);(v.minLimit??-1)==0&&(v.maxLimit??-1)==0?this._hknp.HP_Constraint_SetAxisMode(o,B,this._hknp.ConstraintAxisLimitMode.LOCKED):(v.minLimit!=null&&(this._hknp.HP_Constraint_SetAxisMode(o,B,this._hknp.ConstraintAxisLimitMode.LIMITED),this._hknp.HP_Constraint_SetAxisMinLimit(o,B,v.minLimit)),v.maxLimit!=null&&(this._hknp.HP_Constraint_SetAxisMode(o,B,this._hknp.ConstraintAxisLimitMode.LIMITED),this._hknp.HP_Constraint_SetAxisMaxLimit(o,B,v.maxLimit))),v.stiffness&&this._hknp.HP_Constraint_SetAxisStiffness(o,B,v.stiffness),v.damping&&this._hknp.HP_Constraint_SetAxisDamping(o,B,v.damping)}}else throw new Error("Unsupported Constraint Type.");const y=!!n.collision;this._hknp.HP_Constraint_SetCollisionsEnabled(o,y),this._hknp.HP_Constraint_SetEnabled(o,!0)}getBodiesUsingConstraint(e){const t=[];for(const s of e._pluginData){const i=this._constraintToBodyIdPair.get(s[0]);if(i){const a=this._bodies.get(i[0]),r=this._bodies.get(i[1]);a&&r&&t.push({parentBody:a.body,parentBodyIndex:a.index,childBody:r.body,childBodyIndex:r.index})}}return t}addConstraint(e,t,s,i,a){this.initConstraint(s,e,t,i,a)}setEnabled(e,t){for(const s of e._pluginData)this._hknp.HP_Constraint_SetEnabled(s,t)}getEnabled(e){const t=e._pluginData&&e._pluginData[0];return t?this._hknp.HP_Constraint_GetEnabled(t)[1]:!1}setCollisionsEnabled(e,t){for(const s of e._pluginData)this._hknp.HP_Constraint_SetCollisionsEnabled(s,t)}getCollisionsEnabled(e){const t=e._pluginData&&e._pluginData[0];return t?this._hknp.HP_Constraint_GetCollisionsEnabled(t)[1]:!1}setAxisFriction(e,t,s){for(const i of e._pluginData)this._hknp.HP_Constraint_SetAxisFriction(i,this._constraintAxisToNative(t),s)}getAxisFriction(e,t){const s=e._pluginData&&e._pluginData[0];return s?this._hknp.HP_Constraint_GetAxisFriction(s,this._constraintAxisToNative(t))[1]:null}setAxisMode(e,t,s){for(const i of e._pluginData)this._hknp.HP_Constraint_SetAxisMode(i,this._constraintAxisToNative(t),this._limitModeToNative(s))}getAxisMode(e,t){const s=e._pluginData&&e._pluginData[0];if(s){const i=this._hknp.HP_Constraint_GetAxisMode(s,this._constraintAxisToNative(t))[1];return this._nativeToLimitMode(i)}return null}setAxisMinLimit(e,t,s){for(const i of e._pluginData)this._hknp.HP_Constraint_SetAxisMinLimit(i,this._constraintAxisToNative(t),s)}getAxisMinLimit(e,t){const s=e._pluginData&&e._pluginData[0];return s?this._hknp.HP_Constraint_GetAxisMinLimit(s,this._constraintAxisToNative(t))[1]:null}setAxisMaxLimit(e,t,s){for(const i of e._pluginData)this._hknp.HP_Constraint_SetAxisMaxLimit(i,this._constraintAxisToNative(t),s)}getAxisMaxLimit(e,t){const s=e._pluginData&&e._pluginData[0];return s?this._hknp.HP_Constraint_GetAxisMaxLimit(s,this._constraintAxisToNative(t))[1]:null}setAxisMotorType(e,t,s){for(const i of e._pluginData)this._hknp.HP_Constraint_SetAxisMotorType(i,this._constraintAxisToNative(t),this._constraintMotorTypeToNative(s))}getAxisMotorType(e,t){const s=e._pluginData&&e._pluginData[0];return s?this._nativeToMotorType(this._hknp.HP_Constraint_GetAxisMotorType(s,this._constraintAxisToNative(t))[1]):null}setAxisMotorTarget(e,t,s){for(const i of e._pluginData)this._hknp.HP_Constraint_SetAxisMotorTarget(i,this._constraintAxisToNative(t),s)}getAxisMotorTarget(e,t){return e._pluginData&&e._pluginData[0]?this._hknp.HP_Constraint_GetAxisMotorTarget(e._pluginData,this._constraintAxisToNative(t))[1]:null}setAxisMotorMaxForce(e,t,s){for(const i of e._pluginData)this._hknp.HP_Constraint_SetAxisMotorMaxForce(i,this._constraintAxisToNative(t),s)}getAxisMotorMaxForce(e,t){const s=e._pluginData&&e._pluginData[0];return s?this._hknp.HP_Constraint_GetAxisMotorMaxForce(s,this._constraintAxisToNative(t))[1]:null}disposeConstraint(e){for(const t of e._pluginData)this._hknp.HP_Constraint_SetEnabled(t,!1),this._hknp.HP_Constraint_Release(t);e._pluginData.length=0}_populateHitData(e,t){const s=this._bodies.get(e[0][0]);t.body=s==null?void 0:s.body,t.bodyIndex=s==null?void 0:s.index;const i=this._shapes.get(e[1][0]);t.shape=i;const a=e[3],r=e[4],n=e[5];t.setHitData({x:r[0],y:r[1],z:r[2]},{x:a[0],y:a[1],z:a[2]},n)}raycast(e,t,s,i){const a=(i==null?void 0:i.membership)??-1,r=(i==null?void 0:i.collideWith)??-1,n=(i==null?void 0:i.shouldHitTriggers)??!1;s.reset(e,t);const o=[BigInt(0)],h=[this._bVecToV3(e),this._bVecToV3(t),[a,r],n,o];if(this._hknp.HP_World_CastRayWithCollector(this.world,this._queryCollector,h),this._hknp.HP_QueryCollector_GetNumHits(this._queryCollector)[1]>0){const[,l]=this._hknp.HP_QueryCollector_GetCastRayResult(this._queryCollector,0)[1];this._populateHitData(l,s),s.calculateHitDistance()}}pointProximity(e,t){var n,o;const s=((n=e==null?void 0:e.collisionFilter)==null?void 0:n.membership)??-1,i=((o=e==null?void 0:e.collisionFilter)==null?void 0:o.collideWith)??-1;t.reset();const a=e.ignoreBody?[BigInt(e.ignoreBody._pluginData.hpBodyId[0])]:[BigInt(0)],r=[this._bVecToV3(e.position),e.maxDistance,[s,i],e.shouldHitTriggers,a];if(this._hknp.HP_World_PointProximityWithCollector(this.world,this._queryCollector,r),this._hknp.HP_QueryCollector_GetNumHits(this._queryCollector)[1]>0){const[h,l]=this._hknp.HP_QueryCollector_GetPointProximityResult(this._queryCollector,0)[1];this._populateHitData(l,t),t.setHitDistance(h)}}shapeProximity(e,t,s){t.reset(),s.reset();const i=e.shape._pluginData,a=e.ignoreBody?[BigInt(e.ignoreBody._pluginData.hpBodyId[0])]:[BigInt(0)],r=[i,this._bVecToV3(e.position),this._bQuatToV4(e.rotation),e.maxDistance,e.shouldHitTriggers,a];if(this._hknp.HP_World_ShapeProximityWithCollector(this.world,this._queryCollector,r),this._hknp.HP_QueryCollector_GetNumHits(this._queryCollector)[1]>0){const[n,o,h]=this._hknp.HP_QueryCollector_GetShapeProximityResult(this._queryCollector,0)[1];this._populateHitData(o,t),this._populateHitData(h,s),t.setHitDistance(n),s.setHitDistance(n)}}shapeCast(e,t,s){t.reset(),s.reset();const i=e.shape._pluginData,a=e.ignoreBody?[BigInt(e.ignoreBody._pluginData.hpBodyId[0])]:[BigInt(0)],r=[i,this._bQuatToV4(e.rotation),this._bVecToV3(e.startPosition),this._bVecToV3(e.endPosition),e.shouldHitTriggers,a];if(this._hknp.HP_World_ShapeCastWithCollector(this.world,this._queryCollector,r),this._hknp.HP_QueryCollector_GetNumHits(this._queryCollector)[1]>0){const[n,o,h]=this._hknp.HP_QueryCollector_GetShapeCastResult(this._queryCollector,0)[1];this._populateHitData(o,t),this._populateHitData(h,s),t.setHitFraction(n),s.setHitFraction(n)}}getCollisionObservable(e){const t=e._pluginData.hpBodyId[0];let s=this._bodyCollisionObservable.get(t);return s||(s=new W,this._bodyCollisionObservable.set(t,s)),s}getCollisionEndedObservable(e){const t=e._pluginData.hpBodyId[0];let s=this._bodyCollisionEndedObservable.get(t);return s||(s=new W,this._bodyCollisionEndedObservable.set(t,s)),s}setCollisionCallbackEnabled(e,t){const s=this._hknp.EventType.COLLISION_STARTED.value|this._hknp.EventType.COLLISION_CONTINUED.value|this._hknp.EventType.COLLISION_FINISHED.value;e._pluginDataInstances&&e._pluginDataInstances.length?e._pluginDataInstances.forEach(i=>{this._hknp.HP_Body_SetEventMask(i.hpBodyId,t?s:0)}):e._pluginData&&this._hknp.HP_Body_SetEventMask(e._pluginData.hpBodyId,t?s:0)}setCollisionEndedCallbackEnabled(e,t){const s=this._getPluginReference(e);let i=this._hknp.HP_Body_GetEventMask(s.hpBodyId)[1];i=t?i|this._hknp.EventType.COLLISION_FINISHED.value:i&~this._hknp.EventType.COLLISION_FINISHED.value,e._pluginDataInstances&&e._pluginDataInstances.length?e._pluginDataInstances.forEach(a=>{this._hknp.HP_Body_SetEventMask(a.hpBodyId,i)}):e._pluginData&&this._hknp.HP_Body_SetEventMask(e._pluginData.hpBodyId,i)}_notifyTriggers(){let e=this._hknp.HP_World_GetTriggerEvents(this.world)[1];const t=new Wt;for(;e;){Wt.readToRef(this._hknp.HEAPU8.buffer,e,t);const s=this._bodies.get(t.bodyIdA),i=this._bodies.get(t.bodyIdB);if(s&&i){const a={collider:s.body,colliderIndex:s.index,collidedAgainst:i.body,collidedAgainstIndex:i.index,type:this._nativeTriggerCollisionValueToCollisionType(t.type)};this.onTriggerCollisionObservable.notifyObservers(a)}e=this._hknp.HP_World_GetNextTriggerEvent(this.world,e)}}_notifyCollisions(){let e=this._hknp.HP_World_GetCollisionEvents(this.world)[1];const t=new Nt,s=Number(this.world);for(;e;){Nt.readToRef(this._hknp.HEAPU8.buffer,e,t);const i=this._bodies.get(t.contactOnA.bodyId),a=this._bodies.get(t.contactOnB.bodyId);if(i&&a){const r={collider:i.body,colliderIndex:i.index,collidedAgainst:a.body,collidedAgainstIndex:a.index,type:this._nativeCollisionValueToCollisionType(t.type)};if(r.type==="COLLISION_FINISHED")this.onCollisionEndedObservable.notifyObservers(r);else{t.contactOnB.position.subtractToRef(t.contactOnA.position,this._tmpVec3[0]);const n=d.Dot(this._tmpVec3[0],t.contactOnA.normal);r.point=t.contactOnA.position,r.distance=n,r.impulse=t.impulseApplied,r.normal=t.contactOnA.normal,this.onCollisionObservable.notifyObservers(r)}if(this._bodyCollisionObservable.size&&r.type!=="COLLISION_FINISHED"){const n=this._bodyCollisionObservable.get(t.contactOnA.bodyId),o=this._bodyCollisionObservable.get(t.contactOnB.bodyId);t.contactOnA.position.subtractToRef(t.contactOnB.position,this._tmpVec3[0]);const h=d.Dot(this._tmpVec3[0],t.contactOnB.normal);if(n&&n.notifyObservers(r),o){const l={collider:a.body,colliderIndex:a.index,collidedAgainst:i.body,collidedAgainstIndex:i.index,point:t.contactOnB.position,distance:h,impulse:t.impulseApplied,normal:t.contactOnB.normal,type:this._nativeCollisionValueToCollisionType(t.type)};o.notifyObservers(l)}}else if(this._bodyCollisionEndedObservable.size){const n=this._bodyCollisionEndedObservable.get(t.contactOnA.bodyId),o=this._bodyCollisionEndedObservable.get(t.contactOnB.bodyId);t.contactOnA.position.subtractToRef(t.contactOnB.position,this._tmpVec3[0]);const h=d.Dot(this._tmpVec3[0],t.contactOnB.normal);if(n&&n.notifyObservers(r),o){const l={collider:a.body,colliderIndex:a.index,collidedAgainst:i.body,collidedAgainstIndex:i.index,point:t.contactOnB.position,distance:h,impulse:t.impulseApplied,normal:t.contactOnB.normal,type:this._nativeCollisionValueToCollisionType(t.type)};o.notifyObservers(l)}}}e=this._hknp.HP_World_GetNextCollisionEvent(s,e)}}get numBodies(){return this._hknp.HP_World_GetNumBodies(this.world)[1]}dispose(){this._queryCollector&&(this._hknp.HP_QueryCollector_Release(this._queryCollector),this._queryCollector=void 0),this.world&&(this._hknp.HP_World_Release(this.world),this.world=void 0)}_v3ToBvecRef(e,t){t.set(e[0],e[1],e[2])}_bVecToV3(e){return[e._x,e._y,e._z]}_bQuatToV4(e){return[e._x,e._y,e._z,e._w]}_constraintMotorTypeToNative(e){switch(e){case 2:return this._hknp.ConstraintMotorType.POSITION;case 1:return this._hknp.ConstraintMotorType.VELOCITY}return this._hknp.ConstraintMotorType.NONE}_nativeToMotorType(e){switch(e){case this._hknp.ConstraintMotorType.POSITION:return 2;case this._hknp.ConstraintMotorType.VELOCITY:return 1}return 0}_materialCombineToNative(e){switch(e){case 0:return this._hknp.MaterialCombine.GEOMETRIC_MEAN;case 1:return this._hknp.MaterialCombine.MINIMUM;case 2:return this._hknp.MaterialCombine.MAXIMUM;case 3:return this._hknp.MaterialCombine.ARITHMETIC_MEAN;case 4:return this._hknp.MaterialCombine.MULTIPLY}}_nativeToMaterialCombine(e){switch(e){case this._hknp.MaterialCombine.GEOMETRIC_MEAN:return 0;case this._hknp.MaterialCombine.MINIMUM:return 1;case this._hknp.MaterialCombine.MAXIMUM:return 2;case this._hknp.MaterialCombine.ARITHMETIC_MEAN:return 3;case this._hknp.MaterialCombine.MULTIPLY:return 4;default:return}}_constraintAxisToNative(e){switch(e){case 0:return this._hknp.ConstraintAxis.LINEAR_X;case 1:return this._hknp.ConstraintAxis.LINEAR_Y;case 2:return this._hknp.ConstraintAxis.LINEAR_Z;case 3:return this._hknp.ConstraintAxis.ANGULAR_X;case 4:return this._hknp.ConstraintAxis.ANGULAR_Y;case 5:return this._hknp.ConstraintAxis.ANGULAR_Z;case 6:return this._hknp.ConstraintAxis.LINEAR_DISTANCE}}_nativeToLimitMode(e){switch(e){case this._hknp.ConstraintAxisLimitMode.FREE:return 0;case this._hknp.ConstraintAxisLimitMode.LIMITED:return 1;case this._hknp.ConstraintAxisLimitMode.LOCKED:return 2}return 0}_limitModeToNative(e){switch(e){case 0:return this._hknp.ConstraintAxisLimitMode.FREE;case 1:return this._hknp.ConstraintAxisLimitMode.LIMITED;case 2:return this._hknp.ConstraintAxisLimitMode.LOCKED}}_nativeCollisionValueToCollisionType(e){switch(e){case this._hknp.EventType.COLLISION_STARTED.value:return"COLLISION_STARTED";case this._hknp.EventType.COLLISION_FINISHED.value:return"COLLISION_FINISHED";case this._hknp.EventType.COLLISION_CONTINUED.value:return"COLLISION_CONTINUED"}return"COLLISION_STARTED"}_nativeTriggerCollisionValueToCollisionType(e){switch(e){case 8:return"TRIGGER_ENTERED";case 16:return"TRIGGER_EXITED"}return"TRIGGER_ENTERED"}}class ar extends Xt{constructor(){super(...arguments),this._hitDistance=0}get hitDistance(){return this._hitDistance}setHitDistance(e){this._hitDistance=e}reset(){super.reset(),this._hitDistance=0}}class rr extends Xt{constructor(){super(...arguments),this._hitFraction=0}get hitFraction(){return this._hitFraction}setHitFraction(e){this._hitFraction=e}}class nr extends be{getClassName(){return"HighlightsPostProcess"}constructor(e,t,s,i,a,r,n=0){super(e,"highlights",null,null,t,s,i,a,r,null,n)}_gatherImports(e,t){e?(this._webGPUReady=!0,t.push(Promise.all([S(()=>import("./nativeXRFrame-DgHx7Vcb.js").then(s=>s.rO),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29]))]))):t.push(Promise.all([S(()=>import("./nativeXRFrame-DgHx7Vcb.js").then(s=>s.rN),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29]))])),super._gatherImports(e,t)}}class or extends qt{constructor(e,t,s,i=1,a){super(s.getEngine(),e),this.LensChromaticAberrationEffect="LensChromaticAberrationEffect",this.HighlightsEnhancingEffect="HighlightsEnhancingEffect",this.LensDepthOfFieldEffect="LensDepthOfFieldEffect",this._pentagonBokehIsEnabled=!1,this._scene=s,this._depthTexture=s.enableDepthRenderer().getDepthMap(),t.grain_texture?this._grainTexture=t.grain_texture:this._createGrainTexture(),this._edgeBlur=t.edge_blur?t.edge_blur:0,this._grainAmount=t.grain_amount?t.grain_amount:0,this._chromaticAberration=t.chromatic_aberration?t.chromatic_aberration:0,this._distortion=t.distortion?t.distortion:0,this._highlightsGain=t.dof_gain!==void 0?t.dof_gain:-1,this._highlightsThreshold=t.dof_threshold?t.dof_threshold:1,this._dofDistance=t.dof_focus_distance!==void 0?t.dof_focus_distance:-1,this._dofAperture=t.dof_aperture?t.dof_aperture:1,this._dofDarken=t.dof_darken?t.dof_darken:0,this._dofPentagon=t.dof_pentagon!==void 0?t.dof_pentagon:!0,this._blurNoise=t.blur_noise!==void 0?t.blur_noise:!0,this._createChromaticAberrationPostProcess(i),this._createHighlightsPostProcess(i),this._createDepthOfFieldPostProcess(i/4),this.addEffect(new ht(s.getEngine(),this.LensChromaticAberrationEffect,()=>this._chromaticAberrationPostProcess,!0)),this.addEffect(new ht(s.getEngine(),this.HighlightsEnhancingEffect,()=>this._highlightsPostProcess,!0)),this.addEffect(new ht(s.getEngine(),this.LensDepthOfFieldEffect,()=>this._depthOfFieldPostProcess,!0)),this._highlightsGain===-1&&this._disableEffect(this.HighlightsEnhancingEffect,null),s.postProcessRenderPipelineManager.addPipeline(this),a&&s.postProcessRenderPipelineManager.attachCamerasToRenderPipeline(e,a)}getClassName(){return"LensRenderingPipeline"}get scene(){return this._scene}get edgeBlur(){return this._edgeBlur}set edgeBlur(e){this.setEdgeBlur(e)}get grainAmount(){return this._grainAmount}set grainAmount(e){this.setGrainAmount(e)}get chromaticAberration(){return this._chromaticAberration}set chromaticAberration(e){this.setChromaticAberration(e)}get dofAperture(){return this._dofAperture}set dofAperture(e){this.setAperture(e)}get edgeDistortion(){return this._distortion}set edgeDistortion(e){this.setEdgeDistortion(e)}get dofDistortion(){return this._dofDistance}set dofDistortion(e){this.setFocusDistance(e)}get darkenOutOfFocus(){return this._dofDarken}set darkenOutOfFocus(e){this.setDarkenOutOfFocus(e)}get blurNoise(){return this._blurNoise}set blurNoise(e){this._blurNoise=e}get pentagonBokeh(){return this._pentagonBokehIsEnabled}set pentagonBokeh(e){e?this.enablePentagonBokeh():this.disablePentagonBokeh()}get highlightsGain(){return this._highlightsGain}set highlightsGain(e){this.setHighlightsGain(e)}get highlightsThreshold(){return this._highlightsThreshold}set highlightsThreshold(e){this.setHighlightsThreshold(e)}setEdgeBlur(e){this._edgeBlur=e}disableEdgeBlur(){this._edgeBlur=0}setGrainAmount(e){this._grainAmount=e}disableGrain(){this._grainAmount=0}setChromaticAberration(e){this._chromaticAberration=e}disableChromaticAberration(){this._chromaticAberration=0}setEdgeDistortion(e){this._distortion=e}disableEdgeDistortion(){this._distortion=0}setFocusDistance(e){this._dofDistance=e}disableDepthOfField(){this._dofDistance=-1}setAperture(e){this._dofAperture=e}setDarkenOutOfFocus(e){this._dofDarken=e}enablePentagonBokeh(){this._highlightsPostProcess.updateEffect(`#define PENTAGON
`),this._pentagonBokehIsEnabled=!0}disablePentagonBokeh(){this._pentagonBokehIsEnabled=!1,this._highlightsPostProcess.updateEffect()}enableNoiseBlur(){this._blurNoise=!0}disableNoiseBlur(){this._blurNoise=!1}setHighlightsGain(e){this._highlightsGain=e}setHighlightsThreshold(e){this._highlightsGain===-1&&(this._highlightsGain=1),this._highlightsThreshold=e}disableHighlights(){this._highlightsGain=-1}dispose(e=!1){this._scene.postProcessRenderPipelineManager.detachCamerasFromRenderPipeline(this._name,this._scene.cameras),this._chromaticAberrationPostProcess=null,this._highlightsPostProcess=null,this._depthOfFieldPostProcess=null,this._grainTexture.dispose(),e&&this._scene.disableDepthRenderer()}_createChromaticAberrationPostProcess(e){this._chromaticAberrationPostProcess=new be("LensChromaticAberration","chromaticAberration",["chromatic_aberration","screen_width","screen_height","direction","radialIntensity","centerPosition"],[],e,null,K.TRILINEAR_SAMPLINGMODE,this._scene.getEngine(),!1),this._chromaticAberrationPostProcess.onApply=t=>{t.setFloat("chromatic_aberration",this._chromaticAberration),t.setFloat("screen_width",this._scene.getEngine().getRenderWidth()),t.setFloat("screen_height",this._scene.getEngine().getRenderHeight()),t.setFloat("radialIntensity",1),t.setFloat2("direction",17,17),t.setFloat2("centerPosition",.5,.5)}}_createHighlightsPostProcess(e){this._highlightsPostProcess=new be("LensHighlights","lensHighlights",["gain","threshold","screen_width","screen_height"],[],e,null,K.TRILINEAR_SAMPLINGMODE,this._scene.getEngine(),!1,this._dofPentagon?`#define PENTAGON
`:""),this._highlightsPostProcess.externalTextureSamplerBinding=!0,this._highlightsPostProcess.onApply=t=>{t.setFloat("gain",this._highlightsGain),t.setFloat("threshold",this._highlightsThreshold),t.setTextureFromPostProcess("textureSampler",this._chromaticAberrationPostProcess),t.setFloat("screen_width",this._scene.getEngine().getRenderWidth()),t.setFloat("screen_height",this._scene.getEngine().getRenderHeight())}}_createDepthOfFieldPostProcess(e){this._depthOfFieldPostProcess=new be("LensDepthOfField","depthOfField",["grain_amount","blur_noise","screen_width","screen_height","distortion","dof_enabled","screen_distance","aperture","darken","edge_blur","highlights","near","far"],["depthSampler","grainSampler","highlightsSampler"],e,null,K.TRILINEAR_SAMPLINGMODE,this._scene.getEngine(),!1),this._depthOfFieldPostProcess.externalTextureSamplerBinding=!0,this._depthOfFieldPostProcess.onApply=t=>{t.setTexture("depthSampler",this._depthTexture),t.setTexture("grainSampler",this._grainTexture),t.setTextureFromPostProcess("textureSampler",this._highlightsPostProcess),t.setTextureFromPostProcess("highlightsSampler",this._depthOfFieldPostProcess),t.setFloat("grain_amount",this._grainAmount),t.setBool("blur_noise",this._blurNoise),t.setFloat("screen_width",this._scene.getEngine().getRenderWidth()),t.setFloat("screen_height",this._scene.getEngine().getRenderHeight()),t.setFloat("distortion",this._distortion),t.setBool("dof_enabled",this._dofDistance!==-1),t.setFloat("screen_distance",1/(.1-1/this._dofDistance)),t.setFloat("aperture",this._dofAperture),t.setFloat("darken",this._dofDarken),t.setFloat("edge_blur",this._edgeBlur),t.setBool("highlights",this._highlightsGain!==-1),this._scene.activeCamera&&(t.setFloat("near",this._scene.activeCamera.minZ),t.setFloat("far",this._scene.activeCamera.maxZ))}}_createGrainTexture(){const t=new Uint8Array(1048576);for(let i=0;i<t.length;){const a=Math.floor(Es(.42,.58)*255);t[i++]=a,t[i++]=a,t[i++]=a,t[i++]=255}const s=Pt.CreateRGBATexture(t,512,512,this._scene,!1,!1,2);s.name="LensNoiseTexture",s.wrapU=K.WRAP_ADDRESSMODE,s.wrapV=K.WRAP_ADDRESSMODE,this._grainTexture=s}}class Ii{getVoxelGrid(){return this._triPlanarVoxelization?this._voxelGridRT:this._voxelGridZaxis}getDebugPassPP(){return this._voxelDebugPass||this._createDebugPass(),this._voxelDebugPass}get triPlanarVoxelization(){return this._triPlanarVoxelization}set triPlanarVoxelization(e){this._triPlanarVoxelization!==e&&(this._triPlanarVoxelization=e,this._disposeVoxelTextures(),this._createTextures())}setWorldScaleMatrix(e){this._invWorldScaleMatrix=e}isVoxelizationInProgress(){return this._voxelizationInProgress}get voxelResolutionExp(){return this._voxelResolutionExp}set voxelResolutionExp(e){this._voxelResolutionExp===e&&this._voxelGridZaxis||(this._voxelResolutionExp=Math.round(Math.min(Math.max(e,3),9)),this._voxelResolution=Math.pow(2,this._voxelResolutionExp),this._disposeVoxelTextures(),this._createTextures())}set voxelDebugAxis(e){this._voxelDebugAxis=e}get voxelDebugAxis(){return this._voxelDebugAxis}setDebugDisplayParams(e,t,s,i){this._debugSizeParams.set(e,t,s,i)}setDebugMipNumber(e){this._debugMipNumber=e}get debugPassName(){return this._debugPassName}get voxelDebugEnabled(){return this._voxelDebugEnabled}set voxelDebugEnabled(e){this._voxelDebugEnabled!==e&&(this._voxelDebugEnabled=e,e&&(this._voxelSlabDebugRT=new me("voxelSlabDebug",{width:this._engine.getRenderWidth(),height:this._engine.getRenderHeight()},this._scene,{generateDepthBuffer:!0,generateMipMaps:!1,type:0,format:5,samplingMode:1}),this._voxelSlabDebugRT.noPrePassRenderer=!0),this._voxelSlabDebugRT&&this._removeVoxelRTs([this._voxelSlabDebugRT]),this._voxelDebugEnabled?(this._addRTsForRender([this._voxelSlabDebugRT],this._includedMeshes,this._voxelDebugAxis,1,!0),this._setDebugBindingsBound=this._setDebugBindings.bind(this),this._scene.onBeforeRenderObservable.add(this._setDebugBindingsBound)):this._scene.onBeforeRenderObservable.removeCallback(this._setDebugBindingsBound))}_createDebugPass(){const e=this._engine.isWebGPU;if(!this._voxelDebugPass){const t={width:this._engine.getRenderWidth(),height:this._engine.getRenderHeight(),textureFormat:5,textureType:0,samplingMode:1,uniforms:["sizeParams","mipNumber"],samplers:["voxelTexture","voxelSlabTexture"],engine:this._engine,reusable:!1,shaderLanguage:e?1:0,extraInitializations:(s,i)=>{if(this._isVoxelGrid3D){s?i.push(S(()=>import("./nativeXRFrame-DgHx7Vcb.js").then(a=>a.sa),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29]))):i.push(S(()=>import("./nativeXRFrame-DgHx7Vcb.js").then(a=>a.s9),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29])));return}s?i.push(S(()=>import("./nativeXRFrame-DgHx7Vcb.js").then(a=>a.s4),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29]))):i.push(S(()=>import("./nativeXRFrame-DgHx7Vcb.js").then(a=>a.s3),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29])))}};this._voxelDebugPass=new be(this.debugPassName,this._isVoxelGrid3D?"iblVoxelGrid3dDebug":"iblVoxelGrid2dArrayDebug",t),this._voxelDebugPass.onApplyObservable.add(s=>{this._voxelDebugAxis===0?s.setTexture("voxelTexture",this._voxelGridXaxis):this._voxelDebugAxis===1?s.setTexture("voxelTexture",this._voxelGridYaxis):this._voxelDebugAxis===2?s.setTexture("voxelTexture",this._voxelGridZaxis):s.setTexture("voxelTexture",this.getVoxelGrid()),s.setTexture("voxelSlabTexture",this._voxelSlabDebugRT),s.setVector4("sizeParams",this._debugSizeParams),s.setFloat("mipNumber",this._debugMipNumber)})}}constructor(e,t,s=6,i=!0){this._voxelMrtsXaxis=[],this._voxelMrtsYaxis=[],this._voxelMrtsZaxis=[],this._isVoxelGrid3D=!0,this.onVoxelizationCompleteObservable=new W,this._renderTargets=[],this._triPlanarVoxelization=!0,this._voxelizationInProgress=!1,this._invWorldScaleMatrix=R.Identity(),this._voxelResolution=64,this._voxelResolutionExp=6,this._mipArray=[],this._voxelDebugEnabled=!1,this._voxelDebugAxis=-1,this._debugSizeParams=new le(0,0,0,0),this._includedMeshes=[],this._debugMipNumber=0,this._debugPassName="Voxelization Debug Pass",this._scene=e,this._engine=e.getEngine(),this._triPlanarVoxelization=i,this._engine.getCaps().drawBuffersExtension||D.Error("Can't do voxel rendering without the draw buffers extension.");const a=this._engine.isWebGPU;this._maxDrawBuffers=this._engine.getCaps().maxDrawBuffers||0,this._copyMipEffectRenderer=new Fs(this._engine),this._copyMipEffectWrapper=new Os({engine:this._engine,fragmentShader:"copyTexture3DLayerToTexture",useShaderStore:!0,uniformNames:["layerNum"],samplerNames:["textureSampler"],shaderLanguage:a?1:0,extraInitializationsAsync:async()=>{a?await S(()=>import("./nativeXRFrame-DgHx7Vcb.js").then(r=>r.rQ),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29])):await S(()=>import("./nativeXRFrame-DgHx7Vcb.js").then(r=>r.rP),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29]))}}),this.voxelResolutionExp=s}_generateMipMaps(){const e=Math.ceil(Math.log2(this._voxelResolution));for(let t=1;t<e+1;t++)this._generateMipMap(t)}_generateMipMap(e){const t=this._mipArray[e-1];t&&(t.setTexture("srcMip",e===1?this.getVoxelGrid():this._mipArray[e-2]),t.render())}_copyMipMaps(){const e=Math.ceil(Math.log2(this._voxelResolution));for(let t=1;t<e+1;t++)this._copyMipMap(t)}_copyMipMap(e){const t=this._mipArray[e-1];if(!t)return;const s=this.getVoxelGrid();let i;if(s instanceof me&&s.renderTarget?i=s.renderTarget:i=s._rtWrapper,i){this._copyMipEffectRenderer.saveStates();const a=t.getSize().width;for(let r=0;r<a;r++)this._engine.bindFramebuffer(i,0,a,a,!0,e,r),this._copyMipEffectRenderer.applyEffectWrapper(this._copyMipEffectWrapper),this._copyMipEffectWrapper.effect.setTexture("textureSampler",t),this._copyMipEffectWrapper.effect.setInt("layerNum",r),this._copyMipEffectRenderer.draw(),this._engine.unBindFramebuffer(i,!0);this._copyMipEffectRenderer.restoreStates()}}_computeNumberOfSlabs(){return Math.ceil(this._voxelResolution/this._maxDrawBuffers)}_createTextures(){const e=this._engine.isWebGPU,t={width:this._voxelResolution,height:this._voxelResolution,layers:this._isVoxelGrid3D?void 0:this._voxelResolution,depth:this._isVoxelGrid3D?this._voxelResolution:void 0},s={generateDepthBuffer:!1,generateMipMaps:!1,type:0,format:6,samplingMode:1},i=this._computeNumberOfSlabs(),a={generateDepthBuffer:!1,generateMipMaps:!0,type:0,format:6,samplingMode:4,shaderLanguage:e?1:0,extraInitializationsAsync:async()=>{e?await S(()=>import("./nativeXRFrame-DgHx7Vcb.js").then(n=>n.rZ),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29])):await S(()=>import("./nativeXRFrame-DgHx7Vcb.js").then(n=>n.r_),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29]))}};this._triPlanarVoxelization?(this._voxelGridXaxis=new me("voxelGridXaxis",t,this._scene,s),this._voxelGridYaxis=new me("voxelGridYaxis",t,this._scene,s),this._voxelGridZaxis=new me("voxelGridZaxis",t,this._scene,s),this._voxelMrtsXaxis=this._createVoxelMRTs("x_axis_",this._voxelGridXaxis,i),this._voxelMrtsYaxis=this._createVoxelMRTs("y_axis_",this._voxelGridYaxis,i),this._voxelMrtsZaxis=this._createVoxelMRTs("z_axis_",this._voxelGridZaxis,i),this._voxelGridRT=new Oe("combinedVoxelGrid",t,"iblCombineVoxelGrids",this._scene,a,!1),this._scene.proceduralTextures.splice(this._scene.proceduralTextures.indexOf(this._voxelGridRT),1),this._voxelGridRT.setFloat("layer",0),this._voxelGridRT.setTexture("voxelXaxisSampler",this._voxelGridXaxis),this._voxelGridRT.setTexture("voxelYaxisSampler",this._voxelGridYaxis),this._voxelGridRT.setTexture("voxelZaxisSampler",this._voxelGridZaxis),this._voxelGridRT.autoClear=!1,this._voxelGridRT.wrapU=K.CLAMP_ADDRESSMODE,this._voxelGridRT.wrapV=K.CLAMP_ADDRESSMODE):(this._voxelGridZaxis=new me("voxelGridZaxis",t,this._scene,a),this._voxelMrtsZaxis=this._createVoxelMRTs("z_axis_",this._voxelGridZaxis,i));const r={generateDepthBuffer:!1,generateMipMaps:!1,type:0,format:6,samplingMode:1,shaderLanguage:e?1:0,extraInitializationsAsync:async()=>{e?await S(()=>import("./nativeXRFrame-DgHx7Vcb.js").then(n=>n.s0),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29])):await S(()=>import("./nativeXRFrame-DgHx7Vcb.js").then(n=>n.r$),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29]))}};this._mipArray=new Array(Math.ceil(Math.log2(this._voxelResolution)));for(let n=1;n<=this._mipArray.length;n++){const o=this._voxelResolution>>n,h={width:o,height:o,depth:o};this._mipArray[n-1]=new Oe("voxelMip"+n,h,"iblGenerateVoxelMip",this._scene,r,!1),this._scene.proceduralTextures.splice(this._scene.proceduralTextures.indexOf(this._mipArray[n-1]),1);const l=this._mipArray[n-1];l.autoClear=!1,l.wrapU=K.CLAMP_ADDRESSMODE,l.wrapV=K.CLAMP_ADDRESSMODE,l.setTexture("srcMip",n>1?this._mipArray[n-2]:this.getVoxelGrid()),l.setInt("layerNum",0)}this._createVoxelMaterials()}_createVoxelMRTs(e,t,s){t.wrapU=K.CLAMP_ADDRESSMODE,t.wrapV=K.CLAMP_ADDRESSMODE,t.noPrePassRenderer=!0;const i=[],a=new Array(this._maxDrawBuffers).fill(this._isVoxelGrid3D?32879:35866);for(let r=0;r<s;r++){let n=new Array(this._maxDrawBuffers).fill(0);n=n.map((l,_)=>r*this._maxDrawBuffers+_);let o=new Array(this._maxDrawBuffers).fill("");o=o.map((l,_)=>"voxel_grid_"+e+(r*this._maxDrawBuffers+_));const h=new si("mrt_"+e+r,{width:this._voxelResolution,height:this._voxelResolution,depth:this._isVoxelGrid3D?this._voxelResolution:void 0},this._maxDrawBuffers,this._scene,{types:new Array(this._maxDrawBuffers).fill(0),samplingModes:new Array(this._maxDrawBuffers).fill(3),generateMipMaps:!1,targetTypes:a,formats:new Array(this._maxDrawBuffers).fill(6),faceIndex:new Array(this._maxDrawBuffers).fill(0),layerIndex:n,layerCounts:new Array(this._maxDrawBuffers).fill(this._voxelResolution),generateDepthBuffer:!1,generateStencilBuffer:!1},o);h.clearColor=new Me(0,0,0,1),h.noPrePassRenderer=!0;for(let l=0;l<this._maxDrawBuffers;l++)h.setInternalTexture(t.getInternalTexture(),l);i.push(h)}return i}_disposeVoxelTextures(){var e,t,s,i,a,r;this._stopVoxelization();for(let n=0;n<this._voxelMrtsZaxis.length;n++)this._triPlanarVoxelization&&(this._voxelMrtsXaxis[n].dispose(!0),this._voxelMrtsYaxis[n].dispose(!0)),this._voxelMrtsZaxis[n].dispose(!0);this._triPlanarVoxelization&&((e=this._voxelGridXaxis)==null||e.dispose(),(t=this._voxelGridYaxis)==null||t.dispose(),(s=this._voxelGridRT)==null||s.dispose()),(i=this._voxelGridZaxis)==null||i.dispose(),this._mipArray.forEach(n=>{n.dispose()}),(a=this._voxelMaterial)==null||a.dispose(),(r=this._voxelSlabDebugMaterial)==null||r.dispose(),this._mipArray=[],this._voxelMrtsXaxis=[],this._voxelMrtsYaxis=[],this._voxelMrtsZaxis=[]}_createVoxelMaterials(){const e=this._engine.isWebGPU;this._voxelMaterial=new st("voxelization",this._scene,"iblVoxelGrid",{uniforms:["world","viewMatrix","invWorldScale","nearPlane","farPlane","stepSize"],defines:["MAX_DRAW_BUFFERS "+this._maxDrawBuffers],shaderLanguage:e?1:0,extraInitializationsAsync:async()=>{e?await Promise.all([S(()=>import("./nativeXRFrame-DgHx7Vcb.js").then(t=>t.s7),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29])),S(()=>import("./nativeXRFrame-DgHx7Vcb.js").then(t=>t.s8),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29]))]):await Promise.all([S(()=>import("./nativeXRFrame-DgHx7Vcb.js").then(t=>t.s5),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29])),S(()=>import("./nativeXRFrame-DgHx7Vcb.js").then(t=>t.s6),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29]))])}}),this._voxelMaterial.cullBackFaces=!1,this._voxelMaterial.backFaceCulling=!1,this._voxelMaterial.depthFunction=je.ALWAYS,this._voxelSlabDebugMaterial=new st("voxelSlabDebug",this._scene,"iblVoxelSlabDebug",{uniforms:["world","viewMatrix","cameraViewMatrix","projection","invWorldScale","nearPlane","farPlane","stepSize"],defines:["MAX_DRAW_BUFFERS "+this._maxDrawBuffers],shaderLanguage:e?1:0,extraInitializationsAsync:async()=>{e?await Promise.all([S(()=>import("./nativeXRFrame-DgHx7Vcb.js").then(t=>t.se),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29])),S(()=>import("./nativeXRFrame-DgHx7Vcb.js").then(t=>t.sd),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29]))]):await Promise.all([S(()=>import("./nativeXRFrame-DgHx7Vcb.js").then(t=>t.sc),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29])),S(()=>import("./nativeXRFrame-DgHx7Vcb.js").then(t=>t.sb),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29]))])}})}_setDebugBindings(){this._voxelSlabDebugMaterial.setMatrix("projection",this._scene.activeCamera.getProjectionMatrix()),this._voxelSlabDebugMaterial.setMatrix("cameraViewMatrix",this._scene.activeCamera.getViewMatrix())}isReady(){let e=this.getVoxelGrid().isReady();for(let t=0;t<this._mipArray.length;t++){const s=this._mipArray[t].isReady();e&&(e=s)}return!(!e||this._voxelizationInProgress)}_stopVoxelization(){this._removeVoxelRTs(this._voxelMrtsXaxis),this._removeVoxelRTs(this._voxelMrtsYaxis),this._removeVoxelRTs(this._voxelMrtsZaxis)}_removeVoxelRTs(e){const t=this._renderTargets.findIndex(s=>s===e[0]);if(t>=0)this._renderTargets.splice(t,e.length);else{const s=this._scene.customRenderTargets.findIndex(i=>i===e[0]);s>=0&&this._scene.customRenderTargets.splice(s,e.length)}}updateVoxelGrid(e){this._stopVoxelization(),this._includedMeshes=e,this._voxelizationInProgress=!0,this._triPlanarVoxelization?(this._addRTsForRender(this._voxelMrtsXaxis,e,0),this._addRTsForRender(this._voxelMrtsYaxis,e,1),this._addRTsForRender(this._voxelMrtsZaxis,e,2)):this._addRTsForRender(this._voxelMrtsZaxis,e,2),this._voxelDebugEnabled&&this._addRTsForRender([this._voxelSlabDebugRT],e,this._voxelDebugAxis,1,!0),this._renderVoxelGridBound=this._renderVoxelGrid.bind(this),this._scene.onAfterRenderObservable.add(this._renderVoxelGridBound)}_renderVoxelGrid(){if(this._voxelizationInProgress){let e=this.getVoxelGrid().isReady();for(let t=0;t<this._mipArray.length;t++){const s=this._mipArray[t].isReady();e&&(e=s)}for(let t=0;t<this._renderTargets.length;t++){const s=this._renderTargets[t].isReadyForRendering();e&&(e=s)}e&&(this._renderTargets.forEach(t=>{t.render()}),this._stopVoxelization(),this._triPlanarVoxelization&&this._voxelGridRT.render(),this._generateMipMaps(),this._copyMipEffectWrapper.effect.whenCompiledAsync().then(()=>{this._copyMipMaps(),this._scene.onAfterRenderObservable.removeCallback(this._renderVoxelGridBound),this._voxelizationInProgress=!1,this.onVoxelizationCompleteObservable.notifyObservers()}))}}_addRTsForRender(e,t,s,i=0,a=!1){const r=1/this._computeNumberOfSlabs();let n;i===0?n=this._voxelMaterial:n=this._voxelSlabDebugMaterial,e.forEach((o,h)=>{o.renderList=[];const l=h*r,_=(h+1)*r,g=r/this._maxDrawBuffers,p=new d(0,0,0);let f=new d(0,0,1);s===0?f=new d(1,0,0):s===1&&(f=new d(0,1,0));let m=new d(0,1,0);s===1&&(m=new d(1,0,0)),o.onBeforeRenderObservable.add(()=>{n.setMatrix("viewMatrix",R.LookAtLH(p,f,m)),n.setMatrix("invWorldScale",this._invWorldScaleMatrix),n.setFloat("nearPlane",l),n.setFloat("farPlane",_),n.setFloat("stepSize",g)}),t.length!==0&&t.forEach(b=>{var y;b&&(b.subMeshes&&b.subMeshes.length>0&&((y=o.renderList)==null||y.push(b),o.setMaterialForRendering(b,n)),b.getChildMeshes().forEach(T=>{var v;T.subMeshes&&T.subMeshes.length>0&&((v=o.renderList)==null||v.push(T),o.setMaterialForRendering(T,n))}))})}),a?e.forEach(o=>{this._scene.customRenderTargets.indexOf(o)===-1&&this._scene.customRenderTargets.push(o)}):this._renderTargets=this._renderTargets.concat(e)}resize(){var e;(e=this._voxelSlabDebugRT)==null||e.resize({width:this._scene.getEngine().getRenderWidth(),height:this._scene.getEngine().getRenderHeight()})}dispose(){this._disposeVoxelTextures(),this._voxelSlabDebugRT&&(this._removeVoxelRTs([this._voxelSlabDebugRT]),this._voxelSlabDebugRT.dispose()),this._voxelDebugPass&&this._voxelDebugPass.dispose()}}class Ei{get voxelShadowOpacity(){return this._voxelShadowOpacity}set voxelShadowOpacity(e){this._voxelShadowOpacity=e}get ssShadowOpacity(){return this._ssShadowOpacity}set ssShadowOpacity(e){this._ssShadowOpacity=e}get sssSamples(){return this._sssSamples}set sssSamples(e){this._sssSamples=e}get sssStride(){return this._sssStride}set sssStride(e){this._sssStride=e}get sssMaxDist(){return this._sssMaxDist}set sssMaxDist(e){this._sssMaxDist=e}get sssThickness(){return this._sssThickness}set sssThickness(e){this._sssThickness=e}get voxelNormalBias(){return this._voxelNormalBias}set voxelNormalBias(e){this._voxelNormalBias=e}get voxelDirectionBias(){return this._voxelDirectionBias}set voxelDirectionBias(e){this._voxelDirectionBias=e}get sampleDirections(){return this._sampleDirections}set sampleDirections(e){this._sampleDirections=e}get envRotation(){return this._envRotation}set envRotation(e){this._envRotation=e}getOutputTexture(){return this._outputTexture}getDebugPassPP(){return this._debugPassPP||this._createDebugPass(),this._debugPassPP}get debugPassName(){return this._debugPassName}setWorldScaleMatrix(e){this._invWorldScaleMatrix=e}set coloredShadows(e){this._coloredShadows=e}get coloredShadows(){return this._coloredShadows}setDebugDisplayParams(e,t,s,i){this._debugSizeParams.set(e,t,s,i)}_createDebugPass(){const e=this._engine.isWebGPU;if(!this._debugPassPP){const t={width:this._engine.getRenderWidth(),height:this._engine.getRenderHeight(),uniforms:["sizeParams"],samplers:["debugSampler"],engine:this._engine,reusable:!0,shaderLanguage:e?1:0,extraInitializations:(s,i)=>{s?i.push(S(()=>import("./nativeXRFrame-DgHx7Vcb.js").then(a=>a.rU),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29]))):i.push(S(()=>import("./nativeXRFrame-DgHx7Vcb.js").then(a=>a.rT),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29])))}};this._debugPassPP=new be(this.debugPassName,"iblShadowDebug",t),this._debugPassPP.autoClear=!1,this._debugPassPP.onApplyObservable.add(s=>{s.setTexture("debugSampler",this._outputTexture),s.setVector4("sizeParams",this._debugSizeParams)})}}constructor(e,t){this._voxelShadowOpacity=1,this._sssSamples=16,this._sssStride=8,this._sssMaxDist=.05,this._sssThickness=.5,this._ssShadowOpacity=1,this._cameraInvView=R.Identity(),this._cameraInvProj=R.Identity(),this._invWorldScaleMatrix=R.Identity(),this._frameId=0,this._sampleDirections=4,this._shadowParameters=new le(0,0,0,0),this._sssParameters=new le(0,0,0,0),this._opacityParameters=new le(0,0,0,0),this._voxelBiasParameters=new le(0,0,0,0),this._voxelNormalBias=1.4,this._voxelDirectionBias=1.75,this.enabled=!0,this.debugEnabled=!1,this._debugPassName="Voxel Tracing Debug Pass",this._envRotation=0,this._coloredShadows=!1,this._debugVoxelMarchEnabled=!1,this._debugSizeParams=new le(0,0,0,0),this._scene=e,this._engine=e.getEngine(),this._renderPipeline=t,this._createTextures()}_createTextures(){const e=this._createDefines(),t=this._engine.isWebGPU,s={type:0,format:5,samplingMode:1,generateDepthBuffer:!1,shaderLanguage:t?1:0,extraInitializationsAsync:async()=>{t?await Promise.all([S(()=>import("./nativeXRFrame-DgHx7Vcb.js").then(a=>a.rS),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29]))]):await Promise.all([S(()=>import("./nativeXRFrame-DgHx7Vcb.js").then(a=>a.rR),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29]))])}};this._outputTexture=new Oe("voxelTracingPass",{width:this._engine.getRenderWidth(),height:this._engine.getRenderHeight()},"iblShadowVoxelTracing",this._scene,s),this._outputTexture.refreshRate=-1,this._outputTexture.autoClear=!1,this._outputTexture.defines=e,this._setBindings(this._scene.activeCamera);let i=0;this._scene.onBeforeRenderObservable.add(()=>{i=0}),this._scene.onAfterRenderTargetsRenderObservable.add(()=>{++i==2&&this.enabled&&this._outputTexture.isReady()&&(this._setBindings(this._scene.activeCamera),this._outputTexture.render())})}_createDefines(){let e="";return this._scene.useRightHandedSystem&&(e+=`#define RIGHT_HANDED
`),this._debugVoxelMarchEnabled&&(e+=`#define VOXEL_MARCH_DIAGNOSTIC_INFO_OPTION 1u
`),this._coloredShadows&&(e+=`#define COLOR_SHADOWS 1u
`),e}_setBindings(e){this._outputTexture.defines=this._createDefines(),this._outputTexture.setMatrix("viewMtx",e.getViewMatrix()),this._outputTexture.setMatrix("projMtx",e.getProjectionMatrix()),e.getProjectionMatrix().invertToRef(this._cameraInvProj),e.getViewMatrix().invertToRef(this._cameraInvView),this._outputTexture.setMatrix("invProjMtx",this._cameraInvProj),this._outputTexture.setMatrix("invViewMtx",this._cameraInvView),this._outputTexture.setMatrix("wsNormalizationMtx",this._invWorldScaleMatrix),this._frameId++;let t=0;this._scene.environmentTexture&&(t=this._scene.environmentTexture.rotationY??0),t=this._scene.useRightHandedSystem?-(t+.5*Math.PI):t-.5*Math.PI,t=t%(2*Math.PI),this._shadowParameters.set(this._sampleDirections,this._frameId,1,t),this._outputTexture.setVector4("shadowParameters",this._shadowParameters);const s=this._renderPipeline._getVoxelGridTexture(),i=Math.floor(Math.log2(s.getSize().width));this._voxelBiasParameters.set(this._voxelNormalBias,this._voxelDirectionBias,i,0),this._outputTexture.setVector4("voxelBiasParameters",this._voxelBiasParameters),this._sssParameters.set(this._sssSamples,this._sssStride,this._sssMaxDist,this._sssThickness),this._outputTexture.setVector4("sssParameters",this._sssParameters),this._opacityParameters.set(this._voxelShadowOpacity,this._ssShadowOpacity,0,0),this._outputTexture.setVector4("shadowOpacity",this._opacityParameters),this._outputTexture.setTexture("voxelGridSampler",s),this._outputTexture.setTexture("blueNoiseSampler",this._renderPipeline._getNoiseTexture());const a=this._scene.iblCdfGenerator;a&&this._outputTexture.setTexture("icdfSampler",a.getIcdfTexture()),this._coloredShadows&&this._scene.environmentTexture&&this._outputTexture.setTexture("iblSampler",this._scene.environmentTexture);const r=this._scene.geometryBufferRenderer;if(!r)return;const n=r.getTextureIndex(ae.SCREENSPACE_DEPTH_TEXTURE_TYPE);this._outputTexture.setTexture("depthSampler",r.getGBuffer().textures[n]);const o=r.getTextureIndex(ae.NORMAL_TEXTURE_TYPE);this._outputTexture.setTexture("worldNormalSampler",r.getGBuffer().textures[o])}resize(e=1){const t={width:Math.max(1,Math.floor(this._engine.getRenderWidth()*e)),height:Math.max(1,Math.floor(this._engine.getRenderHeight()*e))};this._outputTexture.resize(t,!1)}isReady(){return this._outputTexture.isReady()&&!(this._debugPassPP&&!this._debugPassPP.isReady())&&this._scene.iblCdfGenerator&&this._scene.iblCdfGenerator.getIcdfTexture().isReady()&&this._renderPipeline._getVoxelGridTexture().isReady()}dispose(){this._outputTexture.dispose(),this._debugPassPP&&this._debugPassPP.dispose()}}class Fi{getOutputTexture(){return this._outputTexture}getDebugPassPP(){return this._debugPassPP||this._createDebugPass(),this._debugPassPP}get debugPassName(){return this._debugPassName}setWorldScale(e){this._worldScale=e}setDebugDisplayParams(e,t,s,i){this._debugSizeParams.set(e,t,s,i)}_createDebugPass(){if(!this._debugPassPP){const e=this._engine.isWebGPU,t={width:this._engine.getRenderWidth(),height:this._engine.getRenderHeight(),textureFormat:6,textureType:0,samplingMode:1,uniforms:["sizeParams"],samplers:["debugSampler"],engine:this._engine,reusable:!1,shaderLanguage:e?1:0,extraInitializations:(s,i)=>{s?i.push(S(()=>import("./nativeXRFrame-DgHx7Vcb.js").then(a=>a.rU),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29]))):i.push(S(()=>import("./nativeXRFrame-DgHx7Vcb.js").then(a=>a.rT),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29])))}};this._debugPassPP=new be(this.debugPassName,"iblShadowDebug",t),this._debugPassPP.autoClear=!1,this._debugPassPP.onApplyObservable.add(s=>{s.setTexture("debugSampler",this._outputTexture),s.setVector4("sizeParams",this._debugSizeParams)})}}constructor(e,t){this._worldScale=1,this._blurParameters=new le(0,0,0,0),this.enabled=!0,this._debugPassName="Spatial Blur Debug Pass",this.debugEnabled=!1,this._debugSizeParams=new le(0,0,0,0),this._scene=e,this._engine=e.getEngine(),this._renderPipeline=t,this._createTextures()}_createTextures(){const e=this._engine.isWebGPU,t={type:0,format:5,samplingMode:1,generateDepthBuffer:!1,generateMipMaps:!1,shaderLanguage:e?1:0,extraInitializationsAsync:async()=>{e?await Promise.all([S(()=>import("./nativeXRFrame-DgHx7Vcb.js").then(i=>i.rV),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29]))]):await Promise.all([S(()=>import("./nativeXRFrame-DgHx7Vcb.js").then(i=>i.rW),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29]))])}};this._outputTexture=new Oe("spatialBlurPass",{width:this._engine.getRenderWidth(),height:this._engine.getRenderHeight()},"iblShadowSpatialBlur",this._scene,t,!1,!1,0),this._outputTexture.refreshRate=-1,this._outputTexture.autoClear=!1,this._setBindings();let s=0;this._scene.onBeforeRenderObservable.add(()=>{s=0}),this._scene.onAfterRenderTargetsRenderObservable.add(()=>{++s==2&&this.enabled&&this._outputTexture.isReady()&&(this._setBindings(),this._outputTexture.render())})}_setBindings(){this._outputTexture.setTexture("voxelTracingSampler",this._renderPipeline._getVoxelTracingTexture()),this._blurParameters.set(1,this._worldScale,0,0),this._outputTexture.setVector4("blurParameters",this._blurParameters);const t=this._scene.geometryBufferRenderer;if(!t)return;const s=t.getTextureIndex(ae.SCREENSPACE_DEPTH_TEXTURE_TYPE);this._outputTexture.setTexture("depthSampler",t.getGBuffer().textures[s]);const i=t.getTextureIndex(ae.NORMAL_TEXTURE_TYPE);this._outputTexture.setTexture("worldNormalSampler",t.getGBuffer().textures[i])}resize(e=1){const t={width:Math.max(1,Math.floor(this._engine.getRenderWidth()*e)),height:Math.max(1,Math.floor(this._engine.getRenderHeight()*e))};this._outputTexture.resize(t,!1)}isReady(){return this._outputTexture.isReady()&&!(this._debugPassPP&&!this._debugPassPP.isReady())}dispose(){this._outputTexture.dispose(),this._debugPassPP&&this._debugPassPP.dispose()}}class Oi{getOutputTexture(){return this._outputTexture}getDebugPassPP(){return this._debugPassPP||this._createDebugPass(),this._debugPassPP}get debugPassName(){return this._debugPassName}get remanence(){return this._remanence}set remanence(e){this._remanence=e}get reset(){return this._reset}set reset(e){this._reset=e}set isMoving(e){this._isMoving=e}setDebugDisplayParams(e,t,s,i){this._debugSizeParams.set(e,t,s,i)}_createDebugPass(){if(!this._debugPassPP){const e=this._engine.isWebGPU,t={width:this._engine.getRenderWidth(),height:this._engine.getRenderHeight(),textureFormat:5,textureType:0,samplingMode:1,uniforms:["sizeParams"],samplers:["debugSampler"],engine:this._engine,reusable:!1,shaderLanguage:e?1:0,extraInitializations:(s,i)=>{s?i.push(S(()=>import("./nativeXRFrame-DgHx7Vcb.js").then(a=>a.rU),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29]))):i.push(S(()=>import("./nativeXRFrame-DgHx7Vcb.js").then(a=>a.rT),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29])))}};this._debugPassPP=new be(this.debugPassName,"iblShadowDebug",t),this._debugPassPP.autoClear=!1,this._debugPassPP.onApplyObservable.add(s=>{s.setTexture("debugSampler",this._outputTexture),s.setVector4("sizeParams",this._debugSizeParams)})}}constructor(e,t){this._accumulationParams=new le(0,0,0,0),this.debugEnabled=!1,this.enabled=!0,this.onReadyObservable=new W,this._debugPassName="Shadow Accumulation Debug Pass",this._remanence=.9,this._reset=!0,this._isMoving=!1,this._debugSizeParams=new le(0,0,0,0),this._scene=e,this._engine=e.getEngine(),this._renderPipeline=t,this._createTextures()}_createTextures(){const e=this._engine.isWebGPU,t={type:2,format:5,samplingMode:1,generateDepthBuffer:!1,generateMipMaps:!1,shaderLanguage:e?1:0,extraInitializationsAsync:async()=>{e?await Promise.all([S(()=>import("./nativeXRFrame-DgHx7Vcb.js").then(r=>r.rX),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29]))]):await Promise.all([S(()=>import("./nativeXRFrame-DgHx7Vcb.js").then(r=>r.rY),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29]))])}};this._outputTexture=new Oe("shadowAccumulationPass",{width:this._engine.getRenderWidth(),height:this._engine.getRenderHeight()},"iblShadowAccumulation",this._scene,t),this._outputTexture.refreshRate=-1,this._outputTexture.autoClear=!1,this._outputTexture.onGeneratedObservable.addOnce(()=>{this.onReadyObservable.notifyObservers()}),this._setOutputTextureBindings();let s=0;this._scene.onBeforeRenderObservable.add(()=>{s=0}),this._scene.onAfterRenderTargetsRenderObservable.add(()=>{++s==2&&this.enabled&&this._outputTexture.isReady()&&(this._setOutputTextureBindings(),this._outputTexture.render())});const i={type:2,format:5,samplingMode:1,generateDepthBuffer:!1,generateMipMaps:!1,shaderLanguage:e?1:0,extraInitializationsAsync:async()=>{e?await Promise.all([S(()=>import("./pass.fragment-B8b0gssu.js"),__vite__mapDeps([30,1,2,3,4,5]))]):await Promise.all([S(()=>import("./pass.fragment-D7l-dmRx.js"),__vite__mapDeps([31,1,2,3,4,5]))])}};this._oldAccumulationCopy=new Oe("oldAccumulationRT",{width:this._engine.getRenderWidth(),height:this._engine.getRenderHeight()},"pass",this._scene,i,!1),this._oldAccumulationCopy.autoClear=!1,this._oldAccumulationCopy.refreshRate=1,this._oldAccumulationCopy.onBeforeGenerationObservable.add(this._setAccumulationCopyBindings.bind(this)),this._setAccumulationCopyBindings();const a={type:2,format:5,samplingMode:1,generateDepthBuffer:!1,generateMipMaps:!1,shaderLanguage:e?1:0,extraInitializationsAsync:async()=>{e?await Promise.all([S(()=>import("./pass.fragment-B8b0gssu.js"),__vite__mapDeps([30,1,2,3,4,5]))]):await Promise.all([S(()=>import("./pass.fragment-D7l-dmRx.js"),__vite__mapDeps([31,1,2,3,4,5]))])}};this._oldPositionCopy=new Oe("oldLocalPositionRT",{width:this._engine.getRenderWidth(),height:this._engine.getRenderHeight()},"pass",this._scene,a,!1),this._updatePositionCopy(),this._oldPositionCopy.autoClear=!1,this._oldPositionCopy.refreshRate=1,this._oldPositionCopy.onBeforeGenerationObservable.add(this._updatePositionCopy.bind(this))}_setOutputTextureBindings(){const e=this._isMoving?this.remanence:.99;this._accumulationParams.set(e,this.reset?1:0,this._renderPipeline.voxelGridSize,0),this._outputTexture.setTexture("spatialBlurSampler",this._renderPipeline._getSpatialBlurTexture()),this._outputTexture.setVector4("accumulationParameters",this._accumulationParams),this._outputTexture.setTexture("oldAccumulationSampler",this._oldAccumulationCopy?this._oldAccumulationCopy:this._renderPipeline._dummyTexture2d),this._outputTexture.setTexture("prevPositionSampler",this._oldPositionCopy?this._oldPositionCopy:this._renderPipeline._dummyTexture2d);const t=this._scene.geometryBufferRenderer;if(!t)return;const s=t.getTextureIndex(ae.VELOCITY_LINEAR_TEXTURE_TYPE);this._outputTexture.setTexture("motionSampler",t.getGBuffer().textures[s]);const i=t.getTextureIndex(ae.POSITION_TEXTURE_TYPE);this._outputTexture.setTexture("positionSampler",t.getGBuffer().textures[i]),this.reset=!1,this._isMoving=!1}_updatePositionCopy(){const e=this._scene.geometryBufferRenderer,t=e.getTextureIndex(ae.POSITION_TEXTURE_TYPE);this._oldPositionCopy.setTexture("textureSampler",e.getGBuffer().textures[t])}_setAccumulationCopyBindings(){this._oldAccumulationCopy.setTexture("textureSampler",this._outputTexture)}resize(e=1){const t={width:Math.max(1,Math.floor(this._engine.getRenderWidth()*e)),height:Math.max(1,Math.floor(this._engine.getRenderHeight()*e))};this._outputTexture.resize(t,!1),this._oldAccumulationCopy.resize(t,!1),this._oldPositionCopy.resize({width:this._engine.getRenderWidth(),height:this._engine.getRenderHeight()},!1),this.reset=!0}_disposeTextures(){this._oldAccumulationCopy.dispose(),this._oldPositionCopy.dispose(),this._outputTexture.dispose()}isReady(){return this._oldAccumulationCopy&&this._oldAccumulationCopy.isReady()&&this._oldPositionCopy&&this._oldPositionCopy.isReady()&&this._outputTexture.isReady()&&!(this._debugPassPP&&!this._debugPassPP.isReady())}dispose(){this._disposeTextures(),this._debugPassPP&&this._debugPassPP.dispose(),this.onReadyObservable.clear()}}class hr extends qt{resetAccumulation(){this._accumulationPass.reset=!0}get shadowOpacity(){return this._shadowOpacity}set shadowOpacity(e){this._shadowOpacity=e,this._setPluginParameters()}get coloredShadows(){return this._coloredShadows}set coloredShadows(e){this._coloredShadows=e,this._voxelTracingPass.coloredShadows=e,this._setPluginParameters()}get shadowRenderSizeFactor(){return this._renderSizeFactor}set shadowRenderSizeFactor(e){this._renderSizeFactor=Math.max(Math.min(e,1),0),this._voxelTracingPass.resize(e),this._spatialBlurPass.resize(e),this._accumulationPass.resize(e),this._setPluginParameters()}get voxelShadowOpacity(){var e;return(e=this._voxelTracingPass)==null?void 0:e.voxelShadowOpacity}set voxelShadowOpacity(e){this._voxelTracingPass&&(this._voxelTracingPass.voxelShadowOpacity=e)}get ssShadowOpacity(){var e;return(e=this._voxelTracingPass)==null?void 0:e.ssShadowOpacity}set ssShadowOpacity(e){this._voxelTracingPass&&(this._voxelTracingPass.ssShadowOpacity=e)}get ssShadowSampleCount(){var e;return(e=this._voxelTracingPass)==null?void 0:e.sssSamples}set ssShadowSampleCount(e){this._voxelTracingPass&&(this._voxelTracingPass.sssSamples=e)}get ssShadowStride(){var e;return(e=this._voxelTracingPass)==null?void 0:e.sssStride}set ssShadowStride(e){this._voxelTracingPass&&(this._voxelTracingPass.sssStride=e)}get ssShadowDistanceScale(){return this._sssMaxDistScale}set ssShadowDistanceScale(e){this._sssMaxDistScale=e,this._updateSSShadowParams()}get ssShadowThicknessScale(){return this._sssThicknessScale}set ssShadowThicknessScale(e){this._sssThicknessScale=e,this._updateSSShadowParams()}_getVoxelGridTexture(){var t;const e=(t=this._voxelRenderer)==null?void 0:t.getVoxelGrid();return e&&e.isReady()?e:this._dummyTexture3d}_getNoiseTexture(){const e=this._noiseTexture;return e&&e.isReady()?e:this._dummyTexture2d}_getVoxelTracingTexture(){var t;const e=(t=this._voxelTracingPass)==null?void 0:t.getOutputTexture();return e&&e.isReady()?e:this._dummyTexture2d}_getSpatialBlurTexture(){const e=this._spatialBlurPass.getOutputTexture();return e&&e.isReady()?e:this._dummyTexture2d}_getAccumulatedTexture(){var t;const e=(t=this._accumulationPass)==null?void 0:t.getOutputTexture();return e&&e.isReady()?e:this._dummyTexture2d}get gbufferDebugEnabled(){return this._gbufferDebugEnabled}set gbufferDebugEnabled(e){if(e&&!this.allowDebugPasses){D.Warn("Can't enable G-Buffer debug view without setting allowDebugPasses to true.");return}this._gbufferDebugEnabled=e,e?this._enableEffect(this._getGBufferDebugPass().name,this.cameras):this._disableEffect(this._getGBufferDebugPass().name,this.cameras)}get cdfDebugEnabled(){return this.scene.iblCdfGenerator?this.scene.iblCdfGenerator.debugEnabled:!1}set cdfDebugEnabled(e){if(this.scene.iblCdfGenerator){if(e&&!this.allowDebugPasses){D.Warn("Can't enable importance sampling debug view without setting allowDebugPasses to true.");return}e!==this.scene.iblCdfGenerator.debugEnabled&&(this.scene.iblCdfGenerator.debugEnabled=e,e?this._enableEffect(this.scene.iblCdfGenerator.debugPassName,this.cameras):this._disableEffect(this.scene.iblCdfGenerator.debugPassName,this.cameras))}}get voxelDebugEnabled(){var e;return(e=this._voxelRenderer)==null?void 0:e.voxelDebugEnabled}set voxelDebugEnabled(e){if(this._voxelRenderer){if(e&&!this.allowDebugPasses){D.Warn("Can't enable voxel debug view without setting allowDebugPasses to true.");return}this._voxelRenderer.voxelDebugEnabled=e,e?this._enableEffect(this._voxelRenderer.debugPassName,this.cameras):this._disableEffect(this._voxelRenderer.debugPassName,this.cameras)}}get voxelDebugAxis(){var e;return(e=this._voxelRenderer)==null?void 0:e.voxelDebugAxis}set voxelDebugAxis(e){this._voxelRenderer&&(this._voxelRenderer.voxelDebugAxis=e)}set voxelDebugDisplayMip(e){this._voxelRenderer&&this._voxelRenderer.setDebugMipNumber(e)}get voxelTracingDebugEnabled(){var e;return(e=this._voxelTracingPass)==null?void 0:e.debugEnabled}set voxelTracingDebugEnabled(e){if(this._voxelTracingPass){if(e&&!this.allowDebugPasses){D.Warn("Can't enable voxel tracing debug view without setting allowDebugPasses to true.");return}e!==this._voxelTracingPass.debugEnabled&&(this._voxelTracingPass.debugEnabled=e,e?this._enableEffect(this._voxelTracingPass.debugPassName,this.cameras):this._disableEffect(this._voxelTracingPass.debugPassName,this.cameras))}}get spatialBlurPassDebugEnabled(){return this._spatialBlurPass.debugEnabled}set spatialBlurPassDebugEnabled(e){if(this._spatialBlurPass){if(e&&!this.allowDebugPasses){D.Warn("Can't enable spatial blur debug view without setting allowDebugPasses to true.");return}e!==this._spatialBlurPass.debugEnabled&&(this._spatialBlurPass.debugEnabled=e,e?this._enableEffect(this._spatialBlurPass.debugPassName,this.cameras):this._disableEffect(this._spatialBlurPass.debugPassName,this.cameras))}}get accumulationPassDebugEnabled(){var e;return(e=this._accumulationPass)==null?void 0:e.debugEnabled}set accumulationPassDebugEnabled(e){if(this._accumulationPass){if(e&&!this.allowDebugPasses){D.Warn("Can't enable accumulation pass debug view without setting allowDebugPasses to true.");return}e!==this._accumulationPass.debugEnabled&&(this._accumulationPass.debugEnabled=e,e?this._enableEffect(this._accumulationPass.debugPassName,this.cameras):this._disableEffect(this._accumulationPass.debugPassName,this.cameras))}}addShadowCastingMesh(e){if(Array.isArray(e))for(const t of e)t&&this._shadowCastingMeshes.indexOf(t)===-1&&this._shadowCastingMeshes.push(t);else e&&this._shadowCastingMeshes.indexOf(e)===-1&&this._shadowCastingMeshes.push(e)}removeShadowCastingMesh(e){if(Array.isArray(e))for(const t of e){const s=this._shadowCastingMeshes.indexOf(t);s!==-1&&this._shadowCastingMeshes.splice(s,1)}else{const t=this._shadowCastingMeshes.indexOf(e);t!==-1&&this._shadowCastingMeshes.splice(t,1)}}get resolutionExp(){return this._voxelRenderer.voxelResolutionExp}set resolutionExp(e){if(e!==this._voxelRenderer.voxelResolutionExp){if(this._voxelRenderer.isVoxelizationInProgress()){D.Warn("Can't change the resolution of the voxel grid while voxelization is in progress.");return}this._voxelRenderer.voxelResolutionExp=Math.max(1,Math.min(e,8)),this._accumulationPass.reset=!0}}get sampleDirections(){var e;return(e=this._voxelTracingPass)==null?void 0:e.sampleDirections}set sampleDirections(e){this._voxelTracingPass&&(this._voxelTracingPass.sampleDirections=e)}get shadowRemanence(){var e;return(e=this._accumulationPass)==null?void 0:e.remanence}set shadowRemanence(e){this._accumulationPass&&(this._accumulationPass.remanence=e)}get envRotation(){var e;return(e=this._voxelTracingPass)==null?void 0:e.envRotation}set envRotation(e){this._voxelTracingPass&&(this._voxelTracingPass.envRotation=e,this._accumulationPass.reset=!0)}get allowDebugPasses(){return this._allowDebugPasses}set allowDebugPasses(e){this._allowDebugPasses!==e&&(this._allowDebugPasses=e,e&&this.scene.iblCdfGenerator?this.scene.iblCdfGenerator.isReady()?this._createDebugPasses():this.scene.iblCdfGenerator.onGeneratedObservable.addOnce(()=>{this._createDebugPasses()}):this._disposeDebugPasses())}static get IsSupported(){const e=Qe.LastCreatedEngine;return e?e._features.supportIBLShadows:!1}toggleShadow(e){this._enabled=e,this._voxelTracingPass.enabled=e,this._spatialBlurPass.enabled=e,this._accumulationPass.enabled=e,this._materialsWithRenderPlugin.forEach(t=>{if(t.pluginManager){const s=t.pluginManager.getPlugin(Ze.Name);s.isEnabled=e}}),this._setPluginParameters()}updateVoxelization(){if(this._shadowCastingMeshes.length===0){D.Warn("IBL Shadows: updateVoxelization called with no shadow-casting meshes to voxelize.");return}this._voxelRenderer.updateVoxelGrid(this._shadowCastingMeshes),this._voxelRenderer.onVoxelizationCompleteObservable.addOnce(()=>{this.onVoxelizationCompleteObservable.notifyObservers()}),this._updateSSShadowParams()}updateSceneBounds(){const e={min:new d(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),max:new d(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE)};this._shadowCastingMeshes.forEach(n=>{const o=n.getHierarchyBoundingVectors(!0);e.min=d.Minimize(e.min,o.min),e.max=d.Maximize(e.max,o.max)});const t=e.max.subtract(e.min);if(this.voxelGridSize=Math.max(t.x,t.y,t.z),this._shadowCastingMeshes.length===0||!isFinite(this.voxelGridSize)||this.voxelGridSize===0){D.Warn("IBL Shadows: Scene size is invalid. Can't update bounds."),this.voxelGridSize=1;return}const s=this.voxelGridSize/2,i=e.max.add(e.min).multiplyByFloats(-.5,-.5,-.5),a=R.Compose(new d(1/s,1/s,1/s),new M,new d(0,0,0));R.Compose(new d(1,1,1),new M,i).multiplyToRef(a,a),this._voxelTracingPass.setWorldScaleMatrix(a),this._voxelRenderer.setWorldScaleMatrix(a),this._spatialBlurPass.setWorldScale(s*2),this._updateSSShadowParams()}constructor(e,t,s={},i){super(t.getEngine(),e),this._allowDebugPasses=!1,this._debugPasses=[],this._shadowCastingMeshes=[],this._shadowOpacity=.8,this._enabled=!0,this._coloredShadows=!1,this._materialsWithRenderPlugin=[],this.onShadowTextureReadyObservable=new W,this.onNewIblReadyObservable=new W,this.onVoxelizationCompleteObservable=new W,this.voxelGridSize=1,this._renderSizeFactor=1,this._gbufferDebugEnabled=!1,this._gBufferDebugSizeParams=new le(0,0,0,0),this.scene=t,this._cameras=i||[t.activeCamera];const a=new Uint8Array([0,0,0,255]);this._dummyTexture2d=new Pt(a,1,1,je.TEXTUREFORMAT_RGBA,t,!1),this._dummyTexture3d=new $t(a,1,1,1,je.TEXTUREFORMAT_RGBA,t,!1);const r={};r[ae.SCREENSPACE_DEPTH_TEXTURE_TYPE]={textureFormat:6,textureType:1},r[ae.VELOCITY_LINEAR_TEXTURE_TYPE]={textureFormat:7,textureType:2},r[ae.POSITION_TEXTURE_TYPE]={textureFormat:5,textureType:2},r[ae.NORMAL_TEXTURE_TYPE]={textureFormat:5,textureType:2};const n=t.enableGeometryBufferRenderer(void 0,14,r);if(!n){D.Error("Geometry buffer renderer is required for IBL shadows to work.");return}this._geometryBufferRenderer=n,this._geometryBufferRenderer.enableScreenspaceDepth=!0,this._geometryBufferRenderer.enableVelocityLinear=!0,this._geometryBufferRenderer.enablePosition=!0,this._geometryBufferRenderer.enableNormal=!0,this._geometryBufferRenderer.generateNormalsInWorldSpace=!0,this.scene.enableIblCdfGenerator(),this.shadowOpacity=s.shadowOpacity||.8,this._voxelRenderer=new Ii(this.scene,this,s?s.resolutionExp:6,s.triPlanarVoxelization!==void 0?s.triPlanarVoxelization:!0),this._voxelTracingPass=new Ei(this.scene,this),this._spatialBlurPass=new Fi(this.scene,this),this._accumulationPass=new Oi(this.scene,this),this._accumulationPass.onReadyObservable.addOnce(()=>{this.onShadowTextureReadyObservable.notifyObservers()}),this.sampleDirections=s.sampleDirections||2,this.voxelShadowOpacity=s.voxelShadowOpacity??1,this.envRotation=s.envRotation??0,this.shadowRenderSizeFactor=s.shadowRenderSizeFactor||1,this.ssShadowOpacity=s.ssShadowsEnabled===void 0||s.ssShadowsEnabled?1:0,this.ssShadowDistanceScale=s.ssShadowDistanceScale||1.25,this.ssShadowSampleCount=s.ssShadowSampleCount||16,this.ssShadowStride=s.ssShadowStride||8,this.ssShadowThicknessScale=s.ssShadowThicknessScale||1,this.shadowRemanence=s.shadowRemanence??.75,this._noiseTexture=new K("https://assets.babylonjs.com/textures/blue_noise/blue_noise_rgb.png",this.scene,!1,!0,1),t.postProcessRenderPipelineManager.addPipeline(this),this.scene.onActiveCameraChanged.add(this._listenForCameraChanges.bind(this)),this.scene.onBeforeRenderObservable.add(this._updateBeforeRender.bind(this)),this._listenForCameraChanges(),this.scene.getEngine().onResizeObservable.add(this._handleResize.bind(this)),this.scene.iblCdfGenerator&&this.scene.iblCdfGenerator.onGeneratedObservable.add(()=>{this._setPluginParameters(),this.onNewIblReadyObservable.notifyObservers()})}_handleResize(){this._voxelRenderer.resize(),this._voxelTracingPass.resize(this.shadowRenderSizeFactor),this._spatialBlurPass.resize(this.shadowRenderSizeFactor),this._accumulationPass.resize(this.shadowRenderSizeFactor),this._setPluginParameters()}_getGBufferDebugPass(){if(this._gbufferDebugPass)return this._gbufferDebugPass;const e=this.engine.isWebGPU,t=["depthSampler","normalSampler","positionSampler","velocitySampler"],s={width:this.scene.getEngine().getRenderWidth(),height:this.scene.getEngine().getRenderHeight(),samplingMode:1,engine:this.scene.getEngine(),textureType:0,textureFormat:5,uniforms:["sizeParams"],samplers:t,reusable:!1,shaderLanguage:e?1:0,extraInitializations:(i,a)=>{i?a.push(S(()=>import("./nativeXRFrame-DgHx7Vcb.js").then(r=>r.s2),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29]))):a.push(S(()=>import("./nativeXRFrame-DgHx7Vcb.js").then(r=>r.s1),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29])))}};return this._gbufferDebugPass=new be("iblShadowGBufferDebug","iblShadowGBufferDebug",s),this._gbufferDebugPass.autoClear=!1,this._gbufferDebugPass.onApplyObservable.add(i=>{const a=this._geometryBufferRenderer.getTextureIndex(ae.SCREENSPACE_DEPTH_TEXTURE_TYPE);i.setTexture("depthSampler",this._geometryBufferRenderer.getGBuffer().textures[a]);const r=this._geometryBufferRenderer.getTextureIndex(ae.NORMAL_TEXTURE_TYPE);i.setTexture("normalSampler",this._geometryBufferRenderer.getGBuffer().textures[r]);const n=this._geometryBufferRenderer.getTextureIndex(ae.POSITION_TEXTURE_TYPE);i.setTexture("positionSampler",this._geometryBufferRenderer.getGBuffer().textures[n]);const o=this._geometryBufferRenderer.getTextureIndex(ae.VELOCITY_LINEAR_TEXTURE_TYPE);i.setTexture("velocitySampler",this._geometryBufferRenderer.getGBuffer().textures[o]),i.setVector4("sizeParams",this._gBufferDebugSizeParams),this.scene.activeCamera&&i.setFloat("maxDepth",this.scene.activeCamera.maxZ)}),this._gbufferDebugPass}_createDebugPasses(){this.scene.iblCdfGenerator?this._debugPasses=[{pass:this.scene.iblCdfGenerator.getDebugPassPP(),enabled:this.cdfDebugEnabled}]:this._debugPasses=[],this._debugPasses.push({pass:this._voxelRenderer.getDebugPassPP(),enabled:this.voxelDebugEnabled},{pass:this._voxelTracingPass.getDebugPassPP(),enabled:this.voxelTracingDebugEnabled},{pass:this._spatialBlurPass.getDebugPassPP(),enabled:this.spatialBlurPassDebugEnabled},{pass:this._accumulationPass.getDebugPassPP(),enabled:this.accumulationPassDebugEnabled},{pass:this._getGBufferDebugPass(),enabled:this.gbufferDebugEnabled});for(let t=0;t<this._debugPasses.length;t++)this._debugPasses[t].pass&&this.addEffect(new ht(this.scene.getEngine(),this._debugPasses[t].pass.name,()=>this._debugPasses[t].pass,!0));const e=this.cameras.slice();this.scene.postProcessRenderPipelineManager.detachCamerasFromRenderPipeline(this.name,this.cameras),this.scene.postProcessRenderPipelineManager.attachCamerasToRenderPipeline(this.name,e);for(let t=0;t<this._debugPasses.length;t++)this._debugPasses[t].pass&&(this._debugPasses[t].enabled?this._enableEffect(this._debugPasses[t].pass.name,this.cameras):this._disableEffect(this._debugPasses[t].pass.name,this.cameras))}_disposeEffectPasses(){this.scene.postProcessRenderPipelineManager.detachCamerasFromRenderPipeline(this.name,this.cameras),this._disposeDebugPasses(),this._reset()}_disposeDebugPasses(){for(let e=0;e<this._debugPasses.length;e++)this._disableEffect(this._debugPasses[e].pass.name,this.cameras),this._debugPasses[e].pass.dispose();this._debugPasses=[]}_updateDebugPasses(){let e=0;this._gbufferDebugEnabled&&e++,this.cdfDebugEnabled&&e++,this.voxelDebugEnabled&&e++,this.voxelTracingDebugEnabled&&e++,this.spatialBlurPassDebugEnabled&&e++,this.accumulationPassDebugEnabled&&e++;const t=Math.ceil(Math.sqrt(e)),s=Math.ceil(e/t),i=1/s,a=1/t;let r=0,n=0;this.gbufferDebugEnabled&&(this._gBufferDebugSizeParams.set(r,n,s,t),r-=i,r<=-1&&(r=0,n-=a)),this.cdfDebugEnabled&&this.scene.iblCdfGenerator&&(this.scene.iblCdfGenerator.setDebugDisplayParams(r,n,s,t),r-=i,r<=-1&&(r=0,n-=a)),this.voxelDebugEnabled&&(this._voxelRenderer.setDebugDisplayParams(r,n,s,t),r-=i,r<=-1&&(r=0,n-=a)),this.voxelTracingDebugEnabled&&(this._voxelTracingPass.setDebugDisplayParams(r,n,s,t),r-=i,r<=-1&&(r=0,n-=a)),this.spatialBlurPassDebugEnabled&&(this._spatialBlurPass.setDebugDisplayParams(r,n,s,t),r-=i,r<=-1&&(r=0,n-=a)),this.accumulationPassDebugEnabled&&(this._accumulationPass.setDebugDisplayParams(r,n,s,t),r-=i,r<=-1&&(r=0,n-=a))}_updateSSShadowParams(){this._voxelTracingPass.sssMaxDist=this._sssMaxDistScale*this.voxelGridSize/(1<<this.resolutionExp),this._voxelTracingPass.sssThickness=this._sssThicknessScale*.005*this.voxelGridSize}addShadowReceivingMaterial(e){e?Array.isArray(e)?e.forEach(t=>{this._addShadowSupportToMaterial(t)}):this._addShadowSupportToMaterial(e):this.scene.materials.forEach(t=>{this._addShadowSupportToMaterial(t)})}removeShadowReceivingMaterial(e){if(Array.isArray(e))e.forEach(t=>{var i;const s=this._materialsWithRenderPlugin.indexOf(t);if(s!==-1){this._materialsWithRenderPlugin.splice(s,1);const a=(i=t.pluginManager)==null?void 0:i.getPlugin(Ze.Name);a.isEnabled=!1}});else{const t=this._materialsWithRenderPlugin.indexOf(e);if(t!==-1){this._materialsWithRenderPlugin.splice(t,1);const s=e.pluginManager.getPlugin(Ze.Name);s.isEnabled=!1}}}_addShadowSupportToMaterial(e){var s;if(!(e instanceof Ge)&&!(e instanceof J))return;let t=(s=e.pluginManager)==null?void 0:s.getPlugin(Ze.Name);t||(t=new Ze(e)),this._materialsWithRenderPlugin.indexOf(e)===-1&&(this._enabled&&(t.iblShadowsTexture=this._getAccumulatedTexture().getInternalTexture(),t.shadowOpacity=this.shadowOpacity),t.isEnabled=this._enabled,t.isColored=this._coloredShadows,this._materialsWithRenderPlugin.push(e))}_setPluginParameters(){this._enabled&&this._materialsWithRenderPlugin.forEach(e=>{if(e.pluginManager){const t=e.pluginManager.getPlugin(Ze.Name);t.iblShadowsTexture=this._getAccumulatedTexture().getInternalTexture(),t.shadowOpacity=this.shadowOpacity,t.isColored=this._coloredShadows}})}_updateBeforeRender(){this._updateDebugPasses()}_listenForCameraChanges(){var e;(e=this.scene.activeCamera)==null||e.onViewMatrixChangedObservable.add(()=>{this._accumulationPass.isMoving=!0})}isReady(){return this._noiseTexture.isReady()&&this._voxelRenderer.isReady()&&this.scene.iblCdfGenerator&&this.scene.iblCdfGenerator.isReady()&&(!this._voxelTracingPass||this._voxelTracingPass.isReady())&&(!this._spatialBlurPass||this._spatialBlurPass.isReady())&&(!this._accumulationPass||this._accumulationPass.isReady())}getClassName(){return"IBLShadowsRenderPipeline"}dispose(){this._materialsWithRenderPlugin.splice(0).forEach(t=>{this.removeShadowReceivingMaterial(t)}),this._disposeEffectPasses(),this._noiseTexture.dispose(),this._voxelRenderer.dispose(),this._voxelTracingPass.dispose(),this._spatialBlurPass.dispose(),this._accumulationPass.dispose(),this._dummyTexture2d.dispose(),this._dummyTexture3d.dispose(),this.onNewIblReadyObservable.clear(),this.onShadowTextureReadyObservable.clear(),super.dispose()}}class lr{constructor(e){this.numSamples=400,this.radius=.1,this.intensity=.1,this.edgeArtifactCorrection=.1,this.rotateSample=!0,this.noiseFactor=100,this.useFullTexture=!1,this.rsm=e}dispose(){this.rsm.dispose()}}class cr extends ii{constructor(e,t,s,i,a=null,r=.01,n=K.TRILINEAR_SAMPLINGMODE,o){super(e,t,s,64,i,r,n,!0,a,o),this.name=e}}export{_r as AbortError,pr as AbstractActionManager,gr as AbstractAssetContainer,Su as AbstractAssetTask,Mu as AbstractAudioAnalyzer,vu as AbstractAudioBus,Gs as AbstractAudioNode,Bt as AbstractEngine,Ut as AbstractMesh,Bu as AbstractNamedAudioNode,Au as AbstractSound,Cu as AbstractSpatialAudio,Ru as AbstractSpatialAudioListener,Du as AbstractStereoAudio,wu as AcquireNativeObjectAsync,Iu as Action,mr as ActionEvent,Eu as ActionManager,mI as AddAnimationExtensions,Fu as AddBlock,fr as AddIndividualParser,br as AddParser,xr as AddRayExtensions,Ou as AddressMode,RE as AdvancedTimer,Gu as Aggregations,ku as AggregatorBlock,Vu as AlignBlock,Pr as AlphaState,zu as AmmoJSPlugin,Lu as AnaglyphArcRotateCamera,Nu as AnaglyphFreeCamera,Wu as AnaglyphGamepadCamera,Hu as AnaglyphPostProcess,Uu as AnaglyphUniversalCamera,ea as Analyser,yr as AndOrNotEvaluator,Tr as Angle,fI as Animatable,ju as AnimatedInputBlockTypes,ts as Animation,Qu as AnimationAssetTask,kI as AnimationEvent,bI as AnimationGroup,Xu as AnimationGroupMask,qu as AnimationGroupMaskMode,Zu as AnimationKeyInterpolation,$i as AnimationPropertiesOverride,Sr as AnimationRange,Yu as AnisotropyBlock,Mr as AppendSceneAsync,ok as ApplyLut,vr as ApplyPostProcess,Br as Arc2,Ku as ArcFollowCamera,$u as ArcRotateCamera,Ju as ArcRotateCameraGamepadInput,e_ as ArcRotateCameraInputsManager,t_ as ArcRotateCameraKeyboardMoveInput,s_ as ArcRotateCameraMouseWheelInput,i_ as ArcRotateCameraPointersInput,a_ as ArcRotateCameraVRDeviceOrientationInput,r_ as ArcTan2Block,Ar as AreIndices32Bits,n_ as AreaLight,Cr as AssetContainer,o_ as AssetTaskState,h_ as AssetsManager,l_ as AssetsProgressEvent,Ua as AsyncLock,Rr as AsyncLoop,ha as AttachToBoxBehavior,c_ as AudioBus,Dr as AudioEngine,ni as AudioEngineV2,d_ as AudioNodeType,wr as AudioSceneComponent,u_ as AutoLayoutMode,Ir as AutoReleaseWorkerPool,__ as AutoRotationBehavior,Fe as AxesViewer,$e as Axis,he as AxisDragGizmo,nt as AxisScaleGizmo,Er as BRDFTextureTools,p_ as BabylonFileLoaderConfiguration,SI as BackEase,g_ as BackgroundMaterial,m_ as BakedVertexAnimationManager,qa as BallAndSocketConstraint,Fr as BaseCameraMouseWheelInput,f_ as BaseCameraPointersInput,Or as BaseError,b_ as BaseParticleSystem,Be as BaseSixDofDragBehavior,Gr as BaseTexture,GV as BasisFileInfo,kV as BasisTools,VV as BasisToolsOptions,zV as BasisTranscodeConfiguration,kr as BezierCurve,MI as BezierCurveEase,x_ as BiPlanarBlock,P_ as BinaryFileAssetTask,Vr as BindBonesParameters,zr as BindFogParameters,Lr as BindLight,Nr as BindLightProperties,Wr as BindLights,Hr as BindLogDepth,Cs as BindMorphTargetParameters,Ur as BindSceneUniformBuffer,jr as BindTextureMatrix,EV as BitArray,y_ as BlackAndWhitePostProcess,T_ as BlendFactor,S_ as BlendOperation,M_ as BloomEffect,v_ as BloomMergePostProcess,B_ as BlurPostProcess,Qr as Bone,ga as BoneAxesViewer,A_ as BoneIKController,C_ as BoneLookController,R_ as BonesBlock,D_ as BooleanGeometryBlock,w_ as BooleanGeometryOperations,vI as BounceEase,I_ as BouncingBehavior,E_ as BoundingBlock,bt as BoundingBox,Us as BoundingBoxGizmo,F_ as BoundingBoxRenderer,jt as BoundingInfo,pa as BoundingInfoHelper,Ds as BoundingSphere,O_ as BoxBlock,G_ as BoxBuilder,k_ as BoxParticleEmitter,Xr as Buffer,V_ as BufferBindingType,z_ as BufferMapState,L_ as BufferUsage,N_ as CSG,W_ as CSG2,lt as Camera,H_ as CameraGizmo,qr as CameraInputTypes,Zr as CameraInputsManager,U_ as CannonJSPlugin,j_ as CanvasAlphaMode,Q_ as CanvasToneMappingMode,X_ as CapsuleBlock,q_ as CapsuleBuilder,Z_ as CascadedShadowGenerator,Y_ as CharacterSupportedState,K_ as ChromaticAberrationPostProcess,BI as CircleEase,$_ as CircleOfConfusionPostProcess,J_ as ClampBlock,ep as CleanGeometryBlock,tp as ClearCoatBlock,sp as ClipPlanesBlock,ip as ClipboardEventTypes,ap as ClipboardInfo,rp as CloudBlock,Yr as CloudPoint,np as Collider,O as Color3,op as Color3Gradient,Me as Color4,hp as ColorConverterBlock,lp as ColorCorrectionPostProcess,Kr as ColorCurves,cp as ColorGradient,dp as ColorGradingTexture,up as ColorMergerBlock,_p as ColorSplitterBlock,pp as ColorWrite,gp as CombineAction,mp as CompareFunction,$r as CompatibilityOptions,fp as CompilationMessageType,bp as CompleteGreasedLineColorTable,xp as CompleteGreasedLineWidthTable,hk as CompressionCodes,Pp as ComputeAlpha,yp as ComputeBeta,Tp as ComputeBindingType,Sp as ComputeEffect,Mp as ComputeNormalsBlock,vp as ComputePassTimestampLocation,zs as ComputeShader,_i as ComputeShaderBoundingHelper,Bp as ComputeShaderParticleSystem,Ap as Condition,Cp as ConditionBlock,Rp as ConditionBlockTests,Dp as ConditionalBlock,wp as ConditionalBlockConditions,Ip as ConeDirectedParticleEmitter,Ep as ConeParticleEmitter,Jr as Constants,Fp as ContainerAssetTask,Op as ConversionMode,Gp as ConvolutionPostProcess,en as Coordinate,tn as CopyFloatData,kp as CopyTextureToTexture,sn as CopyTools,an as CreateAlignedTypedArray,ta as CreateAudioBusAsync,na as CreateAudioEngineAsync,Ls as CreateBox,Vp as CreateBoxVertexData,Ws as CreateCapsule,zp as CreateCapsuleVertexData,xt as CreateCylinder,Lp as CreateCylinderVertexData,Np as CreateDashedLines,Wp as CreateDashedLinesVertexData,Hp as CreateDecal,YG as CreateDecoderAsync,ti as CreateDisc,Up as CreateDiscVertexData,rn as CreateEnvTextureAsync,jp as CreateGeodesic,Qp as CreateGoldberg,Xp as CreateGoldbergVertexData,qp as CreateGreasedLine,Zp as CreateGreasedLineMaterial,Yp as CreateGround,Kp as CreateGroundFromHeightMap,$p as CreateGroundFromHeightMapVertexData,Jp as CreateGroundVertexData,eg as CreateHemisphere,Oa as CreateHotSpotQueryForPickingInfo,tg as CreateIcoSphere,sg as CreateIcoSphereVertexData,nn as CreateImageBitmapFromSource,on as CreateIrradianceImageDataArrayBufferViews,ig as CreateLathe,ag as CreateLineSystem,rg as CreateLineSystemVertexData,re as CreateLines,sa as CreateMainAudioBusAsync,hn as CreatePickingRay,ln as CreatePickingRayInCameraSpace,cn as CreatePickingRayInCameraSpaceToRef,dn as CreatePickingRayToRef,Hs as CreatePlane,ng as CreatePlaneVertexData,og as CreatePolygon,hg as CreatePolygonVertexData,Ft as CreatePolyhedron,lg as CreatePolyhedronVertexData,un as CreateRadianceImageDataArrayBufferViews,_n as CreateResizedCopy,cg as CreateRibbon,dg as CreateRibbonVertexData,ug as CreateScreenshot,_g as CreateScreenshotAsync,pg as CreateScreenshotUsingRenderTarget,gg as CreateScreenshotUsingRenderTargetAsync,mg as CreateScreenshotWithResizeAsync,fg as CreateSegmentedBoxVertexData,ia as CreateSoundAsync,aa as CreateSoundBufferAsync,Ns as CreateSphere,bg as CreateSphereVertexData,ra as CreateStreamingSoundAsync,xg as CreateText,Pg as CreateTextShapePaths,yg as CreateTiledBox,Tg as CreateTiledBoxVertexData,Sg as CreateTiledGround,Mg as CreateTiledGroundVertexData,vg as CreateTiledPlane,Bg as CreateTiledPlaneVertexData,Ag as CreateTorus,Cg as CreateTorusKnot,Rg as CreateTorusKnotVertexData,Dg as CreateTorusVertexData,wg as CreateTube,Ig as CrossBlock,pn as CubeMapToSphericalPolynomialTools,gn as CubeTexture,Eg as CubeTextureAssetTask,AI as CubicEase,Fg as CullMode,Og as CurrentScreenBlock,mn as Curve3,Gg as CurveBlock,kg as CurveBlockTypes,Vg as CustomBlock,zg as CustomOptimization,Lg as CustomParticleEmitter,Si as CustomProceduralTexture,Ng as CylinderBlock,Wg as CylinderBuilder,Hg as CylinderDirectedParticleEmitter,Ug as CylinderParticleEmitter,jV as DDSTools,ut as DataBuffer,VI as DataReader,jg as DataStorage,Qg as Database,Xg as DebugBlock,qg as DebugLayer,Zg as DebugLayerTab,Yg as DecalBuilder,Kg as DecalMapConfiguration,$g as DecalMapDefines,fn as Decode,is as DecodeBase64ToBinary,bn as DecodeBase64ToString,xn as DecodeBase64UrlToBinary,Pn as DecodeBase64UrlToString,lk as DecodeFloat32,KG as DecodeRunLength,yn as DeepCopier,Jg as DefaultCollisionCoordinator,Ck as DefaultKTX2DecoderOptions,em as DefaultLoadingScreen,tm as DefaultRenderingPipeline,ai as Deferred,Tn as DepthCullingState,sm as DepthOfFieldBlurPostProcess,im as DepthOfFieldEffect,am as DepthOfFieldEffectBlurLevel,rm as DepthOfFieldMergePostProcess,nm as DepthPeelingRenderer,om as DepthPeelingSceneComponent,hm as DepthReducer,lm as DepthRenderer,cm as DepthRendererSceneComponent,Ai as DepthSortedParticle,dm as DerivativeBlock,um as DesaturateBlock,Ts as DetailMapConfiguration,Sn as DeviceInputEventType,_m as DeviceLostReason,pm as DeviceOrientationCamera,Mn as DeviceSource,vn as DeviceSourceManager,Bn as DeviceType,An as DirectionalLight,fa as DirectionalLightFrustumViewer,gm as DiscBlock,mm as DiscBuilder,fm as DiscardBlock,bm as DisplayPassPostProcess,xm as DistanceBlock,Za as DistanceConstraint,Pm as DistanceJoint,ym as DivideBlock,Tm as DoNothingAction,Cn as DomManagement,Sm as DotBlock,Mm as DracoCompression,Rn as DracoDecoder,vm as DracoEncoder,Bm as DragOperation,Rt as DrawWrapper,Dn as DualSenseInput,Am as DualShockButton,Cm as DualShockDpad,wn as DualShockInput,Rm as DualShockPad,In as DumpTools,Dm as DynamicFloat32Array,wm as DynamicTexture,ck as EXROutputType,CI as EasingFunction,UE as EasingFunctionType,Im as EdgesRenderer,gs as Effect,En as EffectFallbacks,Em as EffectLayer,Fm as EffectLayerSceneComponent,Fs as EffectRenderer,Os as EffectWrapper,RI as ElasticEase,Om as ElbowBlock,ss as EncodeArrayBufferToBase64,Fn as EndsWith,je as Engine,ba as EngineFactory,Rk as EngineFormat,yi as EngineInstrumentation,Qe as EngineStore,Gm as EngineView,On as EnumerateFloatValues,km as EnvironmentHelper,Gn as EnvironmentTextureTools,Te as Epsilon,Vm as EquiRectangularCubeTexture,zm as EquiRectangularCubeTextureAssetTask,kn as ErrorCodes,Lm as ErrorFilter,Vn as EventConstants,zn as EventState,Nm as ExecuteCodeAction,Ln as ExitFullscreen,Nn as ExitPointerlock,DI as ExponentialEase,dk as ExrLoaderGlobalConfiguration,Wm as ExternalTexture,Hm as ExtractHighlightsPostProcess,Um as ExtrudePolygon,jm as ExtrudeShape,Qm as ExtrudeShapeCustom,Xm as FactorGradient,la as FadeInOutBehavior,qm as FeatureName,Wn as FileTools,Hn as FileToolsOptions,es as FilesInput,Ms as FilesInputStore,Zm as FilterMode,Ym as FilterPostProcess,Un as FixFlippedFaces,jn as FlowGraph,_F as FlowGraphAbsBlock,pF as FlowGraphAcosBlock,gF as FlowGraphAcoshBlock,Qn as FlowGraphAction,mF as FlowGraphAddBlock,rG as FlowGraphArrayIndexBlock,fF as FlowGraphAsinBlock,bF as FlowGraphAsinhBlock,Xn as FlowGraphAssetType,xF as FlowGraphAtan2Block,PF as FlowGraphAtanBlock,yF as FlowGraphAtanhBlock,XE as FlowGraphBezierCurveEasingBlock,TF as FlowGraphBitwiseAndBlock,SF as FlowGraphBitwiseLeftShiftBlock,MF as FlowGraphBitwiseNotBlock,vF as FlowGraphBitwiseOrBlock,BF as FlowGraphBitwiseRightShiftBlock,AF as FlowGraphBitwiseXorBlock,qn as FlowGraphBlock,Km as FlowGraphBlockNames,YO as FlowGraphBooleanToFloat,KO as FlowGraphBooleanToInt,rE as FlowGraphBranchBlock,xE as FlowGraphCallCounterBlock,FE as FlowGraphCancelDelayBlock,CF as FlowGraphCeilBlock,RF as FlowGraphClampBlock,oG as FlowGraphCodeExecutionBlock,yO as FlowGraphCombineMatrix2DBlock,TO as FlowGraphCombineMatrix3DBlock,SO as FlowGraphCombineMatrixBlock,MO as FlowGraphCombineVector2Block,vO as FlowGraphCombineVector3Block,BO as FlowGraphCombineVector4Block,ZE as FlowGraphConditionalDataBlock,Zn as FlowGraphConnection,Yn as FlowGraphConnectionType,iE as FlowGraphConsoleLogBlock,oF as FlowGraphConstantBlock,Kn as FlowGraphContext,iG as FlowGraphContextBlock,$n as FlowGraphCoordinator,DF as FlowGraphCosBlock,wF as FlowGraphCoshBlock,NO as FlowGraphCrossBlock,IF as FlowGraphCubeRootBlock,Jn as FlowGraphDataConnection,dF as FlowGraphDataSwitchBlock,SE as FlowGraphDebounceBlock,EF as FlowGraphDegToRadBlock,FO as FlowGraphDeterminantBlock,FF as FlowGraphDivideBlock,oE as FlowGraphDoNBlock,WO as FlowGraphDotBlock,OF as FlowGraphEBlock,jE as FlowGraphEasingBlock,GF as FlowGraphEqualityBlock,eo as FlowGraphEventBlock,to as FlowGraphExecutionBlock,kF as FlowGraphExpBlock,AO as FlowGraphExtractMatrix2DBlock,CO as FlowGraphExtractMatrix3DBlock,RO as FlowGraphExtractMatrixBlock,DO as FlowGraphExtractVector2Block,wO as FlowGraphExtractVector3Block,IO as FlowGraphExtractVector4Block,vE as FlowGraphFlipFlopBlock,$O as FlowGraphFloatToBoolean,JO as FlowGraphFloatToInt,VF as FlowGraphFloorBlock,lE as FlowGraphForLoopBlock,zF as FlowGraphFractionBlock,dG as FlowGraphFunctionReferenceBlock,lF as FlowGraphGetAssetBlock,iF as FlowGraphGetPropertyBlock,KE as FlowGraphGetVariableBlock,LF as FlowGraphGreaterThanBlock,NF as FlowGraphGreaterThanOrEqualBlock,lG as FlowGraphIndexOfBlock,WF as FlowGraphInfBlock,eG as FlowGraphIntToBoolean,tG as FlowGraphIntToFloat,so as FlowGraphInteger,WE as FlowGraphInterpolationBlock,OO as FlowGraphInvertMatrixBlock,HF as FlowGraphIsInfinityBlock,UF as FlowGraphIsNanBlock,eE as FlowGraphJsonPointerParserBlock,jF as FlowGraphLeadingZerosBlock,HO as FlowGraphLengthBlock,QF as FlowGraphLessThanBlock,XF as FlowGraphLessThanOrEqualBlock,qF as FlowGraphLog10Block,ZF as FlowGraphLog2Block,YF as FlowGraphLogBlock,io as FlowGraphLogger,KF as FlowGraphMathInterpolationBlock,ao as FlowGraphMatrix2D,ro as FlowGraphMatrix3D,GO as FlowGraphMatrixComposeBlock,kO as FlowGraphMatrixDecomposeBlock,VO as FlowGraphMatrixMultiplicationBlock,$F as FlowGraphMaxBlock,_G as FlowGraphMeshPickEventBlock,JF as FlowGraphMinBlock,eO as FlowGraphModuloBlock,_E as FlowGraphMultiGateBlock,tO as FlowGraphMultiplyBlock,sO as FlowGraphNaNBlock,iO as FlowGraphNegationBlock,UO as FlowGraphNormalizeBlock,aO as FlowGraphOneBitsCounterBlock,xa as FlowGraphPathConverter,tE as FlowGraphPathConverterComponent,LE as FlowGraphPauseAnimationBlock,rO as FlowGraphPiBlock,GE as FlowGraphPlayAnimationBlock,SG as FlowGraphPointerOutEventBlock,vG as FlowGraphPointerOverEventBlock,nO as FlowGraphPowerBlock,oO as FlowGraphRadToDegBlock,hO as FlowGraphRandomBlock,fG as FlowGraphReceiveCustomEventBlock,jO as FlowGraphRotate2DBlock,QO as FlowGraphRotate3DBlock,lO as FlowGraphRoundBlock,cO as FlowGraphSaturateBlock,gG as FlowGraphSceneReadyEventBlock,yG as FlowGraphSceneTickEventBlock,xG as FlowGraphSendCustomEventBlock,AE as FlowGraphSequenceBlock,DE as FlowGraphSetDelayBlock,rF as FlowGraphSetPropertyBlock,JE as FlowGraphSetVariableBlock,dO as FlowGraphSignBlock,no as FlowGraphSignalConnection,uO as FlowGraphSinBlock,_O as FlowGraphSinhBlock,pO as FlowGraphSquareRootBlock,oo as FlowGraphState,VE as FlowGraphStopAnimationBlock,gO as FlowGraphSubtractBlock,gE as FlowGraphSwitchBlock,mO as FlowGraphTanBlock,fO as FlowGraphTanhBlock,dE as FlowGraphThrottleBlock,bO as FlowGraphTrailingZerosBlock,XO as FlowGraphTransformBlock,qO as FlowGraphTransformCoordinatesBlock,tF as FlowGraphTransformCoordinatesSystemBlock,zO as FlowGraphTransposeBlock,xO as FlowGraphTruncBlock,ho as FlowGraphTypes,fE as FlowGraphWaitAllBlock,yE as FlowGraphWhileLoopBlock,$m as FluidRenderer,Jm as FluidRendererSceneComponent,ef as FluidRenderingDebug,tf as FluidRenderingObject,sf as FluidRenderingObjectCustomParticles,af as FluidRenderingObjectParticleSystem,rf as FluidRenderingTargetRenderer,nf as FlyCamera,of as FlyCameraInputsManager,hf as FlyCameraKeyboardInput,lf as FlyCameraMouseInput,cf as FogBlock,ua as FollowBehavior,df as FollowCamera,uf as FollowCameraInputsManager,_f as FollowCameraKeyboardMoveInput,pf as FollowCameraMouseWheelInput,gf as FollowCameraPointersInput,mf as FragCoordBlock,ff as FragDepthBlock,Zs as FragmentOutputBlock,bf as FragmentOutputBlockColorSpace,xf as FrameGraph,Pf as FrameGraphAnaglyphTask,yf as FrameGraphBlackAndWhiteTask,Tf as FrameGraphBloomTask,Sf as FrameGraphBlurTask,Mf as FrameGraphCascadedShadowGeneratorTask,vf as FrameGraphChromaticAberrationTask,Bf as FrameGraphCircleOfConfusionTask,Af as FrameGraphClearTextureTask,Cf as FrameGraphContext,Rf as FrameGraphCopyToBackbufferColorTask,Df as FrameGraphCopyToTextureTask,wf as FrameGraphCullObjectsTask,If as FrameGraphCullPass,Ef as FrameGraphDepthOfFieldTask,Ff as FrameGraphExecuteTask,Of as FrameGraphExtractHighlightsTask,Gf as FrameGraphGenerateMipMapsTask,kf as FrameGraphGeometryRendererTask,Vf as FrameGraphGlowLayerTask,zf as FrameGraphHighlightLayerTask,Pa as FrameGraphObjectList,Lf as FrameGraphObjectRendererTask,Nf as FrameGraphPass,Wf as FrameGraphPassCubeTask,Hf as FrameGraphPassTask,Uf as FrameGraphPostProcessTask,jf as FrameGraphRenderContext,Qf as FrameGraphRenderPass,Xf as FrameGraphRenderTarget,qf as FrameGraphSSRRenderingPipelineTask,Zf as FrameGraphShadowGeneratorTask,Yf as FrameGraphTAAObjectRendererTask,Kf as FrameGraphTask,$f as FrameGraphTextureManager,Jf as FrameGraphUtilityLayerRendererTask,eb as FramingBehavior,lo as FreeCamera,tb as FreeCameraDeviceOrientationInput,sb as FreeCameraGamepadInput,co as FreeCameraInputsManager,uo as FreeCameraKeyboardMoveInput,_o as FreeCameraMouseInput,po as FreeCameraMouseWheelInput,go as FreeCameraTouchInput,ib as FreeCameraVirtualJoystickInput,ab as FresnelBlock,rb as FresnelParameters,mo as FromHalfFloat,nb as FrontFace,ob as FrontFacingBlock,fo as Frustum,hb as FxaaPostProcess,lr as GIRSM,lb as GIRSMManager,cb as GIRSMRenderPluginMaterial,db as GPUParticleSystem,ub as GPUPicker,bo as GUID,_b as Gamepad,pb as GamepadCamera,gb as GamepadManager,mb as GamepadSystemSceneComponent,qs as GaussianBlock,Qs as GaussianSplattingBlock,xo as GaussianSplattingMaterial,Po as GaussianSplattingMesh,yo as GenerateBase64StringFromPixelData,To as GenerateBase64StringFromTexture,So as GenerateBase64StringFromTextureAsync,fb as GenericPad,bb as GeodesicData,Mo as Geometry,xb as GeometryArcTan2Block,ae as GeometryBufferRenderer,Pb as GeometryBufferRendererSceneComponent,yb as GeometryClampBlock,Tb as GeometryCollectionBlock,Sb as GeometryCrossBlock,Mb as GeometryCurveBlock,vb as GeometryCurveBlockTypes,Bb as GeometryDesaturateBlock,Ab as GeometryDistanceBlock,Cb as GeometryDotBlock,Rb as GeometryEaseBlock,Db as GeometryEaseBlockTypes,wb as GeometryElbowBlock,Ib as GeometryInfoBlock,Eb as GeometryInputBlock,Fb as GeometryInterceptorBlock,Ob as GeometryLengthBlock,Gb as GeometryLerpBlock,kb as GeometryModBlock,Vb as GeometryNLerpBlock,zb as GeometryOptimizeBlock,Lb as GeometryOutputBlock,Nb as GeometryPosterizeBlock,Wb as GeometryPowBlock,vo as GeometryRenderingTextureClearType,Hb as GeometryReplaceColorBlock,Ub as GeometryRotate2dBlock,jb as GeometrySmoothStepBlock,Qb as GeometryStepBlock,Xb as GeometryTextureBlock,qb as GeometryTextureFetchBlock,Zb as GeometryTransformBlock,Yb as GeometryTrigonometryBlock,Kb as GeometryTrigonometryBlockOperations,Bo as GetClass,Ao as GetClassName,Co as GetDOMTextContent,zI as GetDataOutConnectionByUniqueId,Ro as GetEnvInfo,Do as GetEnvironmentBRDFTexture,$G as GetExrHeader,wo as GetExtensionFromUrl,Io as GetFloatData,Eo as GetFlowGraphAssetWithType,Fo as GetFogState,Oo as GetFontOffset,Go as GetForwardRay,ko as GetForwardRayToRef,Ga as GetHotSpotToRef,Vo as GetIndividualParser,LV as GetInternalFormatFromBasisFormat,zo as GetParser,$b as GetPointsCount,Lo as GetRegisteredSceneLoaderPluginMetadata,LI as GetSignalInConnectionByUniqueId,az as GetTGAHeader,No as GetTextureDataAsync,vi as GetTransformedPosition,Wo as GetTypeByteLength,Ho as GetTypedArrayConstructor,Uo as GetTypedArrayData,Ae as Gizmo,Jb as GizmoAnchorPoint,ex as GizmoCoordinatesMode,ya as GizmoManager,tx as GlowLayer,sx as GoldbergMesh,ix as GradientBlock,ax as GradientBlockColorStep,rx as GradientHelper,nx as GrainPostProcess,ox as GreasedLineBaseMesh,hx as GreasedLineMaterialDefaults,lx as GreasedLineMesh,cx as GreasedLineMeshColorDistribution,dx as GreasedLineMeshColorDistributionType,ux as GreasedLineMeshColorMode,_x as GreasedLineMeshMaterialType,px as GreasedLineMeshWidthDistribution,gx as GreasedLinePluginMaterial,mx as GreasedLineRibbonAutoDirectionMode,fx as GreasedLineRibbonFacesMode,bx as GreasedLineRibbonMesh,xx as GreasedLineRibbonPointsMode,Px as GreasedLineSimpleMaterial,yx as GreasedLineTools,Tx as GreasedLineUseOffsetsSimpleMaterialDefine,Sx as GridBlock,Mx as GroundBuilder,vx as GroundMesh,Bx as HDRCubeTexture,Ax as HDRCubeTextureAssetTask,Cx as HDRFiltering,XV as HDRTools,Rx as Halton2DSequence,Dx as HandConstraintBehavior,wx as HandConstraintOrientation,Ix as HandConstraintVisibility,Ex as HandConstraintZone,Fx as HandPart,jo as HandleFallbacksForShadows,Ox as HardwareScalingOptimization,ir as HavokPlugin,Gx as HeightToNormalBlock,kx as HemisphereBuilder,Qo as HemisphericLight,Vx as HemisphericParticleEmitter,zx as HighlightLayer,nr as HighlightsPostProcess,Lx as Hinge2Joint,Ya as HingeConstraint,Nx as HingeJoint,Wx as HtmlElementTexture,uk as HufUncompress,Hx as IWebXRControllerPhysicsOptions,Ux as IblCdfGenerator,jx as IblCdfGeneratorSceneComponent,hr as IblShadowsRenderPipeline,Qx as IcoSphereBlock,Xx as IcoSphereBuilder,qx as ImageAssetTask,Zx as ImageProcessingBlock,Xo as ImageProcessingConfiguration,Yx as ImageProcessingPostProcess,Kx as ImageSourceBlock,qo as ImportAnimationsAsync,Zo as ImportMeshAsync,$x as IncrementValueAction,Jx as IndexFormat,eP as InitializeCSG2Async,ot as InputBlock,tP as InspectableType,sP as InstancedLinesMesh,wt as InstancedMesh,iP as InstancesBlock,aP as InstantiateBlock,rP as InstantiateLinearBlock,nP as InstantiateOnFacesBlock,oP as InstantiateOnVerticesBlock,hP as InstantiateOnVolumeBlock,lP as InstantiateRadialBlock,Yo as InstantiatedEntries,cP as IntFloatConverterBlock,_k as InterleaveScalar,at as InternalTexture,Ko as InternalTextureSource,dP as InterpolateValueAction,$o as IntersectionInfo,uP as IridescenceBlock,Jo as IsBase64DataUrl,_P as IsCSG2Ready,eh as IsDocumentAvailable,th as IsFileURL,sh as IsNavigatorAvailable,ih as IsWindowObjectExist,ls as IsWrapper,pP as JoystickAxis,ah as KeepAssets,rh as KeyboardEventTypes,nh as KeyboardInfo,oh as KeyboardInfoPre,Dk as KhronosTextureContainer,wk as KhronosTextureContainer2,ri as LastCreatedAudioEngine,gP as LatheBuilder,mP as Lattice,fP as LatticeBlock,Va as LatticePluginMaterial,bP as Layer,xP as LayerSceneComponent,PP as LengthBlock,yP as LensFlare,TP as LensFlareSystem,SP as LensFlareSystemSceneComponent,MP as LensFlaresOptimization,or as LensRenderingPipeline,vP as LerpBlock,As as Light,BP as LightBlock,AP as LightGizmo,CP as LightInformationBlock,RP as LineEdgesRenderer,DP as LinesBuilder,wP as LinesMesh,hh as LoadAssetContainerAsync,lh as LoadFile,ch as LoadFileError,AG as LoadIESData,dh as LoadImage,uh as LoadImageConfiguration,IP as LoadOp,_h as LoadSceneAsync,NV as LoadTextureFromTranscodeResult,$a as LockConstraint,D as Logger,EP as LoopBlock,FP as MainAudioBus,OP as MapMode,GP as MapRangeBlock,kP as MappingBlock,VP as MappingTypes,Bs as Material,ph as MaterialAnisotropicDefines,gh as MaterialBRDFDefines,mh as MaterialClearCoatDefines,fh as MaterialDefines,bh as MaterialDetailMapDefines,xh as MaterialFlags,zP as MaterialGreasedLineDefines,LP as MaterialHelper,Ph as MaterialHelperGeometryRendering,yh as MaterialIridescenceDefines,Ss as MaterialPluginBase,NP as MaterialPluginEvent,Th as MaterialPluginManager,Sh as MaterialSheenDefines,Mh as MaterialSubSurfaceDefines,WP as MathBlock,HP as MathBlockOperations,R as Matrix,UP as MatrixBuilderBlock,jP as MatrixComposeBlock,QP as MatrixDeterminantBlock,XP as MatrixSplitterBlock,qP as MatrixTransposeBlock,ZP as MaxBlock,YP as MergeGeometryBlock,KP as MergeMeshesOptimization,fe as Mesh,$P as MeshAssetTask,JP as MeshAttributeExistsBlock,ey as MeshAttributeExistsBlockTypes,ty as MeshBlock,pt as MeshBuilder,sy as MeshDebugMode,iy as MeshDebugPluginMaterial,za as MeshExploder,vh as MeshLODLevel,ay as MeshParticleEmitter,ve as MeshUVSpaceRenderer,Bh as MeshoptCompression,ry as MinBlock,ny as MinMaxReducer,oy as MipmapFilterMode,hy as MirrorTexture,ly as ModBlock,Vt as ModelShape,Ah as MorphTarget,vs as MorphTargetManager,cy as MorphTargetsBlock,dy as MotionBlurPostProcess,uy as MotorEnabledJoint,ft as MultiMaterial,_y as MultiObserver,Ch as MultiPick,Rh as MultiPickWithRay,ca as MultiPointerScaleBehavior,si as MultiRenderTarget,py as MultiplyBlock,gy as NLerpBlock,my as NativeDataStream,fy as NativeEngine,Dh as NativePointerInput,by as NativeXRFrame,xy as NativeXRLayerRenderTargetTextureProvider,Py as NativeXRLayerWrapper,yy as NativeXRRenderTarget,Ty as NegateBlock,wh as Node,Sy as NodeGeometry,My as NodeGeometryBlock,vy as NodeGeometryBlockConnectionPointTypes,By as NodeGeometryBuildState,Ay as NodeGeometryConnectionPoint,Cy as NodeGeometryConnectionPointCompatibilityStates,Ry as NodeGeometryConnectionPointDirection,Dy as NodeGeometryContextualSources,wy as NodeMaterial,Iy as NodeMaterialBlock,Ey as NodeMaterialBlockConnectionPointMode,Fy as NodeMaterialBlockConnectionPointTypes,Oy as NodeMaterialBlockTargets,Gy as NodeMaterialConnectionPoint,ky as NodeMaterialConnectionPointCompatibilityStates,Vy as NodeMaterialConnectionPointCustomObject,zy as NodeMaterialConnectionPointDirection,Ly as NodeMaterialDebugBlock,Ny as NodeMaterialDefines,Ks as NodeMaterialModes,Ba as NodeMaterialOptimizer,mt as NodeMaterialSystemValues,Wy as NodeMaterialTeleportInBlock,Hy as NodeMaterialTeleportOutBlock,Uy as NodeRenderGraph,jy as NodeRenderGraphAnaglyphPostProcessBlock,Qy as NodeRenderGraphBlackAndWhitePostProcessBlock,Xy as NodeRenderGraphBlock,qy as NodeRenderGraphBlockConnectionPointTypes,Zy as NodeRenderGraphBloomPostProcessBlock,Yy as NodeRenderGraphBlurPostProcessBlock,Ky as NodeRenderGraphBuildState,$y as NodeRenderGraphCascadedShadowGeneratorBlock,Jy as NodeRenderGraphChromaticAberrationPostProcessBlock,eT as NodeRenderGraphCircleOfConfusionPostProcessBlock,tT as NodeRenderGraphClearBlock,sT as NodeRenderGraphConnectionPoint,iT as NodeRenderGraphConnectionPointCompatibilityStates,aT as NodeRenderGraphConnectionPointDirection,rT as NodeRenderGraphCopyTextureBlock,nT as NodeRenderGraphCullObjectsBlock,oT as NodeRenderGraphDepthOfFieldPostProcessBlock,hT as NodeRenderGraphElbowBlock,lT as NodeRenderGraphExecuteBlock,cT as NodeRenderGraphExtractHighlightsPostProcessBlock,dT as NodeRenderGraphGenerateMipmapsBlock,uT as NodeRenderGraphGeometryRendererBlock,_T as NodeRenderGraphGlowLayerBlock,pT as NodeRenderGraphHighlightLayerBlock,gT as NodeRenderGraphInputBlock,mT as NodeRenderGraphObjectRendererBlock,fT as NodeRenderGraphOutputBlock,bT as NodeRenderGraphPassCubePostProcessBlock,xT as NodeRenderGraphPassPostProcessBlock,PT as NodeRenderGraphResourceContainerBlock,yT as NodeRenderGraphSSRPostProcessBlock,TT as NodeRenderGraphShadowGeneratorBlock,ST as NodeRenderGraphTAAObjectRendererBlock,MT as NodeRenderGraphTeleportInBlock,vT as NodeRenderGraphTeleportOutBlock,BT as NodeRenderGraphUtilityLayerRendererBlock,AT as NoiseBlock,CT as NoiseProceduralTexture,RT as NormalBlendBlock,DT as NormalizeBlock,wT as NormalizeVectorBlock,IT as NullBlock,mi as NullEngine,gi as NullEngineOptions,Ih as ObjectRenderer,W as Observable,Eh as Observer,Sa as OcclusionMaterial,ET as Octree,FT as OctreeBlock,OT as OctreeSceneComponent,GT as OimoJSPlugin,kT as OnAfterEnteringVRObservableEvent,VT as OneMinusBlock,FV as OptimizeIndices,Fh as Orientation,zT as OutlineRenderer,ms as PBRAnisotropicConfiguration,fs as PBRBRDFConfiguration,Ge as PBRBaseMaterial,LT as PBRBaseSimpleMaterial,bs as PBRClearCoatConfiguration,xs as PBRIridescenceConfiguration,Oh as PBRMaterial,Gh as PBRMaterialDefines,NT as PBRMetallicRoughnessBlock,WT as PBRMetallicRoughnessMaterial,Ps as PBRSheenConfiguration,HT as PBRSpecularGlossinessMaterial,ys as PBRSubSurfaceConfiguration,kh as PHI,Vh as PadNumber,qV as PanoramaToCubeMapTools,zh as Parse,NI as ParseBlockAsync,WI as ParseCoordinatorAsync,pk as ParseFloat16,gk as ParseFloat32,HI as ParseFlowGraph,UI as ParseFlowGraphAsync,jI as ParseFlowGraphBlockWithClassType,QI as ParseFlowGraphContext,XI as ParseGraphConnectionWithClassType,qI as ParseGraphDataConnection,mk as ParseInt32,fk as ParseInt64,bk as ParseNullTerminatedString,xk as ParseUint16,Pk as ParseUint32,yk as ParseUint8,Tk as ParseUint8Array,Sk as ParseValue,UT as Particle,jT as ParticleBlendMultiplyBlock,QT as ParticleHelper,XT as ParticleRampGradientBlock,$s as ParticleSystem,qT as ParticleSystemSet,ZT as ParticleTextureBlock,YT as ParticlesOptimization,Lh as PassCubePostProcess,Nh as PassPostProcess,Wh as Path2,Hh as Path3D,Ji as PathCursor,Na as PerfCollectionStrategy,_e as PerfCounter,hs as PerformanceConfigurator,Uh as PerformanceMonitor,KT as PerformanceViewerCollector,$T as PerturbNormalBlock,JT as PhotoDome,Ri as Physics6DoFConstraint,Xa as Physics6DoFLimit,eS as PhysicsActivationControl,Di as PhysicsAggregate,Tt as PhysicsBody,tS as PhysicsCharacterController,ke as PhysicsConstraint,sS as PhysicsConstraintAxis,iS as PhysicsConstraintAxisLimitMode,aS as PhysicsConstraintMotorType,rS as PhysicsConstraintType,nS as PhysicsEngine,oS as PhysicsEngineV2,hS as PhysicsEventType,lS as PhysicsHelper,ye as PhysicsImpostor,cS as PhysicsJoint,dS as PhysicsMaterialCombineMode,uS as PhysicsMotionType,He as PhysicsPrestepType,_S as PhysicsRadialExplosionEventOptions,pS as PhysicsRadialImpulseFalloff,gS as PhysicsRaycastResult,Qt as PhysicsShape,mS as PhysicsShapeBox,fS as PhysicsShapeCapsule,bS as PhysicsShapeContainer,xS as PhysicsShapeConvexHull,PS as PhysicsShapeCylinder,yS as PhysicsShapeGroundMesh,TS as PhysicsShapeHeightField,SS as PhysicsShapeMesh,MS as PhysicsShapeSphere,vS as PhysicsShapeType,BS as PhysicsUpdraftEventOptions,AS as PhysicsUpdraftMode,ma as PhysicsViewer,CS as PhysicsVortexEventOptions,jh as Pick,Qh as PickWithBoundingInfo,Xh as PickWithRay,qh as PickingCustomization,Zh as PickingInfo,RS as PipelineErrorReason,DS as PivotTools,us as Plane,wS as PlaneBlock,IS as PlaneBuilder,tt as PlaneDragGizmo,gt as PlaneRotationGizmo,ES as PlayAnimationAction,FS as PlaySoundAction,Yh as PointColor,Kh as PointLight,OS as PointListBlock,GS as PointParticleEmitter,ct as PointerDragBehavior,Ke as PointerEventTypes,$h as PointerInfo,Jh as PointerInfoBase,el as PointerInfoPre,tl as PointerInput,sl as PointsCloudSystem,il as PointsGroup,pe as Polar,kS as Polygon,VS as PolygonBuilder,zS as PolygonMeshBuilder,LS as PolyhedronBuilder,NS as PolyhedronData,bi as PositionGizmo,Yt as PositionNormalTextureVertex,Zt as PositionNormalVertex,be as PostProcess,al as PostProcessManager,ht as PostProcessRenderEffect,qt as PostProcessRenderPipeline,WS as PostProcessRenderPipelineManager,HS as PostProcessRenderPipelineManagerSceneComponent,US as PostProcessesOptimization,jS as PosterizeBlock,QS as PowBlock,wI as PowerEase,XS as PowerPreference,qS as PrePassOutputBlock,ZS as PrePassRenderer,YS as PrePassRendererSceneComponent,KS as PrePassTextureBlock,j as PrecisionDate,$S as PredicateCondition,Mk as Predictor,rl as PrepareAttributesForBakedVertexAnimation,nl as PrepareAttributesForBones,ol as PrepareAttributesForInstances,hl as PrepareAttributesForMorphTargets,ll as PrepareAttributesForMorphTargetsInfluencers,cl as PrepareDefinesAndAttributesForMorphTargets,dl as PrepareDefinesForAttributes,ul as PrepareDefinesForBakedVertexAnimation,_l as PrepareDefinesForBones,pl as PrepareDefinesForCamera,gl as PrepareDefinesForFrameBoundValues,ml as PrepareDefinesForLight,fl as PrepareDefinesForLights,bl as PrepareDefinesForMergedUV,xl as PrepareDefinesForMisc,Pl as PrepareDefinesForMorphTargets,yl as PrepareDefinesForMultiview,Tl as PrepareDefinesForOIT,Sl as PrepareDefinesForPrePass,Ml as PrepareUniformsAndSamplersForLight,vl as PrepareUniformsAndSamplersList,yt as PressureObserverWrapper,JS as PrimitiveTopology,Ja as PrismaticConstraint,Oe as ProceduralTexture,eM as ProceduralTextureSceneComponent,tM as PropertyTypeForEdition,ar as ProximityCastResult,Bl as PushAttributesForInstances,Al as PushMaterial,II as QuadraticEase,sM as QuadraticErrorSimplification,EI as QuarticEase,M as Quaternion,iM as QueryType,Cl as QueueNewFrame,FI as QuinticEase,Rl as RGBDTextureTools,aM as RSMCreatePluginMaterial,sr as Ragdoll,tr as RagdollBoneProperties,rM as RandomBlock,nM as RandomBlockLocks,ps as RandomGUID,oM as RandomNumberBlock,ZI as RawCubeTexture,Pt as RawTexture,Dl as RawTexture2DArray,$t as RawTexture3D,wl as Ray,Kt as RayHelper,Il as ReadFile,El as ReadFileError,Bi as RecastJSCrowd,ja as RecastJSPlugin,hM as ReciprocalBlock,lM as RectAreaLight,cM as ReflectBlock,dM as ReflectionBlock,ei as ReflectionProbe,uM as ReflectionTextureBaseBlock,_M as ReflectionTextureBlock,pM as ReflectiveShadowMap,gM as Reflector,mM as RefractBlock,fM as RefractionBlock,bM as RefractionPostProcess,Jt as RefractionTexture,Fl as RegisterClass,Ol as RegisterMaterialPlugin,xM as RegisterNativeTypeAsync,Gl as RegisterSceneLoaderPlugin,xI as RegisterTargetForLateAnimationBinding,PM as RemapBlock,yM as RenderPassTimestampLocation,me as RenderTargetTexture,cs as RenderTargetWrapper,TM as RenderTargetsOptimization,kl as RenderingGroup,Vl as RenderingGroupInfo,zl as RenderingManager,SM as ReplaceColorBlock,Ll as RequestFile,Nl as RequestFileError,Wl as RequestFullscreen,Hl as RequestPointerlock,Ul as ResizeImageBitmap,jl as RetryStrategy,vk as ReverseLutFromBitmap,MM as RibbonBuilder,Ql as RichType,Xl as RichTypeAny,ql as RichTypeBoolean,Zl as RichTypeColor3,Yl as RichTypeColor4,Kl as RichTypeFlowGraphInteger,$l as RichTypeMatrix,Jl as RichTypeMatrix2D,ec as RichTypeMatrix3D,tc as RichTypeNumber,sc as RichTypeQuaternion,ic as RichTypeString,ac as RichTypeVector2,rc as RichTypeVector3,nc as RichTypeVector4,oc as RollingAverage,vM as Rotate2dBlock,fi as RotationGizmo,BM as RotationXBlock,AM as RotationYBlock,CM as RotationZBlock,PI as RuntimeAnimation,hc as RuntimeError,RM as SSAO2RenderingPipeline,DM as SSAORenderingPipeline,wM as SSRRenderingPipeline,IM as SamplerBindingType,lc as Scalar,EM as ScaleBlock,xi as ScaleGizmo,FM as ScalingBlock,JG as ScanData,as as Scene,cc as SceneComponentConstants,OM as SceneDepthBlock,Ti as SceneInstrumentation,rt as SceneLoader,dc as SceneLoaderAnimationGroupLoadingMode,uc as SceneLoaderFlags,GM as SceneOptimization,kM as SceneOptimizer,VM as SceneOptimizerOptions,_c as ScenePerformancePriority,La as SceneRecorder,Ot as SceneSerializer,zM as ScreenSizeBlock,LM as ScreenSpaceBlock,NM as ScreenSpaceCurvaturePostProcess,WM as ScreenSpaceReflectionPostProcess,HM as ScreenshotTools,et as SerializationHelper,WV as SetBasisTranscoderWorker,UM as SetColorsBlock,pc as SetCorsBehavior,jM as SetMaterialIDBlock,QM as SetNormalsBlock,XM as SetParentAction,qM as SetPositionsBlock,ZM as SetStateAction,YM as SetTangentsBlock,va as SetToDefaultGaussianSplatting,KM as SetUVsBlock,$M as SetValueAction,JM as ShaderCodeInliner,ev as ShaderLanguage,st as ShaderMaterial,tv as ShaderStage,gc as ShaderStore,Aa as ShadowDepthWrapper,Js as ShadowGenerator,sv as ShadowGeneratorSceneComponent,mc as ShadowLight,iv as ShadowMapBlock,av as ShadowsOptimization,rv as ShapeBuilder,rr as ShapeCastResult,nv as SharpenPostProcess,ov as SheenBlock,hv as SimplexPerlin3DBlock,lv as SimplicationQueueSceneComponent,cv as SimplificationQueue,dv as SimplificationSettings,uv as SimplificationType,OI as SineEase,ui as SixDofDragBehavior,fc as Size,Ht as Skeleton,_v as SkeletonViewer,Ka as SliderConstraint,bc as SmartArray,xc as SmartArrayNoDuplicate,pv as SmoothStepBlock,Wa as SnapshotRenderingHelper,kt as SolidParticle,Qa as SolidParticleSystem,Ci as SolidParticleVertex,Pc as Sound,gv as SoundState,yc as SoundTrack,Ik as SourceTextureFormat,Tc as Space,mv as SpatialAudioAttachmentType,Ta as SpecularPowerToRoughness,fv as SphereBlock,bv as SphereBuilder,xv as SphereDirectedParticleEmitter,Pv as SphereParticleEmitter,ge as Spherical,Sc as SphericalHarmonics,Mc as SphericalPolynomial,js as SplatReaderBlock,vc as SpotLight,er as SpringConstraint,yv as Sprite,ii as SpriteManager,Tv as SpriteMap,Sv as SpriteMapFrameRotationDirection,cr as SpritePackedManager,Mv as SpriteSceneComponent,Bc as Stage,J as StandardMaterial,Ac as StandardMaterialDefines,vv as StandardRenderingPipeline,Cc as StartsWith,Bv as StateCondition,Av as StaticSound,Cv as StaticSoundBuffer,Rv as StencilOperation,Rc as StencilState,Dc as StencilStateComposer,Dv as StepBlock,wv as StereoscopicArcRotateCamera,Iv as StereoscopicFreeCamera,Ev as StereoscopicGamepadCamera,Fv as StereoscopicInterlacePostProcess,Ov as StereoscopicInterlacePostProcessI,_a as StereoscopicScreenUniversalCamera,Gv as StereoscopicUniversalCamera,kv as StickValues,Vv as StopAnimationAction,zv as StopSoundAction,_t as StorageBuffer,Lv as StorageReadBlock,Nv as StorageTextureAccess,Wv as StorageWriteBlock,Hv as StoreOp,Uv as StreamingSound,wc as StringDictionary,Ic as StringTools,jv as SubEmitter,Qv as SubEmitterType,ws as SubMesh,Xv as SubSurfaceBlock,qv as SubSurfaceSceneComponent,Zv as Subdivide,Yv as SubdivideBlock,Kv as SubtractBlock,da as SurfaceMagnetismBehavior,$v as SwitchBooleanAction,Ec as SwitchInput,Jv as TAARenderingPipeline,eB as TBNBlock,rz as TGATools,Fc as Tags,rs as TargetCamera,yI as TargetedAnimation,tB as TeleportInBlock,sB as TeleportOutBlock,Oc as TestBase64DataUrl,iB as TextFileAssetTask,K as Texture,aB as TextureAspect,rB as TextureAssetTask,nB as TextureBlock,oB as TextureDimension,hB as TextureFormat,lB as TextureOptimization,cB as TexturePacker,dB as TexturePackerFrame,uB as TextureSampleType,Gc as TextureSampler,kc as TextureTools,_B as TextureUsage,pB as TextureViewDimension,gB as ThinAnaglyphPostProcess,mB as ThinBlackAndWhitePostProcess,fB as ThinBloomEffect,bB as ThinBlurPostProcess,xB as ThinChromaticAberrationPostProcess,PB as ThinCircleOfConfusionPostProcess,yB as ThinDepthOfFieldEffect,TB as ThinDepthOfFieldEffectBlurLevel,SB as ThinEffectLayer,Vc as ThinEngine,MB as ThinExtractHighlightsPostProcess,vB as ThinGlowBlurPostProcess,BB as ThinGlowLayer,AB as ThinHighlightLayer,zc as ThinPassCubePostProcess,Lc as ThinPassPostProcess,Ma as ThinRenderTargetTexture,_s as ThinTexture,CB as TiledBoxBuilder,RB as TiledPlaneBuilder,wE as TimerState,Nc as TmpColors,c as TmpVectors,Wc as ToGammaSpace,Hc as ToHalfFloat,Uc as ToLinearSpace,DB as TonemapPostProcess,wB as TonemappingOperator,se as Tools,IB as TorusBlock,EB as TorusBuilder,FB as TorusKnotBuilder,OB as TouchCamera,GB as TrailMesh,kB as Trajectory,VB as TrajectoryClassifier,HV as TranscodeAsync,Ek as TranscodeTarget,Xs as TransformBlock,zB as TransformFeedbackBoundingHelper,ie as TransformNode,LB as TranslationBlock,NB as TriPlanarBlock,WB as TrigonometryBlock,HB as TrigonometryBlockOperations,UB as TubeBuilder,jB as TwirlBlock,ek as UncompressPIZ,tk as UncompressPXR,sk as UncompressRAW,ik as UncompressRLE,ak as UncompressZIP,ns as UniformBuffer,Vs as UniversalCamera,jc as UnregisterAllMaterialPlugins,Qc as UnregisterMaterialPlugin,nz as UploadContent,Xc as UploadEnvLevelsAsync,qc as UploadEnvSpherical,Zc as UploadIrradianceLevelsAsync,Yc as UploadRadianceLevelsAsync,Se as UtilityLayerRenderer,QB as VRCameraMetrics,XB as VRDeviceOrientationArcRotateCamera,qB as VRDeviceOrientationFreeCamera,ZB as VRDeviceOrientationGamepadCamera,YB as VRDistortionCorrectionPostProcess,KB as VRExperienceHelper,$B as VRMultiviewToSingleviewPostProcess,JB as ValidatedNativeDataStream,eA as ValueCondition,Ee as Vector2,tA as Vector2ToFixed,d as Vector3,sA as Vector3ToFixed,le as Vector4,iA as Vector4ToFixed,aA as VectorConverterBlock,rA as VectorMergerBlock,nA as VectorSplitterBlock,oa as VertexAnimationBaker,E as VertexBuffer,Je as VertexData,Kc as VertexDataMaterialInfo,oA as VertexFormat,Ys as VertexOutputBlock,hA as VertexStepMode,lA as VideoDome,cA as VideoRecorder,dA as VideoTexture,uA as ViewDirectionBlock,Ct as Viewport,_A as VirtualJoystick,pA as VirtualJoysticksCamera,gA as VolumetricLightScatteringPostProcess,mA as VoronoiNoiseBlock,Bk as Wav2Decode,fA as WaveBlock,bA as WaveBlockKind,xA as WebGL2ParticleSystem,$c as WebGL2ShaderProcessor,Jc as WebGLDataBuffer,ed as WebGLHardwareTexture,td as WebGLPipelineContext,PA as WebGPUCacheBindGroups,yA as WebGPUCacheRenderPipeline,TA as WebGPUCacheRenderPipelineTree,SA as WebGPUCacheSampler,MA as WebGPUDataBuffer,vA as WebGPUDrawContext,Et as WebGPUEngine,BA as WebGPUPipelineContext,AA as WebGPURenderTargetWrapper,CA as WebGPUShaderProcessor,RA as WebGPUTintWASM,ds as WebRequest,DA as WebXRAbstractFeature,wA as WebXRAbstractMotionController,IA as WebXRAnchorSystem,EA as WebXRBackgroundRemover,FA as WebXRCamera,OA as WebXRControllerComponent,GA as WebXRControllerMovement,kA as WebXRControllerPhysics,VA as WebXRControllerPointerSelection,zA as WebXRDefaultExperience,LA as WebXRDefaultExperienceOptions,NA as WebXRDepthSensing,WA as WebXRDomOverlay,HA as WebXREnterExitUI,UA as WebXREnterExitUIButton,jA as WebXREnterExitUIOptions,QA as WebXRExperienceHelper,XA as WebXREyeTracking,qA as WebXRFeatureName,ZA as WebXRFeaturePointSystem,YA as WebXRFeaturesManager,KA as WebXRGenericHandController,$A as WebXRGenericTriggerMotionController,JA as WebXRHTCViveMotionController,eC as WebXRHand,tC as WebXRHandJoint,sC as WebXRHandTracking,iC as WebXRHitTest,aC as WebXRHitTestLegacy,rC as WebXRImageTracking,nC as WebXRInput,oC as WebXRInputSource,hC as WebXRLayerRenderTargetTextureProvider,lC as WebXRLayers,cC as WebXRLightEstimation,dC as WebXRManagedOutputCanvas,uC as WebXRManagedOutputCanvasOptions,_C as WebXRMeshDetector,pC as WebXRMicrosoftMixedRealityController,gC as WebXRMotionControllerManager,mC as WebXRMotionControllerTeleportation,fC as WebXRNearControllerMode,bC as WebXRNearInteraction,xC as WebXROculusTouchMotionController,PC as WebXRPlaneDetector,yC as WebXRProfiledMotionController,TC as WebXRRawCameraAccess,SC as WebXRSessionManager,MC as WebXRSpaceWarp,vC as WebXRSpaceWarpRenderTargetTextureProvider,BC as WebXRState,AC as WebXRTrackingState,CC as WebXRWalkingLocomotion,YI as WeightedSound,sd as WorkerPool,RC as WorleyNoise3DBlock,DC as XRSpaceWarpRenderTarget,wC as Xbox360Button,IC as Xbox360Dpad,EC as Xbox360Pad,id as XboxInput,FC as _AudioAnalyzerDefaults,OC as _BabylonLoaderRegistered,qG as _BasisTextureLoader,ad as _CommonDispose,rd as _CommonInit,nd as _CreationDataStorage,VG as _DDSTextureLoader,LG as _ENVTextureLoader,rk as _ExrTextureLoader,it as _GetAudioEngine,od as _GetCompatibleTextureLoader,QG as _HDRTextureLoader,GC as _HasAudioAnalyzerOptions,ks as _HasSpatialAudioListenerOptions,kC as _HasSpatialAudioOptions,VC as _HasStereoAudioOptions,CG as _IESTextureLoader,hd as _InstancesBatch,WG as _KTXTextureLoader,ld as _MeshCollisionData,zC as _OcclusionDataStorage,LC as _PrimaryIsoTriangle,NC as _SpatialAudioDefaults,WC as _SpatialAudioListenerDefaults,HC as _StereoAudioDefaults,UG as _TGATextureLoader,UC as _TimeToken,cd as _UpdateRGBDAsync,jC as _WebAudioBus,di as _WebAudioEngine,QC as _WebAudioMainBus,XC as _WebAudioStaticSound,qC as _WebAudioStaticSoundBuffer,ZC as _WebAudioStreamingSound,YC as _forceSceneHelpersToBundle,KC as _forceTransformFeedbackToBundle,dd as _injectLTSFileTools,ud as _staticOffsetValueColor3,_d as _staticOffsetValueColor4,pd as _staticOffsetValueQuaternion,gd as _staticOffsetValueSize,md as _staticOffsetValueVector2,fd as _staticOffsetValueVector3,bd as addClipPlaneUniforms,KI as addToBlockFactory,xd as allocateAndCopyTypedBuffer,$C as anaglyphPixelShader,JC as anaglyphPixelShaderWGSL,Pd as appendSceneAsync,eR as backbufferColorTextureHandle,tR as backbufferDepthStencilTextureHandle,sR as backgroundPixelShader,iR as backgroundPixelShaderWGSL,aR as backgroundVertexShader,rR as backgroundVertexShaderWGSL,nR as bilateralBlurPixelShader,oR as bilateralBlurPixelShaderWGSL,hR as bilateralBlurQualityPixelShader,lR as bilateralBlurQualityPixelShaderWGSL,yd as bindClipPlane,cR as blackAndWhitePixelShader,dR as blackAndWhitePixelShaderWGSL,$I as blockFactory,uR as bloomMergePixelShader,_R as bloomMergePixelShaderWGSL,Uk as bonesDeclaration,Ok as bonesDeclarationWGSL,jk as bonesVertex,Gk as bonesVertexWGSL,pR as boundingBoxRendererPixelShader,gR as boundingBoxRendererPixelShaderWGSL,mR as boundingBoxRendererVertexShader,fR as boundingBoxRendererVertexShaderWGSL,uV as bumpFragment,_V as bumpFragmentFunctions,sV as bumpFragmentFunctionsWGSL,pV as bumpFragmentMainFunctions,iV as bumpFragmentMainFunctionsWGSL,aV as bumpFragmentWGSL,Ha as captureEquirectangularFromScene,bR as chromaticAberrationPixelShader,xR as chromaticAberrationPixelShaderWGSL,PR as circleOfConfusionPixelShader,yR as circleOfConfusionPixelShaderWGSL,Td as className,Sd as clipPlaneFragment,Md as clipPlaneFragmentDeclaration,vd as clipPlaneFragmentDeclarationWGSL,Bd as clipPlaneFragmentWGSL,Ad as clipPlaneVertex,Cd as clipPlaneVertexDeclaration,Rd as clipPlaneVertexDeclarationWGSL,Dd as clipPlaneVertexWGSL,TR as colorCorrectionPixelShader,SR as colorCorrectionPixelShaderWGSL,MR as colorPixelShader,vR as colorPixelShaderWGSL,BR as colorVertexShader,AR as colorVertexShaderWGSL,ka as computeMaxExtents,CR as convolutionPixelShader,RR as convolutionPixelShaderWGSL,DR as copyTexture3DLayerToTexturePixelShader,wR as copyTexture3DLayerToTexturePixelShaderWGSL,IR as copyTextureToTexturePixelShader,ER as copyTextureToTexturePixelShaderWGSL,Fa as createDetailMapPlugin,Ca as createPBRAnisotropicPlugin,Ra as createPBRBRDFPlugin,Da as createPBRClearCoatPlugin,wa as createPBRIridescencePlugin,Ia as createPBRSheenPlugin,Ea as createPBRSubSurfacePlugin,wd as createYieldingScheduler,Id as deepMerge,BV as defaultPixelShader,SV as defaultPixelShaderWGSL,RV as defaultVertexShader,wV as defaultVertexShaderWGSL,FR as depthBoxBlurPixelShader,OR as depthBoxBlurPixelShaderWGSL,GR as depthOfFieldMergePixelShader,kR as depthOfFieldMergePixelShaderWGSL,VR as depthPixelShader,zR as depthPixelShaderWGSL,LR as depthVertexShader,NR as depthVertexShaderWGSL,WR as displayPassPixelShader,HR as displayPassPixelShaderWGSL,UR as editableInPropertyPage,Ed as expandToProperty,jR as extractHighlightsPixelShader,QR as extractHighlightsPixelShaderWGSL,Fd as extractMinAndMax,Od as extractMinAndMaxIndexed,XR as filterPixelShader,qR as filterPixelShaderWGSL,ZR as fluidRenderingBilateralBlurPixelShader,YR as fluidRenderingBilateralBlurPixelShaderWGSL,KR as fluidRenderingParticleDepthPixelShader,$R as fluidRenderingParticleDepthPixelShaderWGSL,JR as fluidRenderingParticleDepthVertexShader,e0 as fluidRenderingParticleDepthVertexShaderWGSL,t0 as fluidRenderingParticleDiffusePixelShader,s0 as fluidRenderingParticleDiffusePixelShaderWGSL,i0 as fluidRenderingParticleDiffuseVertexShader,a0 as fluidRenderingParticleDiffuseVertexShaderWGSL,r0 as fluidRenderingParticleThicknessPixelShader,n0 as fluidRenderingParticleThicknessPixelShaderWGSL,o0 as fluidRenderingParticleThicknessVertexShader,h0 as fluidRenderingParticleThicknessVertexShaderWGSL,l0 as fluidRenderingRenderPixelShader,c0 as fluidRenderingRenderPixelShaderWGSL,d0 as fluidRenderingStandardBlurPixelShader,u0 as fluidRenderingStandardBlurPixelShaderWGSL,Gd as fogFragmentDeclaration,kd as fogFragmentDeclarationWGSL,_0 as fxaaPixelShader,p0 as fxaaPixelShaderWGSL,g0 as fxaaVertexShader,m0 as fxaaVertexShaderWGSL,Vd as gaussianSplattingVertexDeclaration,f0 as gaussianSplattingVertexDeclarationWGSL,b0 as geometryPixelShader,x0 as geometryPixelShaderWGSL,P0 as geometryVertexShader,y0 as geometryVertexShaderWGSL,zd as getAnimationTypeByFlowGraphType,T0 as getDimensionsFromTextureSize,Ld as getRichTypeByAnimationType,Nd as getRichTypeByFlowGraphType,Wd as getRichTypeFromValue,S0 as glowBlurPostProcessPixelShader,M0 as glowBlurPostProcessPixelShaderWGSL,v0 as glowMapGenerationPixelShader,B0 as glowMapGenerationPixelShaderWGSL,A0 as glowMapGenerationVertexShader,C0 as glowMapGenerationVertexShaderWGSL,R0 as glowMapMergePixelShader,D0 as glowMapMergePixelShaderWGSL,w0 as glowMapMergeVertexShader,I0 as glowMapMergeVertexShaderWGSL,E0 as grainPixelShader,F0 as grainPixelShaderWGSL,O0 as greasedLinePixelShader,G0 as greasedLinePixelShaderWGSL,k0 as greasedLineVertexShader,V0 as greasedLineVertexShaderWGSL,z0 as hdrFilteringPixelShader,L0 as hdrFilteringPixelShaderWGSL,N0 as hdrFilteringVertexShader,W0 as hdrFilteringVertexShaderWGSL,H0 as hdrIrradianceFilteringPixelShader,U0 as hdrIrradianceFilteringPixelShaderWGSL,j0 as hdrIrradianceFilteringVertexShader,Q0 as hdrIrradianceFilteringVertexShaderWGSL,Hd as helperFunctions,eV as helperFunctionsWGSL,X0 as highlightsPixelShader,q0 as highlightsPixelShaderWGSL,Z0 as iblCdfDebugPixelShader,Y0 as iblCdfDebugPixelShaderWGSL,K0 as iblCdfxPixelShader,$0 as iblCdfxPixelShaderWGSL,J0 as iblCdfyPixelShader,eD as iblCdfyPixelShaderWGSL,tD as iblCombineVoxelGridsPixelShader,sD as iblCombineVoxelGridsPixelShaderWGSL,iD as iblGenerateVoxelMipPixelShader,aD as iblGenerateVoxelMipPixelShaderWGSL,rD as iblIcdfPixelShader,nD as iblIcdfPixelShaderWGSL,oD as iblScaledLuminancePixelShader,hD as iblScaledLuminancePixelShaderWGSL,lD as iblShadowAccumulationPixelShader,cD as iblShadowAccumulationPixelShaderWGSL,dD as iblShadowDebugPixelShader,uD as iblShadowDebugPixelShaderWGSL,_D as iblShadowGBufferDebugPixelShader,pD as iblShadowGBufferDebugPixelShaderWGSL,gD as iblShadowSpatialBlurPixelShader,mD as iblShadowSpatialBlurPixelShaderWGSL,fD as iblShadowVoxelTracingPixelShader,bD as iblShadowVoxelTracingPixelShaderWGSL,xD as iblShadowsCombinePixelShader,PD as iblShadowsCombinePixelShaderWGSL,yD as iblVoxelGrid2dArrayDebugPixelShader,TD as iblVoxelGrid2dArrayDebugPixelShaderWGSL,SD as iblVoxelGrid3dDebugPixelShader,MD as iblVoxelGrid3dDebugPixelShaderWGSL,vD as iblVoxelGridPixelShader,BD as iblVoxelGridPixelShaderWGSL,AD as iblVoxelGridVertexShader,CD as iblVoxelGridVertexShaderWGSL,RD as iblVoxelSlabDebugPixelShader,DD as iblVoxelSlabDebugPixelShaderWGSL,wD as iblVoxelSlabDebugVertexShader,ID as iblVoxelSlabDebugVertexShaderWGSL,gV as imageProcessingDeclaration,rV as imageProcessingDeclarationWGSL,mV as imageProcessingFunctions,nV as imageProcessingFunctionsWGSL,ED as imageProcessingPixelShader,FD as imageProcessingPixelShaderWGSL,Ud as importAnimationsAsync,jd as inlineScheduler,OD as kernelBlurPixelShader,GD as kernelBlurPixelShaderWGSL,kD as kernelBlurVertexShader,VD as kernelBlurVertexShaderWGSL,zD as layerPixelShader,LD as layerPixelShaderWGSL,ND as layerVertexShader,WD as layerVertexShaderWGSL,HD as lensFlarePixelShader,UD as lensFlarePixelShaderWGSL,jD as lensFlareVertexShader,QD as lensFlareVertexShaderWGSL,fV as lightFragment,bV as lightFragmentDeclaration,oV as lightFragmentWGSL,xV as lightUboDeclaration,hV as lightUboDeclarationWGSL,Qk as lightVxFragmentDeclaration,Xk as lightVxUboDeclaration,kk as lightVxUboDeclarationWGSL,AV as lightsFragmentFunctions,MV as lightsFragmentFunctionsWGSL,XD as linePixelShader,qD as linePixelShaderWGSL,ZD as lineVertexShader,YD as lineVertexShaderWGSL,Qd as loadAssetContainerAsync,Xd as loadSceneAsync,YV as lodCubePixelShader,ez as lodCubePixelShaderWGSL,$V as lodPixelShader,sz as lodPixelShaderWGSL,qd as makeAsyncFunction,Zd as makeSyncFunction,KD as meshUVSpaceRendererFinaliserPixelShader,$D as meshUVSpaceRendererFinaliserPixelShaderWGSL,JD as meshUVSpaceRendererFinaliserVertexShader,ew as meshUVSpaceRendererFinaliserVertexShaderWGSL,tw as meshUVSpaceRendererMaskerPixelShader,sw as meshUVSpaceRendererMaskerPixelShaderWGSL,iw as meshUVSpaceRendererMaskerVertexShader,aw as meshUVSpaceRendererMaskerVertexShaderWGSL,rw as meshUVSpaceRendererPixelShader,nw as meshUVSpaceRendererPixelShaderWGSL,ow as meshUVSpaceRendererVertexShader,hw as meshUVSpaceRendererVertexShaderWGSL,qk as morphTargetsVertex,Zk as morphTargetsVertexDeclaration,Vk as morphTargetsVertexDeclarationWGSL,Yk as morphTargetsVertexGlobal,Kk as morphTargetsVertexGlobalDeclaration,zk as morphTargetsVertexGlobalDeclarationWGSL,Lk as morphTargetsVertexGlobalWGSL,Nk as morphTargetsVertexWGSL,lw as motionBlurPixelShader,cw as motionBlurPixelShaderWGSL,Yd as nativeOverride,Kd as normalizeEnvInfo,dw as oitBackBlendPixelShader,uw as oitBackBlendPixelShaderWGSL,_w as oitFinalPixelShader,pw as oitFinalPixelShaderWGSL,gw as outlinePixelShader,mw as outlinePixelShaderWGSL,fw as outlineVertexShader,bw as outlineVertexShaderWGSL,xw as packingFunctions,Pw as packingFunctionsWGSL,yw as particlesPixelShader,Tw as particlesPixelShaderWGSL,Sw as particlesVertexShader,Mw as particlesVertexShaderWGSL,Pz as passCubePixelShader,Mz as passCubePixelShaderWGSL,bz as passPixelShader,Tz as passPixelShaderWGSL,GG as pbrPixelShader,IG as pbrPixelShaderWGSL,FG as pbrVertexShader,DG as pbrVertexShaderWGSL,vw as pickingPixelShader,Bw as pickingPixelShaderWGSL,Aw as pickingVertexShader,Cw as pickingVertexShaderWGSL,$d as postprocessVertexShader,mz as postprocessVertexShaderWGSL,Jd as prepareDefinesForClipPlanes,eu as prepareStringDefinesForClipPlanes,Rw as proceduralVertexShader,Dw as proceduralVertexShaderWGSL,PV as reflectionFunction,lV as reflectionFunctionWGSL,tu as registerSceneLoaderPlugin,su as registerTextureLoader,hz as rgbdDecodePixelShader,uz as rgbdDecodePixelShaderWGSL,cz as rgbdEncodePixelShader,pz as rgbdEncodePixelShaderWGSL,ww as rsmFullGlobalIlluminationPixelShader,Iw as rsmFullGlobalIlluminationPixelShaderWGSL,Ew as rsmGlobalIlluminationPixelShader,Fw as rsmGlobalIlluminationPixelShaderWGSL,iu as runCoroutine,au as runCoroutineAsync,ru as runCoroutineSync,Ow as screenSpaceReflection2BlurCombinerPixelShader,Gw as screenSpaceReflection2BlurCombinerPixelShaderWGSL,kw as screenSpaceReflection2BlurPixelShader,Vw as screenSpaceReflection2BlurPixelShaderWGSL,zw as screenSpaceReflection2PixelShader,Lw as screenSpaceReflection2PixelShaderWGSL,nu as serialize,ou as serializeAsCameraReference,hu as serializeAsColor3,lu as serializeAsColor4,cu as serializeAsColorCurves,du as serializeAsFresnelParameters,uu as serializeAsImageProcessingConfiguration,_u as serializeAsMatrix,pu as serializeAsMeshReference,gu as serializeAsQuaternion,mu as serializeAsTexture,fu as serializeAsVector2,bu as serializeAsVector3,IE as setAndStartTimer,xu as setOpenGLOrientationForUV,Nw as setStereoscopicAnaglyphRigMode,Ww as setStereoscopicRigMode,Hw as setVRRigMode,Uw as shadowMapFragment,jw as shadowMapFragmentSoftTransparentShadow,Qw as shadowMapFragmentSoftTransparentShadowWGSL,Xw as shadowMapFragmentWGSL,qw as shadowMapPixelShader,Zw as shadowMapPixelShaderWGSL,Yw as shadowMapVertexMetric,Kw as shadowMapVertexMetricWGSL,$w as shadowMapVertexShader,Jw as shadowMapVertexShaderWGSL,yV as shadowsFragmentFunctions,cV as shadowsFragmentFunctionsWGSL,$k as shadowsVertex,Wk as shadowsVertexWGSL,eI as sharpenPixelShader,tI as sharpenPixelShaderWGSL,sI as spritesPixelShader,iI as spritesPixelShaderWGSL,aI as spritesVertexShader,rI as spritesVertexShaderWGSL,nI as ssao2PixelShader,oI as ssao2PixelShaderWGSL,hI as ssaoCombinePixelShader,lI as ssaoCombinePixelShaderWGSL,cI as textureSizeIsObject,dI as tonemapPixelShader,uI as tonemapPixelShaderWGSL,Pu as unregisterTextureLoader,yu as useOpenGLOrientationForUV,_I as vrDistortionCorrectionPixelShader,pI as vrDistortionCorrectionPixelShaderWGSL};
//# sourceMappingURL=index-Cbh_XOmO.js.map
