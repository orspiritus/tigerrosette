{"version":3,"file":"index-B51TPCJQ.js","sources":["../../node_modules/react-dom/client.js","../../node_modules/zustand/esm/vanilla.mjs","../../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.js","../../node_modules/use-sync-external-store/shim/index.js","../../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.production.js","../../node_modules/use-sync-external-store/shim/with-selector.js","../../node_modules/zustand/esm/index.mjs","../../src/utils/levelSystem.ts","../../src/store/gameStore.ts","../../src/utils/hapticManager.ts","../../src/components/ScoreBreakdown.tsx","../../src/components/LevelDisplay.tsx","../../src/components/HapticSettings.tsx","../../src/components/TelegramProvider.tsx","../../src/components/TelegramUserInfo.tsx","../../src/components/MainMenu.tsx","../../src/utils/soundManager.ts","../../src/components/ScorePopup.tsx","../../src/hooks/useOutletImageAnimation.ts","../../src/components/TigerOutlet.tsx","../../src/components/GameHUD.tsx","../../src/components/GameScreen.tsx","../../src/components/LevelUpNotification.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","const createStoreImpl = (createState) => {\n  let state;\n  const listeners = /* @__PURE__ */ new Set();\n  const setState = (partial, replace) => {\n    const nextState = typeof partial === \"function\" ? partial(state) : partial;\n    if (!Object.is(nextState, state)) {\n      const previousState = state;\n      state = (replace != null ? replace : typeof nextState !== \"object\" || nextState === null) ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach((listener) => listener(state, previousState));\n    }\n  };\n  const getState = () => state;\n  const getInitialState = () => initialState;\n  const subscribe = (listener) => {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n  const destroy = () => {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n      console.warn(\n        \"[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected.\"\n      );\n    }\n    listeners.clear();\n  };\n  const api = { setState, getState, getInitialState, subscribe, destroy };\n  const initialState = state = createState(setState, getState, api);\n  return api;\n};\nconst createStore = (createState) => createState ? createStoreImpl(createState) : createStoreImpl;\nvar vanilla = (createState) => {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] Default export is deprecated. Instead use import { createStore } from 'zustand/vanilla'.\"\n    );\n  }\n  return createStore(createState);\n};\n\nexport { createStore, vanilla as default };\n","/**\n * @license React\n * use-sync-external-store-shim.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar React = require(\"react\");\nfunction is(x, y) {\n  return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\nvar objectIs = \"function\" === typeof Object.is ? Object.is : is,\n  useState = React.useState,\n  useEffect = React.useEffect,\n  useLayoutEffect = React.useLayoutEffect,\n  useDebugValue = React.useDebugValue;\nfunction useSyncExternalStore$2(subscribe, getSnapshot) {\n  var value = getSnapshot(),\n    _useState = useState({ inst: { value: value, getSnapshot: getSnapshot } }),\n    inst = _useState[0].inst,\n    forceUpdate = _useState[1];\n  useLayoutEffect(\n    function () {\n      inst.value = value;\n      inst.getSnapshot = getSnapshot;\n      checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n    },\n    [subscribe, value, getSnapshot]\n  );\n  useEffect(\n    function () {\n      checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n      return subscribe(function () {\n        checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n      });\n    },\n    [subscribe]\n  );\n  useDebugValue(value);\n  return value;\n}\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  inst = inst.value;\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(inst, nextValue);\n  } catch (error) {\n    return !0;\n  }\n}\nfunction useSyncExternalStore$1(subscribe, getSnapshot) {\n  return getSnapshot();\n}\nvar shim =\n  \"undefined\" === typeof window ||\n  \"undefined\" === typeof window.document ||\n  \"undefined\" === typeof window.document.createElement\n    ? useSyncExternalStore$1\n    : useSyncExternalStore$2;\nexports.useSyncExternalStore =\n  void 0 !== React.useSyncExternalStore ? React.useSyncExternalStore : shim;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n","/**\n * @license React\n * use-sync-external-store-shim/with-selector.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar React = require(\"react\"),\n  shim = require(\"use-sync-external-store/shim\");\nfunction is(x, y) {\n  return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\nvar objectIs = \"function\" === typeof Object.is ? Object.is : is,\n  useSyncExternalStore = shim.useSyncExternalStore,\n  useRef = React.useRef,\n  useEffect = React.useEffect,\n  useMemo = React.useMemo,\n  useDebugValue = React.useDebugValue;\nexports.useSyncExternalStoreWithSelector = function (\n  subscribe,\n  getSnapshot,\n  getServerSnapshot,\n  selector,\n  isEqual\n) {\n  var instRef = useRef(null);\n  if (null === instRef.current) {\n    var inst = { hasValue: !1, value: null };\n    instRef.current = inst;\n  } else inst = instRef.current;\n  instRef = useMemo(\n    function () {\n      function memoizedSelector(nextSnapshot) {\n        if (!hasMemo) {\n          hasMemo = !0;\n          memoizedSnapshot = nextSnapshot;\n          nextSnapshot = selector(nextSnapshot);\n          if (void 0 !== isEqual && inst.hasValue) {\n            var currentSelection = inst.value;\n            if (isEqual(currentSelection, nextSnapshot))\n              return (memoizedSelection = currentSelection);\n          }\n          return (memoizedSelection = nextSnapshot);\n        }\n        currentSelection = memoizedSelection;\n        if (objectIs(memoizedSnapshot, nextSnapshot)) return currentSelection;\n        var nextSelection = selector(nextSnapshot);\n        if (void 0 !== isEqual && isEqual(currentSelection, nextSelection))\n          return (memoizedSnapshot = nextSnapshot), currentSelection;\n        memoizedSnapshot = nextSnapshot;\n        return (memoizedSelection = nextSelection);\n      }\n      var hasMemo = !1,\n        memoizedSnapshot,\n        memoizedSelection,\n        maybeGetServerSnapshot =\n          void 0 === getServerSnapshot ? null : getServerSnapshot;\n      return [\n        function () {\n          return memoizedSelector(getSnapshot());\n        },\n        null === maybeGetServerSnapshot\n          ? void 0\n          : function () {\n              return memoizedSelector(maybeGetServerSnapshot());\n            }\n      ];\n    },\n    [getSnapshot, getServerSnapshot, selector, isEqual]\n  );\n  var value = useSyncExternalStore(subscribe, instRef[0], instRef[1]);\n  useEffect(\n    function () {\n      inst.hasValue = !0;\n      inst.value = value;\n    },\n    [value]\n  );\n  useDebugValue(value);\n  return value;\n};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.production.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.development.js');\n}\n","import { createStore } from 'zustand/vanilla';\nexport * from 'zustand/vanilla';\nimport ReactExports from 'react';\nimport useSyncExternalStoreExports from 'use-sync-external-store/shim/with-selector.js';\n\nconst { useDebugValue } = ReactExports;\nconst { useSyncExternalStoreWithSelector } = useSyncExternalStoreExports;\nlet didWarnAboutEqualityFn = false;\nconst identity = (arg) => arg;\nfunction useStore(api, selector = identity, equalityFn) {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && equalityFn && !didWarnAboutEqualityFn) {\n    console.warn(\n      \"[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937\"\n    );\n    didWarnAboutEqualityFn = true;\n  }\n  const slice = useSyncExternalStoreWithSelector(\n    api.subscribe,\n    api.getState,\n    api.getServerState || api.getInitialState,\n    selector,\n    equalityFn\n  );\n  useDebugValue(slice);\n  return slice;\n}\nconst createImpl = (createState) => {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && typeof createState !== \"function\") {\n    console.warn(\n      \"[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`.\"\n    );\n  }\n  const api = typeof createState === \"function\" ? createStore(createState) : createState;\n  const useBoundStore = (selector, equalityFn) => useStore(api, selector, equalityFn);\n  Object.assign(useBoundStore, api);\n  return useBoundStore;\n};\nconst create = (createState) => createState ? createImpl(createState) : createImpl;\nvar react = (createState) => {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] Default export is deprecated. Instead use `import { create } from 'zustand'`.\"\n    );\n  }\n  return create(createState);\n};\n\nexport { create, react as default, useStore };\n","// Level System Configuration\r\nexport interface LevelConfig {\r\n  level: number;\r\n  requiredExperience: number;\r\n  voltsReward: number;\r\n  title: string;\r\n  description: string;\r\n}\r\n\r\n// Experience required for each level (cumulative)\r\nexport const LEVEL_CONFIGS: LevelConfig[] = [\r\n  { level: 1, requiredExperience: 0, voltsReward: 0, title: \"Новичок\", description: \"Первые шаги с электричеством\" },\r\n  { level: 2, requiredExperience: 100, voltsReward: 50, title: \"Ученик\", description: \"Осваиваете основы\" },\r\n  { level: 3, requiredExperience: 250, voltsReward: 75, title: \"Практикант\", description: \"Набираетесь опыта\" },\r\n  { level: 4, requiredExperience: 500, voltsReward: 100, title: \"Любитель\", description: \"Понимаете принципы\" },\r\n  { level: 5, requiredExperience: 850, voltsReward: 150, title: \"Энтузиаст\", description: \"Проявляете смелость\" },\r\n  { level: 6, requiredExperience: 1300, voltsReward: 200, title: \"Смельчак\", description: \"Не боитесь рисковать\" },\r\n  { level: 7, requiredExperience: 1900, voltsReward: 250, title: \"Храбрец\", description: \"Идете на оправданный риск\" },\r\n  { level: 8, requiredExperience: 2600, voltsReward: 300, title: \"Отважный\", description: \"Покоряете сложности\" },\r\n  { level: 9, requiredExperience: 3450, voltsReward: 400, title: \"Безрассудный\", description: \"Играете с опасностью\" },\r\n  { level: 10, requiredExperience: 4500, voltsReward: 500, title: \"Профессионал\", description: \"Мастерски владеете риском\" },\r\n  { level: 11, requiredExperience: 5800, voltsReward: 600, title: \"Эксперт\", description: \"Знаете все тонкости\" },\r\n  { level: 12, requiredExperience: 7400, voltsReward: 750, title: \"Мастер\", description: \"Превосходите ожидания\" },\r\n  { level: 13, requiredExperience: 9300, voltsReward: 900, title: \"Виртуоз\", description: \"Играете как художник\" },\r\n  { level: 14, requiredExperience: 11600, voltsReward: 1100, title: \"Гуру\", description: \"Достигли просветления\" },\r\n  { level: 15, requiredExperience: 14400, voltsReward: 1300, title: \"Сенсей\", description: \"Учите других\" },\r\n  { level: 16, requiredExperience: 17800, voltsReward: 1500, title: \"Легенда\", description: \"О вас слагают легенды\" },\r\n  { level: 17, requiredExperience: 21900, voltsReward: 1750, title: \"Миф\", description: \"Недостижимый идеал\" },\r\n  { level: 18, requiredExperience: 26800, voltsReward: 2000, title: \"Титан\", description: \"Сверхчеловеческие способности\" },\r\n  { level: 19, requiredExperience: 32600, voltsReward: 2300, title: \"Бог Электричества\", description: \"Повелеваете молниями\" },\r\n  { level: 20, requiredExperience: 40000, voltsReward: 2500, title: \"Зевс\", description: \"Абсолютная власть над током\" },\r\n];\r\n\r\n// Calculate level from total experience\r\nexport function calculateLevel(totalExperience: number): LevelConfig {\r\n  let currentLevel = LEVEL_CONFIGS[0];\r\n  \r\n  for (let i = LEVEL_CONFIGS.length - 1; i >= 0; i--) {\r\n    if (totalExperience >= LEVEL_CONFIGS[i].requiredExperience) {\r\n      currentLevel = LEVEL_CONFIGS[i];\r\n      break;\r\n    }\r\n  }\r\n  \r\n  return currentLevel;\r\n}\r\n\r\n// Calculate experience needed for next level\r\nexport function getExperienceToNextLevel(totalExperience: number): {\r\n  current: number;\r\n  required: number;\r\n  remaining: number;\r\n  nextLevel: LevelConfig | null;\r\n} {\r\n  const currentLevel = calculateLevel(totalExperience);\r\n  const nextLevelIndex = LEVEL_CONFIGS.findIndex(config => config.level === currentLevel.level) + 1;\r\n  \r\n  if (nextLevelIndex >= LEVEL_CONFIGS.length) {\r\n    return {\r\n      current: totalExperience,\r\n      required: totalExperience,\r\n      remaining: 0,\r\n      nextLevel: null\r\n    };\r\n  }\r\n  \r\n  const nextLevel = LEVEL_CONFIGS[nextLevelIndex];\r\n  \r\n  return {\r\n    current: totalExperience - currentLevel.requiredExperience,\r\n    required: nextLevel.requiredExperience - currentLevel.requiredExperience,\r\n    remaining: nextLevel.requiredExperience - totalExperience,\r\n    nextLevel\r\n  };\r\n}\r\n\r\n// Get level progress percentage\r\nexport function getLevelProgress(totalExperience: number): number {\r\n  const { current, required } = getExperienceToNextLevel(totalExperience);\r\n  if (required === 0) return 100;\r\n  return Math.min(100, (current / required) * 100);\r\n}\r\n\r\n// Experience rewards for different actions\r\nexport const EXPERIENCE_REWARDS = {\r\n  SAFE_CLICK: 10,\r\n  RISKY_CLICK: 15,\r\n  EXTREME_CLICK: 25,\r\n  STREAK_5: 50,\r\n  STREAK_10: 100,\r\n  STREAK_25: 250,\r\n  STREAK_50: 500,\r\n  SURVIVAL_MINUTE: 20,\r\n  SHOCK_SURVIVAL: 5,\r\n  ACHIEVEMENT: 100,\r\n  DAILY_BONUS: 200\r\n} as const;\r\n\r\n// Get outlet image based on player level\r\nexport function getOutletImageByLevel(level: number): string {\r\n  // We have 4 different outlet images (tigrrozetka_1.png to tigrrozetka_4.png)\r\n  // Cycle through them based on level ranges\r\n  \r\n  if (level <= 5) {\r\n    return '/Media/Pictures/tigrrozetka_1.png';\r\n  } else if (level <= 10) {\r\n    return '/Media/Pictures/tigrrozetka_2.png';\r\n  } else if (level <= 15) {\r\n    return '/Media/Pictures/tigrrozetka_3.png';\r\n  } else {\r\n    return '/Media/Pictures/tigrrozetka_4.png';\r\n  }\r\n}\r\n","import { create } from 'zustand';\r\nimport { GameStore, GameState, Player, SingleModeState, Achievement, ScoreData, SoundConfig } from '../types/game';\r\nimport { calculateLevel, getExperienceToNextLevel, EXPERIENCE_REWARDS } from '../utils/levelSystem';\r\n\r\n// Default states\r\nconst defaultGameState: GameState = {\r\n  mode: 'menu',\r\n  isPlaying: false,\r\n  isPaused: false,\r\n  gameTime: 0,\r\n  score: 0\r\n};\r\n\r\nconst defaultPlayer: Player = {\r\n  id: 'player1',\r\n  name: 'Смельчак',\r\n  volts: 0,\r\n  level: 1,\r\n  experience: 0,\r\n  streak: 0,\r\n  totalClicks: 0,\r\n  survivalTime: 0\r\n};\r\n\r\nconst defaultSingleMode: SingleModeState = {\r\n  difficulty: 'easy',\r\n  aiPattern: 'regular',\r\n  currentRisk: 'low',\r\n  streakCount: 0,\r\n  timeInSafeZone: 0,\r\n  lastClickTime: 0,\r\n  warningActive: false,\r\n  shockActive: false\r\n};\r\n\r\nconst defaultSounds: SoundConfig = {\r\n  volume: 0.7,\r\n  enabled: true,\r\n  backgroundMusicEnabled: true\r\n};\r\n\r\n// Default achievements\r\nconst defaultAchievements: Achievement[] = [\r\n  {\r\n    id: 'first_click',\r\n    name: 'Первое прикосновение',\r\n    description: 'Нажми на розетку впервые',\r\n    icon: '⚡',\r\n    requirement: 1,\r\n    progress: 0,\r\n    completed: false,\r\n    reward: 50,\r\n    category: 'special'\r\n  },\r\n  {\r\n    id: 'survivor_5',\r\n    name: 'Живчик',\r\n    description: 'Серия из 5 успешных нажатий',\r\n    icon: '🏃',\r\n    requirement: 5,\r\n    progress: 0,\r\n    completed: false,\r\n    reward: 100,\r\n    category: 'streak'\r\n  },\r\n  {\r\n    id: 'survivor_25',\r\n    name: 'Неубиваемый',\r\n    description: 'Серия из 25 успешных нажатий',\r\n    icon: '�',\r\n    requirement: 25,\r\n    progress: 0,\r\n    completed: false,\r\n    reward: 500,\r\n    category: 'streak'\r\n  },\r\n  {\r\n    id: 'risk_taker',\r\n    name: 'Безрассудный',\r\n    description: '50 нажатий в режиме High Risk',\r\n    icon: '🔥',\r\n    requirement: 50,\r\n    progress: 0,\r\n    completed: false,\r\n    reward: 500,\r\n    category: 'risk'\r\n  },\r\n  {\r\n    id: 'time_survivor',\r\n    name: 'Выживальщик',\r\n    description: 'Выживи 5 минут без поражения',\r\n    icon: '⏰',\r\n    requirement: 300,\r\n    progress: 0,\r\n    completed: false,\r\n    reward: 1000,\r\n    category: 'survival'\r\n  }\r\n];\r\n\r\nexport const useGameStore = create<GameStore>((set, get) => ({\r\n  // Initial state\r\n  gameState: defaultGameState,\r\n  player: defaultPlayer,\r\n  singleMode: defaultSingleMode,\r\n  achievements: defaultAchievements,\r\n  sounds: defaultSounds,\r\n  levelUpNotification: {\r\n    isVisible: false,\r\n    level: null,\r\n    voltsReward: 0\r\n  },\r\n\r\n  // Actions\r\n  startSingleMode: (difficulty) => {\r\n    set({\r\n      gameState: {\r\n        ...get().gameState,\r\n        mode: 'single',\r\n        isPlaying: true,\r\n        gameTime: 0,\r\n        score: 0\r\n      },\r\n      singleMode: {\r\n        ...defaultSingleMode,\r\n        difficulty\r\n      }\r\n    });\r\n  },\r\n\r\n  clickOutlet: () => {\r\n    const state = get();\r\n    const now = Date.now();\r\n    const timeSinceLastClick = now - state.singleMode.lastClickTime;\r\n    \r\n    // Calculate risk level based on timing\r\n    let currentRisk: SingleModeState['currentRisk'] = 'low';\r\n    if (timeSinceLastClick < 1000) currentRisk = 'extreme';\r\n    else if (timeSinceLastClick < 2000) currentRisk = 'high';\r\n    else if (timeSinceLastClick < 3000) currentRisk = 'medium';\r\n\r\n    // Update click stats\r\n    set({\r\n      player: {\r\n        ...state.player,\r\n        totalClicks: state.player.totalClicks + 1\r\n      },\r\n      singleMode: {\r\n        ...state.singleMode,\r\n        lastClickTime: now,\r\n        currentRisk\r\n      }\r\n    });\r\n  },\r\n\r\n  updateScore: (scoreData: ScoreData) => {\r\n    const state = get();\r\n    const newScore = state.gameState.score + scoreData.totalPoints;\r\n    const newVolts = state.player.volts + scoreData.totalPoints;\r\n    \r\n    // Update streak if it was a success\r\n    const isSuccess = scoreData.reason !== 'Поражение током';\r\n    const newStreak = isSuccess ? state.player.streak + 1 : 0;\r\n    const newStreakCount = isSuccess ? state.singleMode.streakCount + 1 : 0;\r\n    \r\n    // Calculate experience based on action\r\n    let experienceGained = 0;\r\n    if (isSuccess) {\r\n      // Base experience for successful click\r\n      experienceGained = EXPERIENCE_REWARDS.SAFE_CLICK;\r\n      \r\n      // Bonus experience for risky clicks\r\n      if (scoreData.riskMultiplier >= 2.0) {\r\n        experienceGained = EXPERIENCE_REWARDS.RISKY_CLICK;\r\n      }\r\n      if (scoreData.riskMultiplier >= 3.0) {\r\n        experienceGained = EXPERIENCE_REWARDS.EXTREME_CLICK;\r\n      }\r\n      \r\n      // Bonus experience for streaks\r\n      if (newStreak === 5) experienceGained += EXPERIENCE_REWARDS.STREAK_5;\r\n      if (newStreak === 10) experienceGained += EXPERIENCE_REWARDS.STREAK_10;\r\n      if (newStreak === 25) experienceGained += EXPERIENCE_REWARDS.STREAK_25;\r\n      if (newStreak === 50) experienceGained += EXPERIENCE_REWARDS.STREAK_50;\r\n    } else {\r\n      // Small experience even for getting shocked\r\n      experienceGained = EXPERIENCE_REWARDS.SHOCK_SURVIVAL;\r\n    }\r\n    \r\n    set({\r\n      gameState: {\r\n        ...state.gameState,\r\n        score: newScore\r\n      },\r\n      player: {\r\n        ...state.player,\r\n        volts: newVolts,\r\n        streak: newStreak\r\n      },\r\n      singleMode: {\r\n        ...state.singleMode,\r\n        streakCount: newStreakCount\r\n      }\r\n    });\r\n\r\n    // Add experience\r\n    const { addExperience } = get();\r\n    addExperience(experienceGained);\r\n\r\n    // Check for achievements\r\n    const { unlockAchievement } = get();\r\n    if (state.player.totalClicks === 0) {\r\n      unlockAchievement('first_click');\r\n    }\r\n    if (newStreak === 5) unlockAchievement('survivor_5');\r\n    if (newStreak === 10) unlockAchievement('survivor_10');\r\n    if (newStreak === 25) unlockAchievement('survivor_25');\r\n  },\r\n\r\n  triggerShock: () => {\r\n    const state = get();\r\n    set({\r\n      singleMode: {\r\n        ...state.singleMode,\r\n        shockActive: true,\r\n        streakCount: 0\r\n      },\r\n      player: {\r\n        ...state.player,\r\n        streak: 0\r\n      }\r\n    });\r\n\r\n    // Reset shock after animation\r\n    setTimeout(() => {\r\n      set({\r\n        singleMode: {\r\n          ...get().singleMode,\r\n          shockActive: false\r\n        }\r\n      });\r\n    }, 500);\r\n  },\r\n\r\n  triggerWarning: () => {\r\n    const state = get();\r\n    set({\r\n      singleMode: {\r\n        ...state.singleMode,\r\n        warningActive: true\r\n      }\r\n    });\r\n\r\n    // Reset warning after timeout\r\n    setTimeout(() => {\r\n      set({\r\n        singleMode: {\r\n          ...get().singleMode,\r\n          warningActive: false\r\n        }\r\n      });\r\n    }, 2000);\r\n  },\r\n\r\n  endGame: () => {\r\n    set({\r\n      gameState: {\r\n        ...get().gameState,\r\n        mode: 'menu',\r\n        isPlaying: false\r\n      }\r\n    });\r\n  },\r\n\r\n  unlockAchievement: (achievementId: string) => {\r\n    const state = get();\r\n    const achievement = state.achievements.find(a => a.id === achievementId);\r\n    \r\n    if (achievement && !achievement.completed) {\r\n      set({\r\n        achievements: state.achievements.map(a =>\r\n          a.id === achievementId \r\n            ? { ...a, completed: true, progress: a.requirement }\r\n            : a\r\n        ),\r\n        player: {\r\n          ...state.player,\r\n          volts: state.player.volts + achievement.reward\r\n        }\r\n      });\r\n    }\r\n  },\r\n\r\n  updatePlayerStats: (stats: Partial<Player>) => {\r\n    const state = get();\r\n    set({\r\n      player: {\r\n        ...state.player,\r\n        ...stats\r\n      }\r\n    });\r\n  },\r\n\r\n  addExperience: (amount: number) => {\r\n    const state = get();\r\n    const newExperience = state.player.experience + amount;\r\n    const oldLevel = calculateLevel(state.player.experience);\r\n    const newLevel = calculateLevel(newExperience);\r\n    \r\n    // Check if player leveled up\r\n    if (newLevel.level > oldLevel.level) {\r\n      // Player leveled up! Give rewards\r\n      const newVolts = state.player.volts + newLevel.voltsReward;\r\n      \r\n      set({\r\n        player: {\r\n          ...state.player,\r\n          experience: newExperience,\r\n          level: newLevel.level,\r\n          volts: newVolts\r\n        }\r\n      });\r\n      \r\n      // Show level up notification\r\n      const { showLevelUpNotification } = get();\r\n      showLevelUpNotification(newLevel, newLevel.voltsReward);\r\n    } else {\r\n      // Just add experience\r\n      set({\r\n        player: {\r\n          ...state.player,\r\n          experience: newExperience\r\n        }\r\n      });\r\n    }\r\n  },\r\n\r\n  getCurrentLevelInfo: () => {\r\n    const state = get();\r\n    return {\r\n      currentLevel: calculateLevel(state.player.experience),\r\n      progressInfo: getExperienceToNextLevel(state.player.experience)\r\n    };\r\n  },\r\n\r\n  showLevelUpNotification: (level, voltsReward) => {\r\n    set({\r\n      levelUpNotification: {\r\n        isVisible: true,\r\n        level,\r\n        voltsReward\r\n      }\r\n    });\r\n  },\r\n\r\n  hideLevelUpNotification: () => {\r\n    set({\r\n      levelUpNotification: {\r\n        isVisible: false,\r\n        level: null,\r\n        voltsReward: 0\r\n      }\r\n    });\r\n  }\r\n}));\r\n","/**\r\n * Haptic Manager - управление вибрацией в Telegram Mini App\r\n * Поддерживает различные типы вибрации для игровых событий\r\n */\r\n\r\nimport type { TelegramHapticFeedback } from '../types/telegram';\r\n\r\n// Типы вибрации Telegram Web App\r\nexport type HapticType = 'light' | 'medium' | 'heavy' | 'rigid' | 'soft';\r\nexport type NotificationType = 'error' | 'success' | 'warning';\r\n\r\n// Расширяем Window интерфейс для Telegram\r\ndeclare global {\r\n  interface Window {\r\n    Telegram?: {\r\n      WebApp?: {\r\n        HapticFeedback?: TelegramHapticFeedback;\r\n        [key: string]: any;\r\n      };\r\n    };\r\n  }\r\n}\r\n\r\nclass HapticManager {\r\n  private hapticFeedback: TelegramHapticFeedback | null = null;\r\n  private isEnabled: boolean = true;\r\n  private isTelegramEnvironment: boolean = false;\r\n\r\n  constructor() {\r\n    this.initializeTelegramHaptics();\r\n  }\r\n\r\n  /**\r\n   * Инициализация Telegram Haptic API\r\n   */\r\n  private initializeTelegramHaptics(): void {\r\n    try {\r\n      // Проверяем, работаем ли мы в Telegram\r\n      if (typeof window !== 'undefined' && window.Telegram?.WebApp) {\r\n        this.isTelegramEnvironment = true;\r\n        // Проверяем наличие HapticFeedback в объекте WebApp\r\n        const webApp = window.Telegram.WebApp as any;\r\n        if (webApp.HapticFeedback) {\r\n          this.hapticFeedback = webApp.HapticFeedback;\r\n          console.log('Telegram Haptic Feedback initialized');\r\n        } else {\r\n          console.log('HapticFeedback not available in this Telegram version');\r\n        }\r\n      } else {\r\n        console.log('Not in Telegram environment, haptics disabled');\r\n      }\r\n    } catch (error) {\r\n      console.warn('Failed to initialize Telegram haptics:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Включение/выключение вибрации\r\n   */\r\n  setEnabled(enabled: boolean): void {\r\n    this.isEnabled = enabled;\r\n  }\r\n\r\n  /**\r\n   * Проверка доступности вибрации\r\n   */\r\n  isAvailable(): boolean {\r\n    return (\r\n      (this.isTelegramEnvironment && this.hapticFeedback !== null) || \r\n      (typeof window !== 'undefined' && 'navigator' in window && 'vibrate' in navigator)\r\n    ) && this.isEnabled;\r\n  }\r\n\r\n  /**\r\n   * Базовая вибрация для нажатий\r\n   */\r\n  light(): void {\r\n    if (this.isAvailable()) {\r\n      this.hapticFeedback!.impactOccurred('light');\r\n    } else {\r\n      this.fallbackVibration(50);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Средняя вибрация для важных действий\r\n   */\r\n  medium(): void {\r\n    if (this.isAvailable()) {\r\n      this.hapticFeedback!.impactOccurred('medium');\r\n    } else {\r\n      this.fallbackVibration(100);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Сильная вибрация для критических событий\r\n   */\r\n  heavy(): void {\r\n    if (this.isAvailable()) {\r\n      this.hapticFeedback!.impactOccurred('heavy');\r\n    } else {\r\n      this.fallbackVibration(150);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Мягкая вибрация для деликатных действий\r\n   */\r\n  soft(): void {\r\n    if (this.isAvailable()) {\r\n      this.hapticFeedback!.impactOccurred('soft');\r\n    } else {\r\n      this.fallbackVibration(30);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Жесткая вибрация для резких действий\r\n   */\r\n  rigid(): void {\r\n    if (this.isAvailable()) {\r\n      this.hapticFeedback!.impactOccurred('rigid');\r\n    } else {\r\n      this.fallbackVibration(200);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Вибрация для уведомлений\r\n   */\r\n  success(): void {\r\n    if (this.isAvailable()) {\r\n      this.hapticFeedback!.notificationOccurred('success');\r\n    } else {\r\n      this.customPattern([100, 50, 100]);\r\n    }\r\n  }\r\n\r\n  error(): void {\r\n    if (this.isAvailable()) {\r\n      this.hapticFeedback!.notificationOccurred('error');\r\n    } else {\r\n      this.customPattern([200, 100, 200, 100, 200]);\r\n    }\r\n  }\r\n\r\n  warning(): void {\r\n    if (this.isAvailable()) {\r\n      this.hapticFeedback!.notificationOccurred('warning');\r\n    } else {\r\n      this.customPattern([150, 50, 150]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Вибрация при изменении выбора\r\n   */\r\n  selection(): void {\r\n    if (this.isAvailable()) {\r\n      this.hapticFeedback!.selectionChanged();\r\n    } else {\r\n      this.fallbackVibration(25);\r\n    }\r\n  }\r\n\r\n  // ==================== ИГРОВЫЕ СОБЫТИЯ ====================\r\n\r\n  /**\r\n   * Вибрация при нажатии на розетку\r\n   */\r\n  outletPress(): void {\r\n    this.medium();\r\n  }\r\n\r\n  /**\r\n   * Вибрация при успешном выживании\r\n   */\r\n  survivalSuccess(): void {\r\n    this.success();\r\n  }\r\n\r\n  /**\r\n   * Вибрация при поражении током\r\n   */\r\n  electricShock(): void {\r\n    this.rigid();\r\n    // Дополнительная вибрация через 100мс\r\n    setTimeout(() => {\r\n      if (this.isEnabled) this.heavy();\r\n    }, 100);\r\n  }\r\n\r\n  /**\r\n   * Вибрация при повышении уровня\r\n   */\r\n  levelUp(): void {\r\n    // Серия из 3-х вибраций\r\n    this.success();\r\n    setTimeout(() => this.medium(), 150);\r\n    setTimeout(() => this.success(), 300);\r\n  }\r\n\r\n  /**\r\n   * Вибрация при получении награды\r\n   */\r\n  rewardReceived(): void {\r\n    this.light();\r\n    setTimeout(() => this.medium(), 100);\r\n  }\r\n\r\n  /**\r\n   * Вибрация для серийных достижений\r\n   */\r\n  streakAchievement(streakCount: number): void {\r\n    if (streakCount >= 25) {\r\n      // Мощная вибрация для больших серий\r\n      this.heavy();\r\n      setTimeout(() => this.heavy(), 200);\r\n      setTimeout(() => this.heavy(), 400);\r\n    } else if (streakCount >= 10) {\r\n      // Средняя вибрация для средних серий\r\n      this.medium();\r\n      setTimeout(() => this.medium(), 150);\r\n    } else if (streakCount >= 5) {\r\n      // Легкая вибрация для небольших серий\r\n      this.light();\r\n      setTimeout(() => this.light(), 100);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Вибрация при использовании предмета\r\n   */\r\n  itemUsed(): void {\r\n    this.soft();\r\n  }\r\n\r\n  /**\r\n   * Вибрация при покупке в магазине\r\n   */\r\n  shopPurchase(): void {\r\n    this.medium();\r\n    setTimeout(() => this.light(), 100);\r\n  }\r\n\r\n  /**\r\n   * Вибрация при входящем вызове в игру\r\n   */\r\n  gameInvitation(): void {\r\n    this.warning();\r\n    setTimeout(() => this.light(), 500);\r\n    setTimeout(() => this.light(), 1000);\r\n  }\r\n\r\n  /**\r\n   * Вибрация при начале раунда\r\n   */\r\n  roundStart(): void {\r\n    this.light();\r\n  }\r\n\r\n  /**\r\n   * Вибрация при окончании игры\r\n   */\r\n  gameEnd(isWinner: boolean): void {\r\n    if (isWinner) {\r\n      this.success();\r\n      setTimeout(() => this.medium(), 200);\r\n      setTimeout(() => this.success(), 400);\r\n    } else {\r\n      this.error();\r\n    }\r\n  }\r\n\r\n  // ==================== ВСПОМОГАТЕЛЬНЫЕ МЕТОДЫ ====================\r\n\r\n  /**\r\n   * Резервная вибрация для браузеров без Telegram API\r\n   */\r\n  private fallbackVibration(duration: number): void {\r\n    if ('navigator' in window && 'vibrate' in navigator) {\r\n      try {\r\n        navigator.vibrate(duration);\r\n        console.log(`🔹 Fallback vibration: ${duration}ms`);\r\n      } catch (error) {\r\n        console.warn('Vibration not supported:', error);\r\n      }\r\n    } else {\r\n      // Визуальная обратная связь для устройств без вибрации\r\n      console.log(`📳 Haptic feedback: ${duration}ms (visual only)`);\r\n      this.visualFeedback(duration);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Визуальная обратная связь для устройств без вибрации\r\n   */\r\n  private visualFeedback(duration: number): void {\r\n    // Создаем временную визуальную индикацию\r\n    const indicator = document.createElement('div');\r\n    indicator.style.cssText = `\r\n      position: fixed;\r\n      top: 20px;\r\n      right: 20px;\r\n      background: #FF6B35;\r\n      color: white;\r\n      padding: 8px 12px;\r\n      border-radius: 20px;\r\n      font-size: 12px;\r\n      font-weight: bold;\r\n      z-index: 10000;\r\n      pointer-events: none;\r\n      animation: pulse 0.3s ease-in-out;\r\n    `;\r\n    indicator.textContent = `📳 ${duration}ms`;\r\n    \r\n    // Добавляем CSS анимацию\r\n    if (!document.querySelector('#haptic-style')) {\r\n      const style = document.createElement('style');\r\n      style.id = 'haptic-style';\r\n      style.textContent = `\r\n        @keyframes pulse {\r\n          0% { transform: scale(0.8); opacity: 0; }\r\n          50% { transform: scale(1.1); opacity: 1; }\r\n          100% { transform: scale(1); opacity: 0.8; }\r\n        }\r\n      `;\r\n      document.head.appendChild(style);\r\n    }\r\n    \r\n    document.body.appendChild(indicator);\r\n    \r\n    setTimeout(() => {\r\n      if (indicator.parentNode) {\r\n        indicator.parentNode.removeChild(indicator);\r\n      }\r\n    }, Math.max(duration, 500));\r\n  }\r\n\r\n  /**\r\n   * Кастомный паттерн вибрации\r\n   */\r\n  private customPattern(pattern: number[]): void {\r\n    if ('navigator' in window && 'vibrate' in navigator) {\r\n      try {\r\n        navigator.vibrate(pattern);\r\n        console.log(`🔹 Vibration pattern: [${pattern.join(', ')}]ms`);\r\n      } catch (error) {\r\n        console.warn('Vibration pattern not supported:', error);\r\n      }\r\n    } else {\r\n      // Эмуляция паттерна через визуальную обратную связь\r\n      console.log(`📳 Haptic pattern: [${pattern.join(', ')}]ms (visual only)`);\r\n      this.visualPatternFeedback(pattern);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Визуальная эмуляция паттерна вибрации\r\n   */\r\n  private visualPatternFeedback(pattern: number[]): void {\r\n    let delay = 0;\r\n    for (let i = 0; i < pattern.length; i += 2) {\r\n      const vibrateDuration = pattern[i];\r\n      const pauseDuration = pattern[i + 1] || 0;\r\n      \r\n      setTimeout(() => {\r\n        this.visualFeedback(vibrateDuration);\r\n      }, delay);\r\n      \r\n      delay += vibrateDuration + pauseDuration;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Тестовая вибрация для настроек\r\n   */\r\n  test(): void {\r\n    this.medium();\r\n    setTimeout(() => this.light(), 200);\r\n    setTimeout(() => this.heavy(), 400);\r\n  }\r\n}\r\n\r\n// Глобальный экземпляр менеджера вибрации\r\nexport const hapticManager = new HapticManager();\r\n\r\nexport default hapticManager;\r\n","import React from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { useGameStore } from '../store/gameStore';\r\n\r\ninterface ScoreBreakdownProps {\r\n  onClose: () => void;\r\n}\r\n\r\nexport const ScoreBreakdown: React.FC<ScoreBreakdownProps> = ({ onClose }) => {\r\n  const { player, singleMode, gameState } = useGameStore();\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      exit={{ opacity: 0 }}\r\n      className=\"fixed inset-0 bg-black/80 flex items-center justify-center p-4 z-50\"\r\n      onClick={onClose}\r\n    >\r\n      <motion.div\r\n        initial={{ opacity: 0, y: 20, scale: 0.9 }}\r\n        animate={{ opacity: 1, y: 0, scale: 1 }}\r\n        exit={{ opacity: 0, y: 20, scale: 0.9 }}\r\n        className=\"glass-effect p-6 max-w-2xl mx-auto relative max-h-[90vh] overflow-y-auto\"\r\n        onClick={(e) => e.stopPropagation()}\r\n      >\r\n        {/* Close Button */}\r\n        <button\r\n          onClick={onClose}\r\n          className=\"absolute top-4 right-4 text-gray-400 hover:text-white transition-colors text-2xl\"\r\n        >\r\n          ✕\r\n        </button>\r\n\r\n        <h3 className=\"text-2xl font-bold text-center mb-6 text-primary-orange\">\r\n          📊 Система очков и уровней\r\n        </h3>\r\n\r\n        {/* Current Stats */}\r\n        <div className=\"grid grid-cols-3 gap-4 mb-6\">\r\n          <div className=\"text-center glass-effect p-3 rounded-lg\">\r\n            <div className=\"text-xs text-gray-400\">ТЕКУЩАЯ СЕРИЯ</div>\r\n            <div className=\"text-xl font-bold text-yellow-400\">\r\n              {singleMode.streakCount}\r\n            </div>\r\n          </div>\r\n          <div className=\"text-center glass-effect p-3 rounded-lg\">\r\n            <div className=\"text-xs text-gray-400\">ТЕКУЩИЙ СЧЕТ</div>\r\n            <div className=\"text-xl font-bold text-green-400\">\r\n              {gameState.score}⚡\r\n            </div>\r\n          </div>\r\n          <div className=\"text-center glass-effect p-3 rounded-lg\">\r\n            <div className=\"text-xs text-gray-400\">ВСЕГО ВОЛЬТ</div>\r\n            <div className=\"text-xl font-bold text-blue-400\">\r\n              {player.volts}⚡\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Scoring Rules */}\r\n        <div className=\"space-y-6\">\r\n          {/* Experience System */}\r\n          <div>\r\n            <h4 className=\"text-lg font-bold text-accent-blue mb-3\">📈 Система опыта и уровней</h4>\r\n            <div className=\"grid grid-cols-2 gap-3\">\r\n              <div className=\"glass-effect p-3 rounded-lg\">\r\n                <div className=\"text-green-400 font-bold\">🟢 Безопасное нажатие:</div>\r\n                <div className=\"text-sm text-gray-300\">+10 опыта</div>\r\n              </div>\r\n              <div className=\"glass-effect p-3 rounded-lg\">\r\n                <div className=\"text-yellow-400 font-bold\">🟡 Рискованное (2x+):</div>\r\n                <div className=\"text-sm text-gray-300\">+15 опыта</div>\r\n              </div>\r\n              <div className=\"glass-effect p-3 rounded-lg\">\r\n                <div className=\"text-red-400 font-bold\">🔴 Экстремальное (3x+):</div>\r\n                <div className=\"text-sm text-gray-300\">+25 опыта</div>\r\n              </div>\r\n              <div className=\"glass-effect p-3 rounded-lg\">\r\n                <div className=\"text-orange-400 font-bold\">💥 Поражение током:</div>\r\n                <div className=\"text-sm text-gray-300\">+5 опыта</div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"mt-3 text-center\">\r\n              <div className=\"text-sm text-yellow-400 font-semibold\">\r\n                🏆 За повышение уровня вы получаете бонусные вольты!\r\n              </div>\r\n              <div className=\"text-xs text-gray-400 mt-1\">\r\n                Уровень 2: +50⚡ • Уровень 5: +150⚡ • Уровень 10: +500⚡\r\n              </div>\r\n              <div className=\"text-xs text-blue-300 mt-2\">\r\n                🎨 Изображение розетки меняется каждые 5 уровней!\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Basic Points Table */}\r\n          <div>\r\n            <h4 className=\"text-lg font-bold text-accent-blue mb-3\">⚡ Базовые очки за нажатие</h4>\r\n            <div className=\"grid grid-cols-2 gap-3\">\r\n              <div className=\"glass-effect p-3 rounded-lg\">\r\n                <div className=\"text-green-400 font-bold\">🟢 Безопасное нажатие:</div>\r\n                <div className=\"text-sm text-gray-300\">+10⚡ (базовые очки)</div>\r\n              </div>\r\n              <div className=\"glass-effect p-3 rounded-lg\">\r\n                <div className=\"text-red-400 font-bold\">💥 Поражение током:</div>\r\n                <div className=\"text-sm text-gray-300\">-8⚡ до -25⚡ (случайно)</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Risk Multipliers */}\r\n          <div>\r\n            <h4 className=\"text-lg font-bold text-accent-blue mb-3\">🎯 Множители за риск</h4>\r\n            <div className=\"grid grid-cols-2 gap-3\">\r\n              <div className=\"glass-effect p-3 rounded-lg\">\r\n                <div className=\"text-green-400 font-bold\">🟢 Лёгкий (15% риск):</div>\r\n                <div className=\"text-sm text-gray-300\">×1.0 (базовые очки)</div>\r\n              </div>\r\n              <div className=\"glass-effect p-3 rounded-lg\">\r\n                <div className=\"text-yellow-400 font-bold\">🟡 Средний (25% риск):</div>\r\n                <div className=\"text-sm text-gray-300\">×1.5 множитель</div>\r\n              </div>\r\n              <div className=\"glass-effect p-3 rounded-lg\">\r\n                <div className=\"text-orange-400 font-bold\">🟠 Сложный (35% риск):</div>\r\n                <div className=\"text-sm text-gray-300\">×2.0 множитель</div>\r\n              </div>\r\n              <div className=\"glass-effect p-3 rounded-lg\">\r\n                <div className=\"text-red-400 font-bold\">🔴 Экстрим (50% риск):</div>\r\n                <div className=\"text-sm text-gray-300\">×3.0 множитель</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Streak Bonuses */}\r\n          <div>\r\n            <h4 className=\"text-lg font-bold text-accent-blue mb-3\">🔥 Бонусы за серии</h4>\r\n            <div className=\"grid grid-cols-2 gap-3\">\r\n              <div className=\"glass-effect p-3 rounded-lg\">\r\n                <div className=\"text-gray-400 font-bold\">0-4 нажатий:</div>\r\n                <div className=\"text-sm text-gray-300\">×1.0 (без бонуса)</div>\r\n              </div>\r\n              <div className=\"glass-effect p-3 rounded-lg\">\r\n                <div className=\"text-yellow-400 font-bold\">5+ нажатий:</div>\r\n                <div className=\"text-sm text-gray-300\">×1.2 бонус</div>\r\n              </div>\r\n              <div className=\"glass-effect p-3 rounded-lg\">\r\n                <div className=\"text-orange-400 font-bold\">10+ нажатий:</div>\r\n                <div className=\"text-sm text-gray-300\">×1.5 бонус</div>\r\n              </div>\r\n              <div className=\"glass-effect p-3 rounded-lg\">\r\n                <div className=\"text-red-400 font-bold\">25+ нажатий:</div>\r\n                <div className=\"text-sm text-gray-300\">×2.0 бонус</div>\r\n              </div>\r\n              <div className=\"glass-effect p-3 rounded-lg\">\r\n                <div className=\"text-purple-400 font-bold\">50+ нажатий:</div>\r\n                <div className=\"text-sm text-gray-300\">×3.0 бонус</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Formula */}\r\n          <div>\r\n            <h4 className=\"text-lg font-bold text-accent-blue mb-3\">🧮 Формула расчёта</h4>\r\n            <div className=\"glass-effect p-4 rounded-lg bg-gradient-to-r from-blue-500/10 to-purple-500/10\">\r\n              <div className=\"text-center text-lg font-mono\">\r\n                <span className=\"text-white\">Итоговые очки</span> = \r\n                <span className=\"text-green-400\"> 10⚡</span> × \r\n                <span className=\"text-orange-400\"> Риск</span> × \r\n                <span className=\"text-yellow-400\"> Серия</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Examples */}\r\n          <div>\r\n            <h4 className=\"text-lg font-bold text-accent-blue mb-3\">💡 Примеры расчётов</h4>\r\n            <div className=\"space-y-3\">\r\n              <div className=\"bg-black/30 p-3 rounded-lg\">\r\n                <div className=\"text-green-400 font-bold\">🟢 Безопасная игра:</div>\r\n                <div className=\"text-sm text-gray-300\">\r\n                  10⚡ × 1.0 (низкий риск) × 1.2 (5+ серия) = <span className=\"text-white font-bold\">12⚡</span>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"bg-black/30 p-3 rounded-lg\">\r\n                <div className=\"text-orange-400 font-bold\">🟠 Рискованная игра:</div>\r\n                <div className=\"text-sm text-gray-300\">\r\n                  10⚡ × 2.0 (высокий риск) × 1.5 (10+ серия) = <span className=\"text-white font-bold\">30⚡</span>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"bg-black/30 p-3 rounded-lg\">\r\n                <div className=\"text-red-400 font-bold\">🔴 Экстремальная игра:</div>\r\n                <div className=\"text-sm text-gray-300\">\r\n                  10⚡ × 3.0 (экстрим риск) × 2.0 (25+ серия) = <span className=\"text-white font-bold\">60⚡</span>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"bg-black/30 p-3 rounded-lg\">\r\n                <div className=\"text-red-400 font-bold\">💥 Поражение током:</div>\r\n                <div className=\"text-sm text-gray-300\">\r\n                  Случайно от 8⚡ до 25⚡ + <span className=\"text-red-400\">серия сбрасывается</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mt-6 text-center text-xs text-gray-400\">\r\n          💡 Совет: Балансируйте между риском и безопасностью для максимального заработка!\r\n        </div>\r\n      </motion.div>\r\n    </motion.div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { useGameStore } from '../store/gameStore';\r\nimport { getLevelProgress, getOutletImageByLevel } from '../utils/levelSystem';\r\n\r\nexport const LevelDisplay: React.FC = () => {\r\n  const { player, getCurrentLevelInfo } = useGameStore();\r\n  const { currentLevel, progressInfo } = getCurrentLevelInfo();\r\n  const progressPercent = getLevelProgress(player.experience);\r\n  \r\n  // Check if outlet image will change at next level\r\n  const currentOutletImage = getOutletImageByLevel(currentLevel.level);\r\n  const nextOutletImage = progressInfo.nextLevel ? getOutletImageByLevel(progressInfo.nextLevel.level) : null;\r\n  const outletWillChange = nextOutletImage && nextOutletImage !== currentOutletImage;\r\n\r\n  return (\r\n    <div className=\"glass-effect p-4 rounded-xl space-y-3\">\r\n      {/* Level Title and Number */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          {/* Current Outlet Image */}\r\n          <img \r\n            src={getOutletImageByLevel(currentLevel.level)} \r\n            alt={`Розетка уровня ${currentLevel.level}`}\r\n            className=\"w-12 h-12 rounded-lg border-2 border-primary-orange shadow-lg\"\r\n          />\r\n          <div>\r\n            <div className=\"text-xs text-gray-400 uppercase tracking-wide\">Уровень</div>\r\n            <div className=\"flex items-baseline space-x-2\">\r\n              <span className=\"text-2xl font-bold text-primary-orange\">{currentLevel.level}</span>\r\n              <span className=\"text-sm text-gray-300\">{currentLevel.title}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"text-right\">\r\n          <div className=\"text-xs text-gray-400\">Опыт</div>\r\n          <div className=\"text-lg font-bold text-accent-blue\">\r\n            {player.experience.toLocaleString()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Progress Bar */}\r\n      <div className=\"space-y-2\">\r\n        <div className=\"flex justify-between text-xs text-gray-400\">\r\n          <span>{progressInfo.current}</span>\r\n          <span>{progressInfo.nextLevel ? `${progressInfo.remaining} до ${progressInfo.nextLevel.level} уровня` : 'Максимум'}</span>\r\n          <span>{progressInfo.required}</span>\r\n        </div>\r\n        \r\n        <div className=\"relative w-full bg-gray-700 rounded-full h-2 overflow-hidden\">\r\n          <motion.div\r\n            className=\"h-full bg-gradient-to-r from-accent-blue to-primary-orange rounded-full\"\r\n            initial={{ width: 0 }}\r\n            animate={{ width: `${progressPercent}%` }}\r\n            transition={{ duration: 0.8, ease: \"easeOut\" }}\r\n          />\r\n          \r\n          {/* Spark effect on progress bar */}\r\n          {progressPercent > 0 && (\r\n            <motion.div\r\n              className=\"absolute top-0 right-0 w-1 h-full bg-white opacity-80\"\r\n              style={{ right: `${100 - progressPercent}%` }}\r\n              animate={{ opacity: [0.8, 0.3, 0.8] }}\r\n              transition={{ repeat: Infinity, duration: 1.5 }}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Level Description */}\r\n      <div className=\"text-xs text-gray-400 italic text-center\">\r\n        {currentLevel.description}\r\n      </div>\r\n\r\n      {/* Next Level Preview */}\r\n      {progressInfo.nextLevel && (\r\n        <div className=\"text-center pt-2 border-t border-gray-600\">\r\n          <div className=\"text-xs text-gray-500\">Следующий уровень</div>\r\n          <div className=\"text-sm\">\r\n            <span className=\"text-accent-lime font-semibold\">{progressInfo.nextLevel.title}</span>\r\n            <span className=\"text-gray-400\"> • </span>\r\n            <span className=\"text-yellow-400\">+{progressInfo.nextLevel.voltsReward}⚡</span>\r\n          </div>\r\n          \r\n          {/* Show next outlet image if it will change */}\r\n          {outletWillChange && (\r\n            <div className=\"flex items-center justify-center space-x-2 mt-2\">\r\n              <span className=\"text-xs text-blue-300\">🎨 Новая розетка:</span>\r\n              <img \r\n                src={nextOutletImage} \r\n                alt={`Розетка уровня ${progressInfo.nextLevel.level}`}\r\n                className=\"w-6 h-6 rounded border border-blue-400 shadow-sm\"\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { hapticManager } from '../utils/hapticManager';\r\n\r\ninterface HapticSettingsProps {\r\n  isVisible: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nexport const HapticSettings: React.FC<HapticSettingsProps> = ({\r\n  isVisible,\r\n  onClose\r\n}) => {\r\n  const [isEnabled, setIsEnabled] = useState(true);\r\n  const [testingType, setTestingType] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    // Load settings from localStorage\r\n    const savedEnabled = localStorage.getItem('hapticEnabled');\r\n    if (savedEnabled !== null) {\r\n      const enabled = JSON.parse(savedEnabled);\r\n      setIsEnabled(enabled);\r\n      hapticManager.setEnabled(enabled);\r\n    }\r\n  }, []);\r\n\r\n  const handleToggleEnabled = () => {\r\n    const newValue = !isEnabled;\r\n    setIsEnabled(newValue);\r\n    hapticManager.setEnabled(newValue);\r\n    localStorage.setItem('hapticEnabled', JSON.stringify(newValue));\r\n    \r\n    // Test vibration when enabling\r\n    if (newValue) {\r\n      hapticManager.test();\r\n    }\r\n  };\r\n\r\n  const testHaptic = (type: string, action: () => void) => {\r\n    setTestingType(type);\r\n    action();\r\n    setTimeout(() => setTestingType(null), 500);\r\n  };\r\n\r\n  if (!isVisible) return null;\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      exit={{ opacity: 0 }}\r\n      className=\"fixed inset-0 bg-black/80 flex items-center justify-center z-50 p-4\"\r\n      onClick={onClose}\r\n    >\r\n      <motion.div\r\n        initial={{ scale: 0.8, opacity: 0 }}\r\n        animate={{ scale: 1, opacity: 1 }}\r\n        exit={{ scale: 0.8, opacity: 0 }}\r\n        className=\"bg-gradient-to-br from-gray-900 to-gray-800 rounded-2xl p-6 max-w-sm w-full border border-primary-orange/20\"\r\n        onClick={(e) => e.stopPropagation()}\r\n      >\r\n        {/* Header */}\r\n        <div className=\"flex justify-between items-center mb-6\">\r\n          <h2 className=\"text-2xl font-bold text-primary-orange\">Вибрация</h2>\r\n          <button\r\n            onClick={onClose}\r\n            className=\"text-gray-400 hover:text-white text-2xl\"\r\n          >\r\n            ×\r\n          </button>\r\n        </div>\r\n\r\n        {/* Enable/Disable Toggle */}\r\n        <div className=\"mb-6\">\r\n          <div className=\"flex justify-between items-center p-4 bg-gray-800/50 rounded-xl\">\r\n            <div>\r\n              <h3 className=\"text-lg font-semibold text-white\">Включить вибрацию</h3>\r\n              <p className=\"text-sm text-gray-400\">\r\n                {hapticManager.isAvailable() \r\n                  ? 'Поддерживается вашим устройством' \r\n                  : 'Недоступно на вашем устройстве'\r\n                }\r\n              </p>\r\n            </div>\r\n            <motion.button\r\n              onClick={handleToggleEnabled}\r\n              className={`w-12 h-6 rounded-full p-1 transition-colors ${\r\n                isEnabled ? 'bg-primary-orange' : 'bg-gray-600'\r\n              }`}\r\n              whileTap={{ scale: 0.95 }}\r\n            >\r\n              <motion.div\r\n                className=\"w-4 h-4 bg-white rounded-full\"\r\n                animate={{ x: isEnabled ? 24 : 0 }}\r\n                transition={{ type: 'spring', stiffness: 500, damping: 30 }}\r\n              />\r\n            </motion.button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Test Vibrations */}\r\n        {isEnabled && (\r\n          <div className=\"space-y-3\">\r\n            <h3 className=\"text-lg font-semibold text-white mb-3\">Тест вибрации</h3>\r\n            \r\n            {/* Game Events */}\r\n            <div className=\"space-y-2\">\r\n              <h4 className=\"text-sm font-medium text-gray-300\">Игровые события</h4>\r\n              \r\n              <motion.button\r\n                onClick={() => testHaptic('press', () => hapticManager.outletPress())}\r\n                className={`w-full p-3 rounded-lg border transition-colors ${\r\n                  testingType === 'press' \r\n                    ? 'bg-blue-500/30 border-blue-400 text-blue-200' \r\n                    : 'bg-gray-700/50 border-gray-600 text-gray-300 hover:bg-gray-600/50'\r\n                }`}\r\n                whileHover={{ scale: 1.02 }}\r\n                whileTap={{ scale: 0.98 }}\r\n              >\r\n                🔌 Нажатие на розетку\r\n              </motion.button>\r\n\r\n              <motion.button\r\n                onClick={() => testHaptic('success', () => hapticManager.survivalSuccess())}\r\n                className={`w-full p-3 rounded-lg border transition-colors ${\r\n                  testingType === 'success' \r\n                    ? 'bg-green-500/30 border-green-400 text-green-200' \r\n                    : 'bg-gray-700/50 border-gray-600 text-gray-300 hover:bg-gray-600/50'\r\n                }`}\r\n                whileHover={{ scale: 1.02 }}\r\n                whileTap={{ scale: 0.98 }}\r\n              >\r\n                ✅ Успешное выживание\r\n              </motion.button>\r\n\r\n              <motion.button\r\n                onClick={() => testHaptic('shock', () => hapticManager.electricShock())}\r\n                className={`w-full p-3 rounded-lg border transition-colors ${\r\n                  testingType === 'shock' \r\n                    ? 'bg-red-500/30 border-red-400 text-red-200' \r\n                    : 'bg-gray-700/50 border-gray-600 text-gray-300 hover:bg-gray-600/50'\r\n                }`}\r\n                whileHover={{ scale: 1.02 }}\r\n                whileTap={{ scale: 0.98 }}\r\n              >\r\n                ⚡ Удар током\r\n              </motion.button>\r\n\r\n              <motion.button\r\n                onClick={() => testHaptic('levelup', () => hapticManager.levelUp())}\r\n                className={`w-full p-3 rounded-lg border transition-colors ${\r\n                  testingType === 'levelup' \r\n                    ? 'bg-yellow-500/30 border-yellow-400 text-yellow-200' \r\n                    : 'bg-gray-700/50 border-gray-600 text-gray-300 hover:bg-gray-600/50'\r\n                }`}\r\n                whileHover={{ scale: 1.02 }}\r\n                whileTap={{ scale: 0.98 }}\r\n              >\r\n                🆙 Повышение уровня\r\n              </motion.button>\r\n            </div>\r\n\r\n            {/* Intensity Levels */}\r\n            <div className=\"space-y-2 mt-4\">\r\n              <h4 className=\"text-sm font-medium text-gray-300\">Интенсивность</h4>\r\n              \r\n              <div className=\"grid grid-cols-2 gap-2\">\r\n                <motion.button\r\n                  onClick={() => testHaptic('light', () => hapticManager.light())}\r\n                  className={`p-2 rounded-lg border text-sm transition-colors ${\r\n                    testingType === 'light' \r\n                      ? 'bg-gray-500/30 border-gray-400 text-gray-200' \r\n                      : 'bg-gray-700/50 border-gray-600 text-gray-300 hover:bg-gray-600/50'\r\n                  }`}\r\n                  whileHover={{ scale: 1.02 }}\r\n                  whileTap={{ scale: 0.98 }}\r\n                >\r\n                  Легкая\r\n                </motion.button>\r\n\r\n                <motion.button\r\n                  onClick={() => testHaptic('medium', () => hapticManager.medium())}\r\n                  className={`p-2 rounded-lg border text-sm transition-colors ${\r\n                    testingType === 'medium' \r\n                      ? 'bg-gray-500/30 border-gray-400 text-gray-200' \r\n                      : 'bg-gray-700/50 border-gray-600 text-gray-300 hover:bg-gray-600/50'\r\n                  }`}\r\n                  whileHover={{ scale: 1.02 }}\r\n                  whileTap={{ scale: 0.98 }}\r\n                >\r\n                  Средняя\r\n                </motion.button>\r\n\r\n                <motion.button\r\n                  onClick={() => testHaptic('heavy', () => hapticManager.heavy())}\r\n                  className={`p-2 rounded-lg border text-sm transition-colors ${\r\n                    testingType === 'heavy' \r\n                      ? 'bg-gray-500/30 border-gray-400 text-gray-200' \r\n                      : 'bg-gray-700/50 border-gray-600 text-gray-300 hover:bg-gray-600/50'\r\n                  }`}\r\n                  whileHover={{ scale: 1.02 }}\r\n                  whileTap={{ scale: 0.98 }}\r\n                >\r\n                  Сильная\r\n                </motion.button>\r\n\r\n                <motion.button\r\n                  onClick={() => testHaptic('rigid', () => hapticManager.rigid())}\r\n                  className={`p-2 rounded-lg border text-sm transition-colors ${\r\n                    testingType === 'rigid' \r\n                      ? 'bg-gray-500/30 border-gray-400 text-gray-200' \r\n                      : 'bg-gray-700/50 border-gray-600 text-gray-300 hover:bg-gray-600/50'\r\n                  }`}\r\n                  whileHover={{ scale: 1.02 }}\r\n                  whileTap={{ scale: 0.98 }}\r\n                >\r\n                  Резкая\r\n                </motion.button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Info */}\r\n        <div className=\"mt-6 p-3 bg-blue-900/20 border border-blue-500/30 rounded-lg\">\r\n          <p className=\"text-xs text-blue-300 text-center\">\r\n            💡 Вибрация доступна только в Telegram Mini App на поддерживаемых устройствах\r\n          </p>\r\n        </div>\r\n      </motion.div>\r\n    </motion.div>\r\n  );\r\n};\r\n","/**\r\n * TelegramProvider - компонент для управления интеграцией с Telegram Mini App\r\n */\r\n\r\nimport React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport type { TelegramWebApp, TelegramUser } from '../types/telegram';\r\n\r\ninterface TelegramContextType {\r\n  webApp: TelegramWebApp | null;\r\n  user: TelegramUser | null;\r\n  isInTelegram: boolean;\r\n  platform: string;\r\n  colorScheme: 'light' | 'dark';\r\n}\r\n\r\nconst TelegramContext = createContext<TelegramContextType>({\r\n  webApp: null,\r\n  user: null,\r\n  isInTelegram: false,\r\n  platform: 'unknown',\r\n  colorScheme: 'dark'\r\n});\r\n\r\nexport const useTelegram = () => useContext(TelegramContext);\r\n\r\ninterface TelegramProviderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const TelegramProvider: React.FC<TelegramProviderProps> = ({ children }) => {\r\n  const [webApp, setWebApp] = useState<TelegramWebApp | null>(null);\r\n  const [user, setUser] = useState<TelegramUser | null>(null);\r\n  const [isInTelegram, setIsInTelegram] = useState(false);\r\n  const [platform, setPlatform] = useState('unknown');\r\n  const [colorScheme, setColorScheme] = useState<'light' | 'dark'>('dark');\r\n\r\n  useEffect(() => {\r\n    if (typeof window !== 'undefined' && window.Telegram?.WebApp) {\r\n      const tgWebApp = window.Telegram.WebApp as TelegramWebApp;\r\n      \r\n      setWebApp(tgWebApp);\r\n      setIsInTelegram(true);\r\n      setPlatform(tgWebApp.platform || 'unknown');\r\n      setColorScheme(tgWebApp.colorScheme || 'dark');\r\n      \r\n      // Получение информации о пользователе\r\n      if (tgWebApp.initDataUnsafe?.user) {\r\n        setUser(tgWebApp.initDataUnsafe.user);\r\n      }\r\n\r\n      // Инициализация\r\n      tgWebApp.ready();\r\n      tgWebApp.expand();\r\n\r\n      console.log('Telegram WebApp Context initialized:', {\r\n        platform: tgWebApp.platform,\r\n        colorScheme: tgWebApp.colorScheme,\r\n        user: tgWebApp.initDataUnsafe?.user,\r\n        version: tgWebApp.version\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const contextValue: TelegramContextType = {\r\n    webApp,\r\n    user,\r\n    isInTelegram,\r\n    platform,\r\n    colorScheme\r\n  };\r\n\r\n  return (\r\n    <TelegramContext.Provider value={contextValue}>\r\n      {children}\r\n    </TelegramContext.Provider>\r\n  );\r\n};\r\n\r\nexport default TelegramProvider;\r\n","/**\r\n * TelegramUserInfo - компонент для отображения информации о пользователе Telegram\r\n */\r\n\r\nimport React from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { useTelegram } from './TelegramProvider';\r\n\r\nexport const TelegramUserInfo: React.FC = () => {\r\n  const { user, isInTelegram, platform, colorScheme } = useTelegram();\r\n\r\n  if (!isInTelegram) {\r\n    return (\r\n      <div className=\"text-xs text-gray-500 text-center p-2\">\r\n        💻 Веб-версия (не в Telegram)\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: -10 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      className=\"bg-gradient-to-r from-blue-900/20 to-purple-900/20 border border-blue-500/30 rounded-lg p-3 mb-4\"\r\n    >\r\n      <div className=\"flex items-center justify-between\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          {user?.photo_url ? (\r\n            <img \r\n              src={user.photo_url} \r\n              alt=\"Avatar\" \r\n              className=\"w-8 h-8 rounded-full border border-blue-400/50\"\r\n            />\r\n          ) : (\r\n            <div className=\"w-8 h-8 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center\">\r\n              <span className=\"text-white text-sm font-bold\">\r\n                {user?.first_name?.[0] || '?'}\r\n              </span>\r\n            </div>\r\n          )}\r\n          \r\n          <div>\r\n            <div className=\"text-sm font-medium text-white\">\r\n              {user?.first_name} {user?.last_name}\r\n              {user?.is_premium && <span className=\"ml-1 text-yellow-400\">⭐</span>}\r\n            </div>\r\n            <div className=\"text-xs text-gray-400\">\r\n              @{user?.username || 'no_username'} • {platform}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"text-right\">\r\n          <div className={`text-xs px-2 py-1 rounded-full border ${\r\n            colorScheme === 'dark' \r\n              ? 'bg-gray-800 border-gray-600 text-gray-300' \r\n              : 'bg-gray-200 border-gray-400 text-gray-700'\r\n          }`}>\r\n            {colorScheme === 'dark' ? '🌙' : '☀️'} {colorScheme}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { useGameStore } from '../store/gameStore';\r\nimport { hapticManager } from '../utils/hapticManager';\r\nimport { ScoreBreakdown } from './ScoreBreakdown';\r\nimport { LevelDisplay } from './LevelDisplay';\r\nimport { HapticSettings } from './HapticSettings';\r\nimport { TelegramUserInfo } from './TelegramUserInfo';\r\n\r\nexport const MainMenu: React.FC = () => {\r\n  const { startSingleMode, player, addExperience } = useGameStore();\r\n  const [showScoreBreakdown, setShowScoreBreakdown] = useState(false);\r\n  const [showHapticSettings, setShowHapticSettings] = useState(false);\r\n  \r\n  // Development helper to test level system\r\n  const handleQuickLevelUp = () => {\r\n    addExperience(100); // Add 100 experience for testing\r\n  };\r\n\r\n  const handleStartGame = (difficulty: 'easy' | 'medium' | 'hard' | 'extreme') => {\r\n    hapticManager.medium(); // Вибрация при начале игры\r\n    startSingleMode(difficulty);\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex flex-col items-center justify-center p-4 bg-gradient-to-br from-background-dark to-background-darker\">\r\n      {/* Logo */}\r\n      <motion.div\r\n        initial={{ opacity: 0, y: -50 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.8 }}\r\n        className=\"text-center mb-8\"\r\n      >\r\n        <h1 className=\"text-6xl font-bold text-primary-orange tiger-stripes bg-clip-text text-transparent mb-4\">\r\n          ТИГР\r\n        </h1>\r\n        <h2 className=\"text-4xl font-bold text-accent-blue mb-2\">\r\n          РОЗЕТКА\r\n        </h2>\r\n        <p className=\"text-lg text-gray-300\">\r\n          Telegram Mini App Game\r\n        </p>\r\n      </motion.div>\r\n\r\n      {/* Level Display */}\r\n      <motion.div\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.6, delay: 0.2 }}\r\n        className=\"mb-6\"\r\n      >\r\n        <LevelDisplay />\r\n      </motion.div>\r\n\r\n      {/* Telegram User Info */}\r\n      <motion.div\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.6, delay: 0.25 }}\r\n        className=\"mb-4 w-full max-w-md\"\r\n      >\r\n        <TelegramUserInfo />\r\n      </motion.div>\r\n\r\n      {/* Player Stats */}\r\n      <motion.div\r\n        initial={{ opacity: 0, scale: 0.9 }}\r\n        animate={{ opacity: 1, scale: 1 }}\r\n        transition={{ duration: 0.5, delay: 0.3 }}\r\n        className=\"glass-effect p-6 mb-8 text-center\"\r\n      >\r\n        <div className=\"text-sm text-gray-300 mb-2\">Добро пожаловать, {player.name}!</div>\r\n        <div className=\"flex justify-center space-x-6\">\r\n          <div>\r\n            <div className=\"text-xs text-gray-400\">ВОЛЬТЫ</div>\r\n            <div className=\"text-xl font-bold text-primary-orange\">{player.volts}⚡</div>\r\n          </div>\r\n          <div>\r\n            <div className=\"text-xs text-gray-400\">УРОВЕНЬ</div>\r\n            <div className=\"text-xl font-bold text-accent-blue\">{player.level}</div>\r\n          </div>\r\n          <div>\r\n            <div className=\"text-xs text-gray-400\">ВСЕГО НАЖАТИЙ</div>\r\n            <div className=\"text-xl font-bold text-accent-lime\">{player.totalClicks}</div>\r\n          </div>\r\n        </div>\r\n      </motion.div>\r\n\r\n      {/* Game Mode Selection */}\r\n      <motion.div\r\n        initial={{ opacity: 0, y: 50 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.6, delay: 0.5 }}\r\n        className=\"w-full max-w-md space-y-4\"\r\n      >\r\n        <h3 className=\"text-2xl font-bold text-center text-white mb-6\">\r\n          Выберите сложность\r\n        </h3>\r\n\r\n        {/* Easy Mode */}\r\n        <motion.button\r\n          onClick={() => handleStartGame('easy')}\r\n          className=\"w-full glass-effect p-4 rounded-xl hover:bg-green-500/20 transition-colors\"\r\n          whileHover={{ scale: 1.02, x: 10 }}\r\n          whileTap={{ scale: 0.98 }}\r\n        >\r\n          <div className=\"flex justify-between items-center\">\r\n            <div className=\"text-left\">\r\n              <div className=\"text-lg font-bold text-green-400\">ЛЁГКИЙ</div>\r\n              <div className=\"text-sm text-gray-300\">15% шанс разряда • 2 сек предупреждение</div>\r\n            </div>\r\n            <div className=\"text-2xl\">🟢</div>\r\n          </div>\r\n        </motion.button>\r\n\r\n        {/* Medium Mode */}\r\n        <motion.button\r\n          onClick={() => handleStartGame('medium')}\r\n          className=\"w-full glass-effect p-4 rounded-xl hover:bg-yellow-500/20 transition-colors\"\r\n          whileHover={{ scale: 1.02, x: 10 }}\r\n          whileTap={{ scale: 0.98 }}\r\n        >\r\n          <div className=\"flex justify-between items-center\">\r\n            <div className=\"text-left\">\r\n              <div className=\"text-lg font-bold text-yellow-400\">СРЕДНИЙ</div>\r\n              <div className=\"text-sm text-gray-300\">25% шанс разряда • 1.5 сек предупреждение</div>\r\n            </div>\r\n            <div className=\"text-2xl\">🟡</div>\r\n          </div>\r\n        </motion.button>\r\n\r\n        {/* Hard Mode */}\r\n        <motion.button\r\n          onClick={() => handleStartGame('hard')}\r\n          className=\"w-full glass-effect p-4 rounded-xl hover:bg-orange-500/20 transition-colors\"\r\n          whileHover={{ scale: 1.02, x: 10 }}\r\n          whileTap={{ scale: 0.98 }}\r\n        >\r\n          <div className=\"flex justify-between items-center\">\r\n            <div className=\"text-left\">\r\n              <div className=\"text-lg font-bold text-orange-400\">СЛОЖНЫЙ</div>\r\n              <div className=\"text-sm text-gray-300\">35% шанс разряда • 1 сек предупреждение</div>\r\n            </div>\r\n            <div className=\"text-2xl\">🟠</div>\r\n          </div>\r\n        </motion.button>\r\n\r\n        {/* Extreme Mode */}\r\n        <motion.button\r\n          onClick={() => handleStartGame('extreme')}\r\n          className=\"w-full glass-effect p-4 rounded-xl hover:bg-red-500/20 transition-colors\"\r\n          whileHover={{ scale: 1.02, x: 10 }}\r\n          whileTap={{ scale: 0.98 }}\r\n        >\r\n          <div className=\"flex justify-between items-center\">\r\n            <div className=\"text-left\">\r\n              <div className=\"text-lg font-bold text-red-400\">ЭКСТРИМ</div>\r\n              <div className=\"text-sm text-gray-300\">50% шанс разряда • 0.5 сек предупреждение</div>\r\n            </div>\r\n            <div className=\"text-2xl\">🔴</div>\r\n          </div>\r\n        </motion.button>\r\n\r\n        {/* Score Breakdown Button */}\r\n        <motion.button\r\n          onClick={() => {\r\n            hapticManager.light();\r\n            setShowScoreBreakdown(true);\r\n          }}\r\n          className=\"w-full glass-effect p-3 rounded-xl hover:bg-blue-500/20 transition-colors border border-blue-400/30\"\r\n          whileHover={{ scale: 1.02 }}\r\n          whileTap={{ scale: 0.98 }}\r\n        >\r\n          <div className=\"flex justify-center items-center space-x-2\">\r\n            <span className=\"text-lg\">📊</span>\r\n            <span className=\"text-lg font-semibold text-blue-400\">Очки и уровни</span>\r\n          </div>\r\n        </motion.button>\r\n\r\n        {/* Haptic Settings Button */}\r\n        <motion.button\r\n          onClick={() => {\r\n            hapticManager.light();\r\n            setShowHapticSettings(true);\r\n          }}\r\n          className=\"w-full glass-effect p-3 rounded-xl hover:bg-purple-500/20 transition-colors border border-purple-400/30\"\r\n          whileHover={{ scale: 1.02 }}\r\n          whileTap={{ scale: 0.98 }}\r\n        >\r\n          <div className=\"flex justify-center items-center space-x-2\">\r\n            <span className=\"text-lg\">📳</span>\r\n            <span className=\"text-lg font-semibold text-purple-400\">Вибрация</span>\r\n          </div>\r\n        </motion.button>\r\n      </motion.div>\r\n\r\n      {/* Score Breakdown Modal */}\r\n      {showScoreBreakdown && (\r\n        <ScoreBreakdown onClose={() => setShowScoreBreakdown(false)} />\r\n      )}\r\n\r\n      {/* Haptic Settings Modal */}\r\n      {showHapticSettings && (\r\n        <HapticSettings \r\n          isVisible={showHapticSettings}\r\n          onClose={() => setShowHapticSettings(false)} \r\n        />\r\n      )}\r\n\r\n      {/* Footer */}\r\n      <motion.div\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        transition={{ duration: 0.5, delay: 1 }}\r\n        className=\"mt-8 text-center text-gray-400 text-sm space-y-2\"\r\n      >\r\n        <p>⚡ Играй осторожно! ⚡</p>\r\n        <p className=\"mt-2\">v1.0.0 | Single Mode</p>\r\n        \r\n        {/* Development button for testing levels */}\r\n        <button \r\n          onClick={() => {\r\n            hapticManager.light();\r\n            handleQuickLevelUp();\r\n          }}\r\n          className=\"mt-2 px-3 py-1 text-xs bg-purple-600/30 hover:bg-purple-600/50 text-purple-300 rounded transition-colors\"\r\n        >\r\n          🔧 +100 опыта (тест)\r\n        </button>\r\n      </motion.div>\r\n    </div>\r\n  );\r\n};\r\n","// Sound effects manager for TigerRozetka\r\n// Using Web Audio API for better control\r\n\r\nexport class SoundManager {\r\n  private audioContext: AudioContext | null = null;\r\n  private sounds: Map<string, AudioBuffer> = new Map();\r\n  private volume: number = 0.7;\r\n  private enabled: boolean = true;\r\n\r\n  constructor() {\r\n    this.init();\r\n  }\r\n\r\n  private async init() {\r\n    try {\r\n      this.audioContext = new (window.AudioContext || (window as any).webkitAudioContext)();\r\n    } catch (error) {\r\n      console.warn('Web Audio API not supported:', error);\r\n    }\r\n  }\r\n\r\n  async loadSound(name: string, url: string): Promise<void> {\r\n    if (!this.audioContext) return;\r\n\r\n    try {\r\n      const response = await fetch(url);\r\n      const arrayBuffer = await response.arrayBuffer();\r\n      const audioBuffer = await this.audioContext.decodeAudioData(arrayBuffer);\r\n      this.sounds.set(name, audioBuffer);\r\n    } catch (error) {\r\n      console.warn(`Failed to load sound ${name}:`, error);\r\n    }\r\n  }\r\n\r\n  playSound(name: string, volume: number = 1): void {\r\n    if (!this.enabled || !this.audioContext) return;\r\n\r\n    const buffer = this.sounds.get(name);\r\n    if (!buffer) return;\r\n\r\n    const source = this.audioContext.createBufferSource();\r\n    const gainNode = this.audioContext.createGain();\r\n\r\n    source.buffer = buffer;\r\n    gainNode.gain.value = this.volume * volume;\r\n\r\n    source.connect(gainNode);\r\n    gainNode.connect(this.audioContext.destination);\r\n\r\n    source.start();\r\n  }\r\n\r\n  // Generate electric spark sound programmatically\r\n  generateSparkSound(intensity: 'low' | 'medium' | 'high' | 'extreme'): void {\r\n    if (!this.enabled || !this.audioContext) return;\r\n\r\n    const duration = {\r\n      low: 0.1,\r\n      medium: 0.2,\r\n      high: 0.3,\r\n      extreme: 0.5\r\n    }[intensity];\r\n\r\n    const frequency = {\r\n      low: 2000,\r\n      medium: 3000,\r\n      high: 4000,\r\n      extreme: 5000\r\n    }[intensity];\r\n\r\n    // Create white noise for spark effect\r\n    const bufferSize = this.audioContext.sampleRate * duration;\r\n    const buffer = this.audioContext.createBuffer(1, bufferSize, this.audioContext.sampleRate);\r\n    const output = buffer.getChannelData(0);\r\n\r\n    // Generate noise with frequency modulation\r\n    for (let i = 0; i < bufferSize; i++) {\r\n      const t = i / this.audioContext.sampleRate;\r\n      const envelope = Math.exp(-t * 10); // Exponential decay\r\n      const noise = (Math.random() * 2 - 1) * envelope;\r\n      const oscillation = Math.sin(2 * Math.PI * frequency * t * (1 + Math.random() * 0.5));\r\n      output[i] = noise * oscillation * 0.3;\r\n    }\r\n\r\n    const source = this.audioContext.createBufferSource();\r\n    const gainNode = this.audioContext.createGain();\r\n    \r\n    source.buffer = buffer;\r\n    gainNode.gain.value = this.volume * (intensity === 'extreme' ? 0.8 : 0.5);\r\n\r\n    source.connect(gainNode);\r\n    gainNode.connect(this.audioContext.destination);\r\n\r\n    source.start();\r\n  }\r\n\r\n  // Generate shock sound\r\n  generateShockSound(): void {\r\n    if (!this.enabled || !this.audioContext) return;\r\n\r\n    const duration = 0.8;\r\n    const bufferSize = this.audioContext.sampleRate * duration;\r\n    const buffer = this.audioContext.createBuffer(1, bufferSize, this.audioContext.sampleRate);\r\n    const output = buffer.getChannelData(0);\r\n\r\n    for (let i = 0; i < bufferSize; i++) {\r\n      const t = i / this.audioContext.sampleRate;\r\n      const envelope = Math.exp(-t * 3);\r\n      const lowFreq = Math.sin(2 * Math.PI * 100 * t);\r\n      const highFreq = Math.sin(2 * Math.PI * 800 * t) * 0.5;\r\n      const noise = (Math.random() * 2 - 1) * 0.3;\r\n      output[i] = (lowFreq + highFreq + noise) * envelope * 0.6;\r\n    }\r\n\r\n    const source = this.audioContext.createBufferSource();\r\n    const gainNode = this.audioContext.createGain();\r\n    \r\n    source.buffer = buffer;\r\n    gainNode.gain.value = this.volume;\r\n\r\n    source.connect(gainNode);\r\n    gainNode.connect(this.audioContext.destination);\r\n\r\n    source.start();\r\n  }\r\n\r\n  // Generate warning sound\r\n  generateWarningSound(): void {\r\n    if (!this.enabled || !this.audioContext) return;\r\n\r\n    const duration = 0.3;\r\n    const bufferSize = this.audioContext.sampleRate * duration;\r\n    const buffer = this.audioContext.createBuffer(1, bufferSize, this.audioContext.sampleRate);\r\n    const output = buffer.getChannelData(0);\r\n\r\n    for (let i = 0; i < bufferSize; i++) {\r\n      const t = i / this.audioContext.sampleRate;\r\n      const frequency = 1000 + Math.sin(t * 20) * 200; // Frequency modulation\r\n      const envelope = Math.sin(Math.PI * t / duration); // Bell-shaped envelope\r\n      output[i] = Math.sin(2 * Math.PI * frequency * t) * envelope * 0.4;\r\n    }\r\n\r\n    const source = this.audioContext.createBufferSource();\r\n    const gainNode = this.audioContext.createGain();\r\n    \r\n    source.buffer = buffer;\r\n    gainNode.gain.value = this.volume * 0.6;\r\n\r\n    source.connect(gainNode);\r\n    gainNode.connect(this.audioContext.destination);\r\n\r\n    source.start();\r\n  }\r\n\r\n  setVolume(volume: number): void {\r\n    this.volume = Math.max(0, Math.min(1, volume));\r\n  }\r\n\r\n  setEnabled(enabled: boolean): void {\r\n    this.enabled = enabled;\r\n  }\r\n\r\n  getVolume(): number {\r\n    return this.volume;\r\n  }\r\n\r\n  isEnabled(): boolean {\r\n    return this.enabled;\r\n  }\r\n}\r\n\r\n// Global sound manager instance\r\nexport const soundManager = new SoundManager();\r\n","import React from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\n\r\ninterface ScorePopupProps {\r\n  score: number;\r\n  reason: string;\r\n  isVisible: boolean;\r\n  position: { x: number; y: number };\r\n  type: 'success' | 'shock' | 'bonus';\r\n  experience?: number;\r\n}\r\n\r\nexport const ScorePopup: React.FC<ScorePopupProps> = ({ \r\n  score, \r\n  reason, \r\n  isVisible, \r\n  position,\r\n  type,\r\n  experience = 0\r\n}) => {\r\n  const getColorClass = () => {\r\n    switch (type) {\r\n      case 'success':\r\n        return score >= 30 ? 'text-yellow-300' : \r\n               score >= 20 ? 'text-green-300' : 'text-blue-300';\r\n      case 'shock':\r\n        return 'text-red-300';\r\n      case 'bonus':\r\n        return 'text-purple-300';\r\n      default:\r\n        return 'text-white';\r\n    }\r\n  };\r\n\r\n  const getIcon = () => {\r\n    switch (type) {\r\n      case 'success':\r\n        return score >= 30 ? '🔥' : score >= 20 ? '⚡' : '✨';\r\n      case 'shock':\r\n        return '💥';\r\n      case 'bonus':\r\n        return '🎉';\r\n      default:\r\n        return '⚡';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      {isVisible && (\r\n        <motion.div\r\n          className={`absolute pointer-events-none z-50 ${getColorClass()}`}\r\n          initial={{\r\n            opacity: 0,\r\n            scale: 0.5,\r\n            x: position.x,\r\n            y: position.y\r\n          }}\r\n          animate={{\r\n            opacity: [0, 1, 1, 0],\r\n            scale: [0.5, 1.2, 1, 0.8],\r\n            y: position.y - 80,\r\n            x: position.x + (Math.random() - 0.5) * 40\r\n          }}\r\n          transition={{\r\n            duration: 2,\r\n            ease: 'easeOut'\r\n          }}\r\n        >\r\n          <div className=\"bg-black/80 backdrop-blur-sm rounded-lg px-3 py-2 border border-current\">\r\n            <div className=\"flex items-center space-x-2\">\r\n              <span className=\"text-lg\">{getIcon()}</span>\r\n              <div>\r\n                <div className=\"font-bold text-lg\">+{score}⚡</div>\r\n                {experience > 0 && (\r\n                  <div className=\"text-xs text-blue-300\">+{experience} опыта</div>\r\n                )}\r\n                <div className=\"text-xs opacity-80\">{reason}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n      )}\r\n    </AnimatePresence>\r\n  );\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { useGameStore } from '../store/gameStore';\r\nimport { getOutletImageByLevel } from '../utils/levelSystem';\r\n\r\nexport const useOutletImageAnimation = () => {\r\n  const { player } = useGameStore();\r\n  const [currentImage, setCurrentImage] = useState(getOutletImageByLevel(player.level));\r\n  const [isAnimating, setIsAnimating] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const newImage = getOutletImageByLevel(player.level);\r\n    console.log(`Player level: ${player.level}, Image path: ${newImage}`);\r\n    \r\n    if (newImage !== currentImage) {\r\n      // Start animation\r\n      setIsAnimating(true);\r\n      \r\n      // Change image after a brief delay\r\n      setTimeout(() => {\r\n        setCurrentImage(newImage);\r\n        setIsAnimating(false);\r\n      }, 300);\r\n    }\r\n  }, [player.level, currentImage]);\r\n\r\n  return {\r\n    currentImage,\r\n    isAnimating\r\n  };\r\n};\r\n","import React, { useState, useCallback, useEffect } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { useGameStore } from '../store/gameStore';\r\nimport { SparkEffect } from '../types/game';\r\nimport { soundManager } from '../utils/soundManager';\r\nimport { hapticManager } from '../utils/hapticManager';\r\nimport { ScorePopup } from './ScorePopup';\r\nimport { useOutletImageAnimation } from '../hooks/useOutletImageAnimation';\r\n\r\ninterface TigerOutletProps {\r\n  className?: string;\r\n}\r\n\r\nexport const TigerOutlet: React.FC<TigerOutletProps> = ({ className = '' }) => {\r\n  const { \r\n    clickOutlet, \r\n    singleMode, \r\n    gameState,\r\n    updateScore\r\n  } = useGameStore();\r\n  \r\n  const { currentImage, isAnimating } = useOutletImageAnimation();\r\n  \r\n  const [sparks, setSparks] = useState<SparkEffect[]>([]);\r\n  const [isPressed, setIsPressed] = useState(false);\r\n  const [glowIntensity, setGlowIntensity] = useState(1);\r\n  const [scorePopup, setScorePopup] = useState<{\r\n    visible: boolean;\r\n    score: number;\r\n    reason: string;\r\n    type: 'success' | 'shock' | 'bonus';\r\n  }>({ visible: false, score: 0, reason: '', type: 'success' });\r\n\r\n  // Show score popup\r\n  const showScorePopup = useCallback((score: number, reason: string, type: 'success' | 'shock' | 'bonus') => {\r\n    setScorePopup({ visible: true, score, reason, type });\r\n    setTimeout(() => {\r\n      setScorePopup(prev => ({ ...prev, visible: false }));\r\n    }, 2000);\r\n  }, []);\r\n\r\n  // Create spark effect on click\r\n  const createSparks = useCallback((intensity: 'low' | 'medium' | 'high' | 'extreme') => {\r\n    const sparkCount = {\r\n      low: 3,\r\n      medium: 6,\r\n      high: 12,\r\n      extreme: 20\r\n    }[intensity];\r\n\r\n    const newSparks: SparkEffect[] = Array.from({ length: sparkCount }, (_, i) => ({\r\n      id: `spark-${Date.now()}-${i}`,\r\n      x: Math.random() * 200 - 100, // Random position around center\r\n      y: Math.random() * 200 - 100,\r\n      intensity,\r\n      duration: 300 + Math.random() * 200,\r\n      color: intensity === 'extreme' ? '#E8FF00' : \r\n             intensity === 'high' ? '#00D4FF' : \r\n             intensity === 'medium' ? '#8A2BE2' : '#FF6B35'\r\n    }));\r\n\r\n    setSparks(prev => [...prev, ...newSparks]);\r\n\r\n    // Remove sparks after animation\r\n    newSparks.forEach(spark => {\r\n      setTimeout(() => {\r\n        setSparks(prev => prev.filter(s => s.id !== spark.id));\r\n      }, spark.duration);\r\n    });\r\n  }, []);\r\n\r\n  // Handle outlet click\r\n  const handleClick = useCallback(() => {\r\n    if (!gameState.isPlaying || singleMode.shockActive) return;\r\n\r\n    // Добавляем вибрацию при нажатии\r\n    hapticManager.outletPress();\r\n\r\n    setIsPressed(true);\r\n    clickOutlet();\r\n\r\n    // Determine if shock occurs (simplified logic for now)\r\n    const shockChance = {\r\n      easy: 0.15,\r\n      medium: 0.25,\r\n      hard: 0.35,\r\n      extreme: 0.50\r\n    }[singleMode.difficulty];\r\n\r\n    const isShocked = Math.random() < shockChance;\r\n    \r\n    if (isShocked) {\r\n      // Shock effect with haptic feedback\r\n      createSparks('extreme');\r\n      setGlowIntensity(3);\r\n      \r\n      // Сильная вибрация при поражении током\r\n      hapticManager.electricShock();\r\n      \r\n      // Play shock sound\r\n      soundManager.generateShockSound();\r\n      \r\n      // Calculate shock score (consolation prize)\r\n      const scoreData = {\r\n        basePoints: 8,\r\n        riskMultiplier: 1,\r\n        streakBonus: 0,\r\n        timeBonus: 0,\r\n        totalPoints: 8 + Math.floor(Math.random() * 17), // 8-25 points\r\n        reason: 'Поражение током'\r\n      };\r\n      \r\n      updateScore(scoreData);\r\n      showScorePopup(scoreData.totalPoints, scoreData.reason, 'shock');\r\n    } else {\r\n      // Success effect with haptic feedback\r\n      const intensity = singleMode.currentRisk === 'extreme' ? 'extreme' :\r\n                       singleMode.currentRisk === 'high' ? 'high' :\r\n                       singleMode.currentRisk === 'medium' ? 'medium' : 'low';\r\n      \r\n      createSparks(intensity);\r\n      setGlowIntensity(2);\r\n\r\n      // Вибрация успешного выживания\r\n      hapticManager.survivalSuccess();\r\n\r\n      // Play spark sound based on intensity\r\n      soundManager.generateSparkSound(intensity);\r\n\r\n      // Calculate success score\r\n      const basePoints = 10;\r\n      const riskMultiplier = {\r\n        low: 1.0,\r\n        medium: 1.5,\r\n        high: 2.0,\r\n        extreme: 3.0\r\n      }[singleMode.currentRisk];\r\n\r\n      const streakBonus = singleMode.streakCount >= 25 ? 3.0 :\r\n                         singleMode.streakCount >= 10 ? 2.0 :\r\n                         singleMode.streakCount >= 5 ? 1.5 : 1.0;\r\n\r\n      const totalPoints = Math.floor(basePoints * riskMultiplier * streakBonus);\r\n\r\n      const scoreData = {\r\n        basePoints,\r\n        riskMultiplier,\r\n        streakBonus,\r\n        timeBonus: 0,\r\n        totalPoints,\r\n        reason: `Выживание (${singleMode.currentRisk} риск)`\r\n      };\r\n\r\n      updateScore(scoreData);\r\n      showScorePopup(scoreData.totalPoints, scoreData.reason, 'success');\r\n      \r\n      // Дополнительная вибрация для серий достижений\r\n      if (singleMode.streakCount > 0 && singleMode.streakCount % 5 === 0) {\r\n        hapticManager.streakAchievement(singleMode.streakCount);\r\n      }\r\n    }\r\n\r\n    // Reset visual effects\r\n    setTimeout(() => {\r\n      setIsPressed(false);\r\n      setGlowIntensity(1);\r\n    }, 200);\r\n  }, [gameState.isPlaying, singleMode, clickOutlet, createSparks, updateScore]);\r\n\r\n  // Warning effect when danger is imminent\r\n  useEffect(() => {\r\n    if (singleMode.warningActive) {\r\n      setGlowIntensity(2.5);\r\n      const interval = setInterval(() => {\r\n        setGlowIntensity(prev => prev === 2.5 ? 1.5 : 2.5);\r\n      }, 200);\r\n\r\n      return () => clearInterval(interval);\r\n    } else {\r\n      setGlowIntensity(1);\r\n    }\r\n  }, [singleMode.warningActive]);\r\n\r\n  return (\r\n    <div className={`relative ${className}`}>\r\n      {/* Main Outlet Button */}\r\n      <motion.button\r\n        onClick={handleClick}\r\n        disabled={!gameState.isPlaying || singleMode.shockActive}\r\n        className=\"relative w-64 h-64 rounded-2xl overflow-hidden disabled:opacity-50 bg-gray-800\"\r\n        whileTap={{ scale: 0.95 }}\r\n        whileHover={{ scale: 1.05 }}\r\n        animate={{\r\n          scale: isPressed ? 0.9 : 1,\r\n          filter: `brightness(${glowIntensity}) saturate(${glowIntensity})`,\r\n          rotateY: isAnimating ? [0, 180, 360] : 0\r\n        }}\r\n        transition={{\r\n          rotateY: { duration: 0.6, ease: \"easeInOut\" }\r\n        }}\r\n        style={{\r\n          boxShadow: `0 0 ${20 * glowIntensity}px rgba(255, 107, 53, ${0.5 * glowIntensity})`\r\n        }}\r\n      >\r\n        {/* Main Outlet Image */}\r\n        <img \r\n          src={currentImage} \r\n          alt=\"Tiger Outlet\" \r\n          className=\"absolute inset-0 w-full h-full object-cover rounded-2xl\"\r\n          onError={(e) => {\r\n            console.error('Image failed to load:', currentImage);\r\n            console.error('Error event:', e);\r\n            // Fallback to a solid background\r\n            e.currentTarget.style.display = 'none';\r\n          }}\r\n          onLoad={() => {\r\n            console.log('Image loaded successfully:', currentImage);\r\n          }}\r\n        />\r\n        \r\n        {/* Tiger Stripes Overlay */}\r\n        <div className=\"absolute inset-0 tiger-stripes opacity-20 mix-blend-overlay\" />\r\n        \r\n        {/* Electric Glow Effect */}\r\n        <motion.div\r\n          className=\"absolute inset-0 rounded-2xl\"\r\n          animate={{\r\n            boxShadow: singleMode.warningActive\r\n              ? '0 0 30px #E8FF00, inset 0 0 30px #E8FF00'\r\n              : singleMode.shockActive\r\n              ? '0 0 50px #FF0000, inset 0 0 50px #FF0000'\r\n              : '0 0 15px #FF6B35, inset 0 0 15px #FF6B35'\r\n          }}\r\n          transition={{ duration: 0.2 }}\r\n        />\r\n\r\n        {/* Shock Effect Overlay */}\r\n        <AnimatePresence>\r\n          {singleMode.shockActive && (\r\n            <motion.div\r\n              className=\"absolute inset-0 bg-red-500 mix-blend-screen rounded-2xl\"\r\n              initial={{ opacity: 0 }}\r\n              animate={{ opacity: [0, 0.8, 0, 0.6, 0, 0.4, 0] }}\r\n              exit={{ opacity: 0 }}\r\n              transition={{ duration: 0.5 }}\r\n            />\r\n          )}\r\n        </AnimatePresence>\r\n      </motion.button>\r\n\r\n      {/* Spark Effects */}\r\n      <AnimatePresence>\r\n        {sparks.map((spark) => (\r\n          <motion.div\r\n            key={spark.id}\r\n            className=\"absolute w-2 h-2 rounded-full pointer-events-none\"\r\n            style={{\r\n              backgroundColor: spark.color,\r\n              boxShadow: `0 0 10px ${spark.color}`,\r\n              left: '50%',\r\n              top: '50%'\r\n            }}\r\n            initial={{\r\n              x: 0,\r\n              y: 0,\r\n              scale: 0,\r\n              opacity: 1\r\n            }}\r\n            animate={{\r\n              x: spark.x,\r\n              y: spark.y,\r\n              scale: [0, 1.5, 0.8, 0],\r\n              opacity: [1, 1, 0.5, 0],\r\n              rotate: [0, 180, 360]\r\n            }}\r\n            transition={{\r\n              duration: spark.duration / 1000,\r\n              ease: 'easeOut'\r\n            }}\r\n          />\r\n        ))}\r\n      </AnimatePresence>\r\n\r\n      {/* Risk Level Indicator */}\r\n      <div className=\"absolute -bottom-8 left-1/2 transform -translate-x-1/2\">\r\n        <div className={`px-3 py-1 rounded-full text-xs font-bold ${\r\n          singleMode.currentRisk === 'extreme' ? 'bg-red-500 text-white' :\r\n          singleMode.currentRisk === 'high' ? 'bg-orange-500 text-white' :\r\n          singleMode.currentRisk === 'medium' ? 'bg-yellow-500 text-black' :\r\n          'bg-green-500 text-white'\r\n        }`}>\r\n          {singleMode.currentRisk === 'extreme' ? 'ЭКСТРИМ' :\r\n           singleMode.currentRisk === 'high' ? 'ВЫСОКИЙ' :\r\n           singleMode.currentRisk === 'medium' ? 'СРЕДНИЙ' : 'НИЗКИЙ'} РИСК\r\n        </div>\r\n      </div>\r\n\r\n      {/* Score Popup */}\r\n      <ScorePopup\r\n        score={scorePopup.score}\r\n        reason={scorePopup.reason}\r\n        isVisible={scorePopup.visible}\r\n        position={{ x: 0, y: -32 }}\r\n        type={scorePopup.type}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { useGameStore } from '../store/gameStore';\r\n\r\nexport const GameHUD: React.FC = () => {\r\n  const { player, gameState, singleMode } = useGameStore();\r\n\r\n  return (\r\n    <div className=\"fixed top-0 left-0 right-0 z-10 bg-black/20 backdrop-blur-sm border-b border-white/10\">\r\n      <div className=\"flex justify-between items-center p-4\">\r\n        {/* Score Display */}\r\n        <div className=\"flex items-center space-x-4\">\r\n          <motion.div \r\n            className=\"glass-effect px-4 py-2\"\r\n            whileHover={{ scale: 1.05 }}\r\n          >\r\n            <div className=\"text-xs text-gray-300\">СЧЁТ</div>\r\n            <div className=\"text-xl font-bold text-accent-lime\">\r\n              {gameState.score.toLocaleString()}\r\n            </div>\r\n          </motion.div>\r\n          \r\n          <motion.div \r\n            className=\"glass-effect px-4 py-2\"\r\n            whileHover={{ scale: 1.05 }}\r\n          >\r\n            <div className=\"text-xs text-gray-300\">ВОЛЬТЫ</div>\r\n            <div className=\"text-xl font-bold text-primary-orange\">\r\n              {player.volts.toLocaleString()}⚡\r\n            </div>\r\n          </motion.div>\r\n        </div>\r\n\r\n        {/* Streak Counter */}\r\n        <div className=\"text-center\">\r\n          <motion.div \r\n            className=\"glass-effect px-4 py-2\"\r\n            animate={{ \r\n              scale: singleMode.streakCount > 0 ? [1, 1.1, 1] : 1,\r\n              boxShadow: singleMode.streakCount >= 5 \r\n                ? '0 0 20px #E8FF00' \r\n                : '0 0 10px rgba(255,255,255,0.2)'\r\n            }}\r\n            transition={{ duration: 0.3 }}\r\n          >\r\n            <div className=\"text-xs text-gray-300\">СЕРИЯ</div>\r\n            <div className={`text-xl font-bold ${\r\n              singleMode.streakCount >= 25 ? 'text-red-400' :\r\n              singleMode.streakCount >= 10 ? 'text-orange-400' :\r\n              singleMode.streakCount >= 5 ? 'text-yellow-400' :\r\n              'text-white'\r\n            }`}>\r\n              {singleMode.streakCount}\r\n            </div>\r\n          </motion.div>\r\n        </div>\r\n\r\n        {/* Difficulty & Stats */}\r\n        <div className=\"flex items-center space-x-4\">\r\n          <motion.div \r\n            className=\"glass-effect px-4 py-2\"\r\n            whileHover={{ scale: 1.05 }}\r\n          >\r\n            <div className=\"text-xs text-gray-300\">СЛОЖНОСТЬ</div>\r\n            <div className={`text-sm font-bold ${\r\n              singleMode.difficulty === 'extreme' ? 'text-red-400' :\r\n              singleMode.difficulty === 'hard' ? 'text-orange-400' :\r\n              singleMode.difficulty === 'medium' ? 'text-yellow-400' :\r\n              'text-green-400'\r\n            }`}>\r\n              {singleMode.difficulty === 'extreme' ? 'ЭКСТРИМ' :\r\n               singleMode.difficulty === 'hard' ? 'СЛОЖНЫЙ' :\r\n               singleMode.difficulty === 'medium' ? 'СРЕДНИЙ' : 'ЛЁГКИЙ'}\r\n            </div>\r\n          </motion.div>\r\n\r\n          <motion.div \r\n            className=\"glass-effect px-4 py-2\"\r\n            whileHover={{ scale: 1.05 }}\r\n          >\r\n            <div className=\"text-xs text-gray-300\">НАЖАТИЙ</div>\r\n            <div className=\"text-lg font-bold text-accent-blue\">\r\n              {player.totalClicks}\r\n            </div>\r\n          </motion.div>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Warning Banner */}\r\n      {singleMode.warningActive && (\r\n        <motion.div\r\n          className=\"bg-yellow-500/80 text-black px-4 py-2 text-center font-bold\"\r\n          initial={{ opacity: 0, y: -20 }}\r\n          animate={{ \r\n            opacity: [0, 1, 0.7, 1, 0.7, 1], \r\n            y: 0 \r\n          }}\r\n          transition={{ duration: 0.5 }}\r\n        >\r\n          ⚠️ ВНИМАНИЕ! ГОТОВИТСЯ РАЗРЯД! ⚠️\r\n        </motion.div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { useGameStore } from '../store/gameStore';\r\nimport { TigerOutlet } from './TigerOutlet';\r\nimport { GameHUD } from './GameHUD';\r\nimport { soundManager } from '../utils/soundManager';\r\n\r\nexport const GameScreen: React.FC = () => {\r\n  const { \r\n    gameState, \r\n    singleMode, \r\n    endGame, \r\n    triggerWarning, \r\n    triggerShock,\r\n    player \r\n  } = useGameStore();\r\n  \r\n  const [gameTime, setGameTime] = useState(0);\r\n  const [showGameOver, setShowGameOver] = useState(false);\r\n\r\n  // Game timer\r\n  useEffect(() => {\r\n    if (!gameState.isPlaying) return;\r\n\r\n    const interval = setInterval(() => {\r\n      setGameTime(prev => prev + 1);\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [gameState.isPlaying]);\r\n\r\n  // AI Electrician Logic\r\n  useEffect(() => {\r\n    if (!gameState.isPlaying) return;\r\n\r\n    const difficulty = singleMode.difficulty;\r\n    const config = {\r\n      easy: { \r\n        shockProbability: 0.15, \r\n        warningTime: 2000, \r\n        minInterval: 3000, \r\n        maxInterval: 8000 \r\n      },\r\n      medium: { \r\n        shockProbability: 0.25, \r\n        warningTime: 1500, \r\n        minInterval: 2500, \r\n        maxInterval: 6000 \r\n      },\r\n      hard: { \r\n        shockProbability: 0.35, \r\n        warningTime: 1000, \r\n        minInterval: 2000, \r\n        maxInterval: 5000 \r\n      },\r\n      extreme: { \r\n        shockProbability: 0.50, \r\n        warningTime: 500, \r\n        minInterval: 1000, \r\n        maxInterval: 3000 \r\n      }\r\n    }[difficulty];\r\n\r\n    const scheduleNext = () => {\r\n      const delay = Math.random() * (config.maxInterval - config.minInterval) + config.minInterval;\r\n      \r\n      setTimeout(() => {\r\n        if (!gameState.isPlaying) return;\r\n\r\n        // Trigger warning\r\n        triggerWarning();\r\n        soundManager.generateWarningSound();\r\n        \r\n        // Schedule potential shock\r\n        setTimeout(() => {\r\n          if (!gameState.isPlaying) return;\r\n          \r\n          if (Math.random() < config.shockProbability) {\r\n            triggerShock();\r\n          }\r\n          \r\n          scheduleNext();\r\n        }, config.warningTime);\r\n      }, delay);\r\n    };\r\n\r\n    scheduleNext();\r\n  }, [gameState.isPlaying, singleMode.difficulty, triggerWarning, triggerShock]);\r\n\r\n  // Handle game over conditions\r\n  useEffect(() => {\r\n    // Game over after 10 minutes or specific achievements\r\n    if (gameTime >= 600) { // 10 minutes\r\n      setShowGameOver(true);\r\n    }\r\n  }, [gameTime]);\r\n\r\n  const handleEndGame = () => {\r\n    setShowGameOver(false);\r\n    setGameTime(0);\r\n    endGame();\r\n  };\r\n\r\n  const formatTime = (seconds: number) => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  if (showGameOver) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-background-dark to-background-darker\">\r\n        <motion.div\r\n          initial={{ opacity: 0, scale: 0.8 }}\r\n          animate={{ opacity: 1, scale: 1 }}\r\n          className=\"glass-effect p-8 text-center max-w-md\"\r\n        >\r\n          <h2 className=\"text-3xl font-bold text-primary-orange mb-4\">\r\n            Игра окончена!\r\n          </h2>\r\n          \r\n          <div className=\"space-y-3 mb-6\">\r\n            <div className=\"flex justify-between\">\r\n              <span>Время игры:</span>\r\n              <span className=\"font-bold\">{formatTime(gameTime)}</span>\r\n            </div>\r\n            <div className=\"flex justify-between\">\r\n              <span>Финальный счёт:</span>\r\n              <span className=\"font-bold text-accent-lime\">{gameState.score.toLocaleString()}</span>\r\n            </div>\r\n            <div className=\"flex justify-between\">\r\n              <span>Получено вольт:</span>\r\n              <span className=\"font-bold text-primary-orange\">{gameState.score}⚡</span>\r\n            </div>\r\n            <div className=\"flex justify-between\">\r\n              <span>Всего нажатий:</span>\r\n              <span className=\"font-bold text-accent-blue\">{player.totalClicks}</span>\r\n            </div>\r\n            <div className=\"flex justify-between\">\r\n              <span>Лучшая серия:</span>\r\n              <span className=\"font-bold text-yellow-400\">{player.streak}</span>\r\n            </div>\r\n          </div>\r\n\r\n          <motion.button\r\n            onClick={handleEndGame}\r\n            className=\"w-full glass-effect p-3 rounded-xl hover:bg-primary-orange/20 transition-colors\"\r\n            whileHover={{ scale: 1.05 }}\r\n            whileTap={{ scale: 0.95 }}\r\n          >\r\n            <span className=\"font-bold\">Вернуться в меню</span>\r\n          </motion.button>\r\n        </motion.div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-background-dark to-background-darker relative\">\r\n      {/* Game HUD */}\r\n      <GameHUD />\r\n      \r\n      {/* Main Game Area */}\r\n      <div className=\"flex flex-col items-center justify-center min-h-screen pt-24 pb-8\">\r\n        {/* Game Timer */}\r\n        <motion.div\r\n          className=\"glass-effect px-6 py-3 mb-8\"\r\n          animate={{ \r\n            scale: gameTime % 10 === 0 && gameTime > 0 ? [1, 1.1, 1] : 1 \r\n          }}\r\n        >\r\n          <div className=\"text-center\">\r\n            <div className=\"text-xs text-gray-300\">ВРЕМЯ ИГРЫ</div>\r\n            <div className=\"text-2xl font-bold text-white font-mono\">\r\n              {formatTime(gameTime)}\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n\r\n        {/* Tiger Outlet - Main Game Element */}\r\n        <TigerOutlet className=\"mb-8\" />\r\n\r\n        {/* Quick Stats */}\r\n        <div className=\"flex space-x-4 text-center\">\r\n          <motion.div \r\n            className=\"glass-effect px-4 py-2\"\r\n            whileHover={{ scale: 1.05 }}\r\n          >\r\n            <div className=\"text-xs text-gray-300\">ПОСЛЕДНИЙ РИСК</div>\r\n            <div className={`text-sm font-bold ${\r\n              singleMode.currentRisk === 'extreme' ? 'text-red-400' :\r\n              singleMode.currentRisk === 'high' ? 'text-orange-400' :\r\n              singleMode.currentRisk === 'medium' ? 'text-yellow-400' :\r\n              'text-green-400'\r\n            }`}>\r\n              {singleMode.currentRisk === 'extreme' ? 'ЭКСТРИМ' :\r\n               singleMode.currentRisk === 'high' ? 'ВЫСОКИЙ' :\r\n               singleMode.currentRisk === 'medium' ? 'СРЕДНИЙ' : 'НИЗКИЙ'}\r\n            </div>\r\n          </motion.div>\r\n\r\n          <motion.div \r\n            className=\"glass-effect px-4 py-2\"\r\n            whileHover={{ scale: 1.05 }}\r\n          >\r\n            <div className=\"text-xs text-gray-300\">СТАТУС ИИ</div>\r\n            <div className={`text-sm font-bold ${\r\n              singleMode.warningActive ? 'text-yellow-400' :\r\n              singleMode.shockActive ? 'text-red-400' :\r\n              'text-green-400'\r\n            }`}>\r\n              {singleMode.warningActive ? 'ПРЕДУПРЕЖДЕНИЕ' :\r\n               singleMode.shockActive ? 'РАЗРЯД' :\r\n               'БЕЗОПАСНО'}\r\n            </div>\r\n          </motion.div>\r\n        </div>\r\n\r\n        {/* Pause/Exit Button */}\r\n        <motion.button\r\n          onClick={handleEndGame}\r\n          className=\"mt-8 glass-effect px-6 py-3 rounded-xl hover:bg-red-500/20 transition-colors\"\r\n          whileHover={{ scale: 1.05 }}\r\n          whileTap={{ scale: 0.95 }}\r\n        >\r\n          <span className=\"text-red-300 font-bold\">Завершить игру</span>\r\n        </motion.button>\r\n      </div>\r\n\r\n      {/* Background Effects */}\r\n      <div className=\"fixed inset-0 pointer-events-none overflow-hidden\">\r\n        {/* Electric grid animation */}\r\n        <motion.div\r\n          className=\"absolute inset-0 opacity-10\"\r\n          animate={{\r\n            backgroundPosition: ['0% 0%', '100% 100%'],\r\n          }}\r\n          transition={{\r\n            duration: 20,\r\n            repeat: Infinity,\r\n            ease: 'linear'\r\n          }}\r\n          style={{\r\n            backgroundImage: `\r\n              linear-gradient(0deg, transparent 24%, rgba(255, 107, 53, 0.05) 25%, rgba(255, 107, 53, 0.05) 26%, transparent 27%, transparent 74%, rgba(255, 107, 53, 0.05) 75%, rgba(255, 107, 53, 0.05) 76%, transparent 77%, transparent),\r\n              linear-gradient(90deg, transparent 24%, rgba(255, 107, 53, 0.05) 25%, rgba(255, 107, 53, 0.05) 26%, transparent 27%, transparent 74%, rgba(255, 107, 53, 0.05) 75%, rgba(255, 107, 53, 0.05) 76%, transparent 77%, transparent)\r\n            `,\r\n            backgroundSize: '50px 50px'\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { LevelConfig } from '../utils/levelSystem';\r\nimport { getOutletImageByLevel } from '../utils/levelSystem';\r\nimport { hapticManager } from '../utils/hapticManager';\r\n\r\ninterface LevelUpNotificationProps {\r\n  isVisible: boolean;\r\n  newLevel: LevelConfig;\r\n  voltsReward: number;\r\n  onClose: () => void;\r\n}\r\n\r\nexport const LevelUpNotification: React.FC<LevelUpNotificationProps> = ({\r\n  isVisible,\r\n  newLevel,\r\n  voltsReward,\r\n  onClose\r\n}) => {\r\n  // Добавляем вибрацию при появлении уведомления\r\n  useEffect(() => {\r\n    if (isVisible) {\r\n      hapticManager.levelUp();\r\n    }\r\n  }, [isVisible]);\r\n  \r\n  // Check if outlet image changed with this level\r\n  if (!newLevel || !newLevel.level) {\r\n    if (isVisible) {\r\n      console.warn('LevelUpNotification: newLevel is invalid', newLevel);\r\n    }\r\n    return null;\r\n  }\r\n  \r\n  const newOutletImage = getOutletImageByLevel(newLevel.level);\r\n  const previousOutletImage = getOutletImageByLevel(newLevel.level - 1);\r\n  const outletImageChanged = newOutletImage !== previousOutletImage;\r\n  return (\r\n    <AnimatePresence>\r\n      {isVisible && (\r\n        <motion.div\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          exit={{ opacity: 0 }}\r\n          className=\"fixed inset-0 bg-black/80 flex items-center justify-center z-50\"\r\n          onClick={onClose}\r\n        >\r\n          <motion.div\r\n            initial={{ scale: 0.5, opacity: 0, rotateY: -90 }}\r\n            animate={{ scale: 1, opacity: 1, rotateY: 0 }}\r\n            exit={{ scale: 0.5, opacity: 0, rotateY: 90 }}\r\n            transition={{ \r\n              type: \"spring\", \r\n              stiffness: 300, \r\n              damping: 20,\r\n              duration: 0.6 \r\n            }}\r\n            className=\"glass-effect p-8 max-w-md mx-4 text-center relative overflow-hidden\"\r\n            onClick={(e) => e.stopPropagation()}\r\n          >\r\n            {/* Background sparkles */}\r\n            <div className=\"absolute inset-0 pointer-events-none\">\r\n              {[...Array(20)].map((_, i) => (\r\n                <motion.div\r\n                  key={i}\r\n                  className=\"absolute w-1 h-1 bg-yellow-300 rounded-full\"\r\n                  style={{\r\n                    left: `${Math.random() * 100}%`,\r\n                    top: `${Math.random() * 100}%`,\r\n                  }}\r\n                  animate={{\r\n                    opacity: [0, 1, 0],\r\n                    scale: [0, 1, 0],\r\n                  }}\r\n                  transition={{\r\n                    duration: 2,\r\n                    repeat: Infinity,\r\n                    delay: Math.random() * 2,\r\n                  }}\r\n                />\r\n              ))}\r\n            </div>\r\n\r\n            {/* Level up content */}\r\n            <motion.div\r\n              animate={{\r\n                scale: [1, 1.1, 1],\r\n              }}\r\n              transition={{\r\n                duration: 0.6,\r\n                delay: 0.3,\r\n              }}\r\n            >\r\n              <div className=\"text-6xl mb-4\">🎉</div>\r\n              \r\n              <motion.h2 \r\n                className=\"text-3xl font-bold text-primary-orange mb-2\"\r\n                animate={{ \r\n                  textShadow: [\r\n                    \"0 0 10px rgba(255, 107, 53, 0.5)\",\r\n                    \"0 0 20px rgba(255, 107, 53, 0.8)\",\r\n                    \"0 0 10px rgba(255, 107, 53, 0.5)\"\r\n                  ]\r\n                }}\r\n                transition={{ duration: 1.5, repeat: Infinity }}\r\n              >\r\n                НОВЫЙ УРОВЕНЬ!\r\n              </motion.h2>\r\n              \r\n              <div className=\"mb-4\">\r\n                <div className=\"text-5xl font-bold text-accent-blue mb-2\">\r\n                  {newLevel.level}\r\n                </div>\r\n                <div className=\"text-xl text-yellow-300 font-semibold mb-1\">\r\n                  {newLevel.title}\r\n                </div>\r\n                <div className=\"text-sm text-gray-300 italic\">\r\n                  {newLevel.description}\r\n                </div>\r\n              </div>\r\n\r\n              <motion.div \r\n                className=\"glass-effect p-4 rounded-lg bg-gradient-to-r from-yellow-500/20 to-orange-500/20\"\r\n                animate={{ \r\n                  boxShadow: [\r\n                    \"0 0 20px rgba(255, 193, 7, 0.3)\",\r\n                    \"0 0 30px rgba(255, 193, 7, 0.6)\",\r\n                    \"0 0 20px rgba(255, 193, 7, 0.3)\"\r\n                  ]\r\n                }}\r\n                transition={{ duration: 2, repeat: Infinity }}\r\n              >\r\n                <div className=\"text-lg font-bold text-yellow-300 mb-1\">\r\n                  Награда за уровень:\r\n                </div>\r\n                <div className=\"text-2xl font-bold text-white\">\r\n                  +{voltsReward}⚡ Вольт\r\n                </div>\r\n                \r\n                {/* Show outlet upgrade notification */}\r\n                {outletImageChanged && (\r\n                  <div className=\"mt-3 pt-3 border-t border-yellow-400/30\">\r\n                    <div className=\"text-sm font-bold text-blue-300 mb-2\">\r\n                      🎨 Новое изображение розетки!\r\n                    </div>\r\n                    <div className=\"flex items-center justify-center space-x-4\">\r\n                      <div className=\"text-center\">\r\n                        <div className=\"text-xs text-gray-400\">Было:</div>\r\n                        <img \r\n                          src={previousOutletImage} \r\n                          alt=\"Предыдущая розетка\"\r\n                          className=\"w-8 h-8 rounded border border-gray-600\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"text-yellow-400\">→</div>\r\n                      <div className=\"text-center\">\r\n                        <div className=\"text-xs text-gray-400\">Стало:</div>\r\n                        <img \r\n                          src={newOutletImage} \r\n                          alt=\"Новая розетка\"\r\n                          className=\"w-8 h-8 rounded border border-blue-400\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </motion.div>\r\n            </motion.div>\r\n\r\n            {/* Close button */}\r\n            <motion.button\r\n              onClick={onClose}\r\n              className=\"mt-6 px-6 py-3 bg-primary-orange hover:bg-primary-orange/80 text-white font-bold rounded-lg transition-colors\"\r\n              whileHover={{ scale: 1.05 }}\r\n              whileTap={{ scale: 0.95 }}\r\n            >\r\n              Продолжить\r\n            </motion.button>\r\n\r\n            {/* Confetti effect */}\r\n            <div className=\"absolute inset-0 pointer-events-none overflow-hidden\">\r\n              {[...Array(15)].map((_, i) => (\r\n                <motion.div\r\n                  key={`confetti-${i}`}\r\n                  className=\"absolute w-2 h-2 rounded-full\"\r\n                  style={{\r\n                    backgroundColor: ['#FFD700', '#FF6B35', '#00D4FF', '#E8FF00', '#8A2BE2'][i % 5],\r\n                    left: `${50 + (Math.random() - 0.5) * 60}%`,\r\n                    top: '20%',\r\n                  }}\r\n                  animate={{\r\n                    y: ['0vh', '80vh'],\r\n                    x: [(Math.random() - 0.5) * 200, (Math.random() - 0.5) * 400],\r\n                    rotate: [0, 360],\r\n                    opacity: [1, 0],\r\n                  }}\r\n                  transition={{\r\n                    duration: 3,\r\n                    delay: Math.random() * 0.5,\r\n                    ease: \"easeOut\",\r\n                  }}\r\n                />\r\n              ))}\r\n            </div>\r\n          </motion.div>\r\n        </motion.div>\r\n      )}\r\n    </AnimatePresence>\r\n  );\r\n};\r\n","import { useEffect } from 'react';\r\nimport { useGameStore } from './store/gameStore';\r\nimport { MainMenu } from './components/MainMenu';\r\nimport { GameScreen } from './components/GameScreen';\r\nimport { LevelUpNotification } from './components/LevelUpNotification';\r\nimport { TelegramProvider } from './components/TelegramProvider';\r\n\r\nfunction App() {\r\n  const { gameState, levelUpNotification, hideLevelUpNotification } = useGameStore();\r\n\r\n  useEffect(() => {\r\n    // Initialize Telegram WebApp\r\n    if (typeof window !== 'undefined' && window.Telegram?.WebApp) {\r\n      const webApp = window.Telegram.WebApp;\r\n      \r\n      // Основная инициализация\r\n      webApp.ready();\r\n      webApp.expand();\r\n      \r\n      // Настройка темы приложения\r\n      webApp.setHeaderColor('#FF6B35'); // Оранжевый цвет TigerRozetka\r\n      webApp.setBackgroundColor('#1A1A1A'); // Темный фон\r\n      \r\n      // Включение подтверждения закрытия\r\n      webApp.enableClosingConfirmation();\r\n      \r\n      // Настройка главной кнопки (опционально)\r\n      if (webApp.MainButton) {\r\n        webApp.MainButton.setText('🎮 Играть');\r\n        webApp.MainButton.color = '#FF6B35';\r\n        webApp.MainButton.textColor = '#FFFFFF';\r\n      }\r\n      \r\n      // Логирование для отладки\r\n      console.log('Telegram WebApp initialized:', {\r\n        platform: webApp.platform,\r\n        version: webApp.version,\r\n        colorScheme: webApp.colorScheme,\r\n        user: webApp.initDataUnsafe?.user\r\n      });\r\n    } else {\r\n      console.log('Running outside Telegram environment');\r\n    }\r\n  }, []);\r\n\r\n  console.log('App rendering, mode:', gameState.mode);\r\n\r\n  return (\r\n    <TelegramProvider>\r\n      <div className=\"App\">\r\n        {gameState.mode === 'menu' && <MainMenu />}\r\n        {gameState.mode === 'single' && <GameScreen />}\r\n        \r\n        {/* Level Up Notification - Global */}\r\n        {levelUpNotification.level && (\r\n          <LevelUpNotification\r\n            isVisible={levelUpNotification.isVisible}\r\n            newLevel={levelUpNotification.level}\r\n            voltsReward={levelUpNotification.voltsReward || 0}\r\n            onClose={hideLevelUpNotification}\r\n          />\r\n        )}\r\n      </div>\r\n    </TelegramProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App.tsx';\r\nimport './index.css';\r\n\r\nReactDOM.createRoot(document.getElementById('root')!).render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n);\r\n"],"names":["m","require$$0","client","createStoreImpl","createState","state","listeners","setState","partial","replace","nextState","previousState","listener","getState","api","initialState","__vite_import_meta_env__","createStore","React","is","x","y","objectIs","useState","useEffect","useLayoutEffect","useDebugValue","useSyncExternalStore$2","subscribe","getSnapshot","value","_useState","inst","forceUpdate","checkIfSnapshotChanged","latestGetSnapshot","nextValue","useSyncExternalStore$1","shim","useSyncExternalStoreShim_production","shimModule","require$$1","useSyncExternalStore","useRef","useMemo","withSelector_production","getServerSnapshot","selector","isEqual","instRef","memoizedSelector","nextSnapshot","hasMemo","memoizedSnapshot","currentSelection","memoizedSelection","nextSelection","maybeGetServerSnapshot","withSelectorModule","ReactExports","useSyncExternalStoreWithSelector","useSyncExternalStoreExports","didWarnAboutEqualityFn","identity","arg","useStore","equalityFn","slice","createImpl","useBoundStore","create","LEVEL_CONFIGS","calculateLevel","totalExperience","currentLevel","i","getExperienceToNextLevel","nextLevelIndex","config","nextLevel","getLevelProgress","current","required","EXPERIENCE_REWARDS","getOutletImageByLevel","level","defaultGameState","defaultPlayer","defaultSingleMode","defaultSounds","defaultAchievements","useGameStore","set","get","difficulty","now","timeSinceLastClick","currentRisk","scoreData","newScore","newVolts","isSuccess","newStreak","newStreakCount","experienceGained","addExperience","unlockAchievement","achievementId","achievement","a","stats","amount","newExperience","oldLevel","newLevel","showLevelUpNotification","voltsReward","HapticManager","__publicField","_a","webApp","error","enabled","streakCount","isWinner","duration","indicator","style","pattern","delay","vibrateDuration","pauseDuration","hapticManager","ScoreBreakdown","onClose","player","singleMode","gameState","jsx","motion","jsxs","e","LevelDisplay","getCurrentLevelInfo","progressInfo","progressPercent","currentOutletImage","nextOutletImage","outletWillChange","HapticSettings","isVisible","isEnabled","setIsEnabled","testingType","setTestingType","savedEnabled","handleToggleEnabled","newValue","testHaptic","type","action","TelegramContext","createContext","useTelegram","useContext","TelegramProvider","children","setWebApp","user","setUser","isInTelegram","setIsInTelegram","platform","setPlatform","colorScheme","setColorScheme","tgWebApp","_b","_c","contextValue","TelegramUserInfo","MainMenu","startSingleMode","showScoreBreakdown","setShowScoreBreakdown","showHapticSettings","setShowHapticSettings","handleQuickLevelUp","handleStartGame","SoundManager","name","url","arrayBuffer","audioBuffer","volume","buffer","source","gainNode","intensity","frequency","bufferSize","output","t","envelope","noise","oscillation","lowFreq","highFreq","soundManager","ScorePopup","score","reason","position","experience","getColorClass","getIcon","AnimatePresence","useOutletImageAnimation","currentImage","setCurrentImage","isAnimating","setIsAnimating","newImage","TigerOutlet","className","clickOutlet","updateScore","sparks","setSparks","isPressed","setIsPressed","glowIntensity","setGlowIntensity","scorePopup","setScorePopup","showScorePopup","useCallback","prev","createSparks","sparkCount","newSparks","_","spark","s","handleClick","shockChance","basePoints","riskMultiplier","streakBonus","totalPoints","interval","GameHUD","GameScreen","endGame","triggerWarning","triggerShock","gameTime","setGameTime","showGameOver","setShowGameOver","scheduleNext","handleEndGame","formatTime","seconds","mins","secs","LevelUpNotification","newOutletImage","previousOutletImage","outletImageChanged","App","levelUpNotification","hideLevelUpNotification","ReactDOM"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6]}