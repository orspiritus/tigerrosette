{"version":3,"file":"index-CwDlvOfO.js","sources":["../../node_modules/react-dom/client.js","../../node_modules/zustand/esm/vanilla.mjs","../../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.js","../../node_modules/use-sync-external-store/shim/index.js","../../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.production.js","../../node_modules/use-sync-external-store/shim/with-selector.js","../../node_modules/zustand/esm/index.mjs","../../src/utils/levelSystem.ts","../../src/utils/apiClient.ts","../../src/store/gameStore.ts","../../src/utils/hapticManager.ts","../../src/components/ScoreBreakdown.tsx","../../src/components/LevelDisplay.tsx","../../src/components/HapticSettings.tsx","../../src/components/TelegramProvider.tsx","../../src/components/TelegramUserInfo.tsx","../../src/hooks/useGameApi.ts","../../src/components/MainMenu.tsx","../../src/utils/soundManager.ts","../../src/components/ScorePopup.tsx","../../src/components/ElectricSparks.tsx","../../src/components/SimpleVideoPlayer.tsx","../../src/hooks/useOutletImageAnimation.ts","../../src/components/TigerOutlet.tsx","../../src/components/CounterAttackButton.tsx","../../src/components/ConnectionStatus.tsx","../../src/components/GameHUD.tsx","../../src/components/ScreenShake.tsx","../../src/components/GameScreen.tsx","../../src/components/MultiplayerScreen.tsx","../../src/hooks/useDuelConnection.ts","../../src/components/DuelScreen.tsx","../../src/components/DuelInviteScreen.tsx","../../src/components/DuelInviteReceiver.tsx","../../src/components/LevelUpNotification.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","const createStoreImpl = (createState) => {\n  let state;\n  const listeners = /* @__PURE__ */ new Set();\n  const setState = (partial, replace) => {\n    const nextState = typeof partial === \"function\" ? partial(state) : partial;\n    if (!Object.is(nextState, state)) {\n      const previousState = state;\n      state = (replace != null ? replace : typeof nextState !== \"object\" || nextState === null) ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach((listener) => listener(state, previousState));\n    }\n  };\n  const getState = () => state;\n  const getInitialState = () => initialState;\n  const subscribe = (listener) => {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n  const destroy = () => {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n      console.warn(\n        \"[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected.\"\n      );\n    }\n    listeners.clear();\n  };\n  const api = { setState, getState, getInitialState, subscribe, destroy };\n  const initialState = state = createState(setState, getState, api);\n  return api;\n};\nconst createStore = (createState) => createState ? createStoreImpl(createState) : createStoreImpl;\nvar vanilla = (createState) => {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] Default export is deprecated. Instead use import { createStore } from 'zustand/vanilla'.\"\n    );\n  }\n  return createStore(createState);\n};\n\nexport { createStore, vanilla as default };\n","/**\n * @license React\n * use-sync-external-store-shim.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar React = require(\"react\");\nfunction is(x, y) {\n  return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\nvar objectIs = \"function\" === typeof Object.is ? Object.is : is,\n  useState = React.useState,\n  useEffect = React.useEffect,\n  useLayoutEffect = React.useLayoutEffect,\n  useDebugValue = React.useDebugValue;\nfunction useSyncExternalStore$2(subscribe, getSnapshot) {\n  var value = getSnapshot(),\n    _useState = useState({ inst: { value: value, getSnapshot: getSnapshot } }),\n    inst = _useState[0].inst,\n    forceUpdate = _useState[1];\n  useLayoutEffect(\n    function () {\n      inst.value = value;\n      inst.getSnapshot = getSnapshot;\n      checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n    },\n    [subscribe, value, getSnapshot]\n  );\n  useEffect(\n    function () {\n      checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n      return subscribe(function () {\n        checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n      });\n    },\n    [subscribe]\n  );\n  useDebugValue(value);\n  return value;\n}\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  inst = inst.value;\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(inst, nextValue);\n  } catch (error) {\n    return !0;\n  }\n}\nfunction useSyncExternalStore$1(subscribe, getSnapshot) {\n  return getSnapshot();\n}\nvar shim =\n  \"undefined\" === typeof window ||\n  \"undefined\" === typeof window.document ||\n  \"undefined\" === typeof window.document.createElement\n    ? useSyncExternalStore$1\n    : useSyncExternalStore$2;\nexports.useSyncExternalStore =\n  void 0 !== React.useSyncExternalStore ? React.useSyncExternalStore : shim;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n","/**\n * @license React\n * use-sync-external-store-shim/with-selector.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar React = require(\"react\"),\n  shim = require(\"use-sync-external-store/shim\");\nfunction is(x, y) {\n  return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\nvar objectIs = \"function\" === typeof Object.is ? Object.is : is,\n  useSyncExternalStore = shim.useSyncExternalStore,\n  useRef = React.useRef,\n  useEffect = React.useEffect,\n  useMemo = React.useMemo,\n  useDebugValue = React.useDebugValue;\nexports.useSyncExternalStoreWithSelector = function (\n  subscribe,\n  getSnapshot,\n  getServerSnapshot,\n  selector,\n  isEqual\n) {\n  var instRef = useRef(null);\n  if (null === instRef.current) {\n    var inst = { hasValue: !1, value: null };\n    instRef.current = inst;\n  } else inst = instRef.current;\n  instRef = useMemo(\n    function () {\n      function memoizedSelector(nextSnapshot) {\n        if (!hasMemo) {\n          hasMemo = !0;\n          memoizedSnapshot = nextSnapshot;\n          nextSnapshot = selector(nextSnapshot);\n          if (void 0 !== isEqual && inst.hasValue) {\n            var currentSelection = inst.value;\n            if (isEqual(currentSelection, nextSnapshot))\n              return (memoizedSelection = currentSelection);\n          }\n          return (memoizedSelection = nextSnapshot);\n        }\n        currentSelection = memoizedSelection;\n        if (objectIs(memoizedSnapshot, nextSnapshot)) return currentSelection;\n        var nextSelection = selector(nextSnapshot);\n        if (void 0 !== isEqual && isEqual(currentSelection, nextSelection))\n          return (memoizedSnapshot = nextSnapshot), currentSelection;\n        memoizedSnapshot = nextSnapshot;\n        return (memoizedSelection = nextSelection);\n      }\n      var hasMemo = !1,\n        memoizedSnapshot,\n        memoizedSelection,\n        maybeGetServerSnapshot =\n          void 0 === getServerSnapshot ? null : getServerSnapshot;\n      return [\n        function () {\n          return memoizedSelector(getSnapshot());\n        },\n        null === maybeGetServerSnapshot\n          ? void 0\n          : function () {\n              return memoizedSelector(maybeGetServerSnapshot());\n            }\n      ];\n    },\n    [getSnapshot, getServerSnapshot, selector, isEqual]\n  );\n  var value = useSyncExternalStore(subscribe, instRef[0], instRef[1]);\n  useEffect(\n    function () {\n      inst.hasValue = !0;\n      inst.value = value;\n    },\n    [value]\n  );\n  useDebugValue(value);\n  return value;\n};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.production.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.development.js');\n}\n","import { createStore } from 'zustand/vanilla';\nexport * from 'zustand/vanilla';\nimport ReactExports from 'react';\nimport useSyncExternalStoreExports from 'use-sync-external-store/shim/with-selector.js';\n\nconst { useDebugValue } = ReactExports;\nconst { useSyncExternalStoreWithSelector } = useSyncExternalStoreExports;\nlet didWarnAboutEqualityFn = false;\nconst identity = (arg) => arg;\nfunction useStore(api, selector = identity, equalityFn) {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && equalityFn && !didWarnAboutEqualityFn) {\n    console.warn(\n      \"[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937\"\n    );\n    didWarnAboutEqualityFn = true;\n  }\n  const slice = useSyncExternalStoreWithSelector(\n    api.subscribe,\n    api.getState,\n    api.getServerState || api.getInitialState,\n    selector,\n    equalityFn\n  );\n  useDebugValue(slice);\n  return slice;\n}\nconst createImpl = (createState) => {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && typeof createState !== \"function\") {\n    console.warn(\n      \"[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`.\"\n    );\n  }\n  const api = typeof createState === \"function\" ? createStore(createState) : createState;\n  const useBoundStore = (selector, equalityFn) => useStore(api, selector, equalityFn);\n  Object.assign(useBoundStore, api);\n  return useBoundStore;\n};\nconst create = (createState) => createState ? createImpl(createState) : createImpl;\nvar react = (createState) => {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] Default export is deprecated. Instead use `import { create } from 'zustand'`.\"\n    );\n  }\n  return create(createState);\n};\n\nexport { create, react as default, useStore };\n","// Level System Configuration\r\nexport interface LevelConfig {\r\n  level: number;\r\n  requiredExperience: number;\r\n  voltsReward: number;\r\n  title: string;\r\n  description: string;\r\n}\r\n\r\n// Experience required for each level (cumulative) - Extremely balanced progression\r\nexport const LEVEL_CONFIGS: LevelConfig[] = [\r\n  { level: 1, requiredExperience: 0, voltsReward: 0, title: \"Новичок\", description: \"Первые шаги с электричеством\" },\r\n  { level: 2, requiredExperience: 5000, voltsReward: 50, title: \"Ученик\", description: \"Осваиваете основы\" },\r\n  { level: 3, requiredExperience: 15000, voltsReward: 75, title: \"Практикант\", description: \"⚠️ Опасно! Теперь удар током отнимает очки\" },\r\n  { level: 4, requiredExperience: 35000, voltsReward: 100, title: \"Любитель\", description: \"🔥 Критично! Напряжение отнимается от очков\" },\r\n  { level: 5, requiredExperience: 70000, voltsReward: 150, title: \"Энтузиаст\", description: \"Проявляете смелость в опасной игре\" },\r\n  { level: 6, requiredExperience: 125000, voltsReward: 200, title: \"Смельчак\", description: \"Не боитесь рисковать\" },\r\n  { level: 7, requiredExperience: 200000, voltsReward: 250, title: \"Храбрец\", description: \"Идете на оправданный риск\" },\r\n  { level: 8, requiredExperience: 300000, voltsReward: 300, title: \"Отважный\", description: \"Покоряете сложности\" },\r\n  { level: 9, requiredExperience: 450000, voltsReward: 400, title: \"Безрассудный\", description: \"Играете с опасностью\" },\r\n  { level: 10, requiredExperience: 650000, voltsReward: 500, title: \"Профессионал\", description: \"Мастерски владеете риском\" },\r\n  { level: 11, requiredExperience: 900000, voltsReward: 600, title: \"Эксперт\", description: \"Знаете все тонкости\" },\r\n  { level: 12, requiredExperience: 1200000, voltsReward: 750, title: \"Мастер\", description: \"Превосходите ожидания\" },\r\n  { level: 13, requiredExperience: 1600000, voltsReward: 900, title: \"Виртуоз\", description: \"Играете как художник\" },\r\n  { level: 14, requiredExperience: 2100000, voltsReward: 1100, title: \"Гуру\", description: \"Достигли просветления\" },\r\n  { level: 15, requiredExperience: 2700000, voltsReward: 1300, title: \"Сенсей\", description: \"Учите других\" },\r\n  { level: 16, requiredExperience: 3500000, voltsReward: 1500, title: \"Легенда\", description: \"О вас слагают легенды\" },\r\n  { level: 17, requiredExperience: 4500000, voltsReward: 1750, title: \"Миф\", description: \"Недостижимый идеал\" },\r\n  { level: 18, requiredExperience: 5800000, voltsReward: 2000, title: \"Титан\", description: \"Сверхчеловеческие способности\" },\r\n  { level: 19, requiredExperience: 7500000, voltsReward: 2300, title: \"Бог Электричества\", description: \"Повелеваете молниями\" },\r\n  { level: 20, requiredExperience: 10000000, voltsReward: 2500, title: \"Зевс\", description: \"Абсолютная власть над током\" },\r\n];\r\n\r\n// Calculate level from total experience\r\nexport function calculateLevel(totalExperience: number): LevelConfig {\r\n  let currentLevel = LEVEL_CONFIGS[0];\r\n  \r\n  for (let i = LEVEL_CONFIGS.length - 1; i >= 0; i--) {\r\n    if (totalExperience >= LEVEL_CONFIGS[i].requiredExperience) {\r\n      currentLevel = LEVEL_CONFIGS[i];\r\n      break;\r\n    }\r\n  }\r\n  \r\n  return currentLevel;\r\n}\r\n\r\n// Calculate experience needed for next level\r\nexport function getExperienceToNextLevel(totalExperience: number): {\r\n  current: number;\r\n  required: number;\r\n  remaining: number;\r\n  nextLevel: LevelConfig | null;\r\n} {\r\n  const currentLevel = calculateLevel(totalExperience);\r\n  const nextLevelIndex = LEVEL_CONFIGS.findIndex(config => config.level === currentLevel.level) + 1;\r\n  \r\n  if (nextLevelIndex >= LEVEL_CONFIGS.length) {\r\n    return {\r\n      current: totalExperience,\r\n      required: totalExperience,\r\n      remaining: 0,\r\n      nextLevel: null\r\n    };\r\n  }\r\n  \r\n  const nextLevel = LEVEL_CONFIGS[nextLevelIndex];\r\n  \r\n  return {\r\n    current: totalExperience - currentLevel.requiredExperience,\r\n    required: nextLevel.requiredExperience - currentLevel.requiredExperience,\r\n    remaining: nextLevel.requiredExperience - totalExperience,\r\n    nextLevel\r\n  };\r\n}\r\n\r\n// Get level progress percentage\r\nexport function getLevelProgress(totalExperience: number): number {\r\n  const { current, required } = getExperienceToNextLevel(totalExperience);\r\n  if (required === 0) return 100;\r\n  return Math.min(100, (current / required) * 100);\r\n}\r\n\r\n// Experience rewards for different actions - Very slow progression\r\nexport const EXPERIENCE_REWARDS = {\r\n  SAFE_CLICK: 1,        // Уменьшено с 3 до 1 (в 10 раз от оригинала)\r\n  RISKY_CLICK: 2,       // Уменьшено с 5 до 2 (в 7.5 раз от оригинала)\r\n  EXTREME_CLICK: 3,     // Уменьшено с 8 до 3 (в 8 раз от оригинала)\r\n  STREAK_5: 5,          // Уменьшено с 15 до 5 (в 10 раз от оригинала)\r\n  STREAK_10: 12,        // Уменьшено с 35 до 12 (в 8 раз от оригинала)\r\n  STREAK_25: 30,        // Уменьшено с 80 до 30 (в 8 раз от оригинала)\r\n  STREAK_50: 60,        // Уменьшено с 180 до 60 (в 8 раз от оригинала)\r\n  SURVIVAL_MINUTE: 2,   // Уменьшено с 5 до 2 (в 10 раз от оригинала)\r\n  SHOCK_SURVIVAL: 1,    // Уменьшено с 2 до 1 (в 5 раз от оригинала)\r\n  ACHIEVEMENT: 10,      // Уменьшено с 30 до 10 (в 10 раз от оригинала)\r\n  DAILY_BONUS: 20       // Уменьшено с 50 до 20 (в 10 раз от оригинала)\r\n} as const;\r\n\r\n// Get outlet image based on player level - Adjusted for new level system\r\nexport function getOutletImageByLevel(level: number): string {\r\n  // We have 4 different outlet images (tigrrozetka_1.png to tigrrozetka_4.png)\r\n  // Cycle through them based on level ranges\r\n  \r\n  const basePath = '/tigerrosette/';\r\n  \r\n  if (level <= 3) {\r\n    return `${basePath}Media/Pictures/tigrrozetka_1.png`;\r\n  } else if (level <= 7) {\r\n    return `${basePath}Media/Pictures/tigrrozetka_2.png`;\r\n  } else if (level <= 12) {\r\n    return `${basePath}Media/Pictures/tigrrozetka_3.png`;\r\n  } else {\r\n    return `${basePath}Media/Pictures/tigrrozetka_4.png`;\r\n  }\r\n}\r\n","/**\r\n * API клиент для взаимодействия с backend\r\n */\r\n\r\nconst API_BASE_URL = (import.meta as any).env?.VITE_API_URL || 'http://localhost:3001/api';\r\n\r\ninterface ApiResponse<T = any> {\r\n  success?: boolean;\r\n  data?: T;\r\n  error?: string;\r\n}\r\n\r\ninterface GameScoreData {\r\n  score: number;\r\n  level: number;\r\n  timePlayed: number;\r\n}\r\n\r\ninterface GameScoreResponse {\r\n  success: boolean;\r\n  experienceGained: number;\r\n  voltsGained: number;\r\n  levelUpReward: number;\r\n  leveledUp: boolean;\r\n  newLevel: number;\r\n  levelProgress: {\r\n    currentLevel: number;\r\n    experienceInLevel: number;\r\n    experienceToNextLevel: number;\r\n    progressPercentage: number;\r\n  };\r\n  newEnergy: number;\r\n  totalExperience: number;\r\n  totalVolts: number;\r\n}\r\n\r\ninterface UserStats {\r\n  level: number;\r\n  totalExperience: number;\r\n  levelProgress: {\r\n    currentLevel: number;\r\n    experienceInLevel: number;\r\n    experienceToNextLevel: number;\r\n    progressPercentage: number;\r\n  };\r\n  totalVolts: number;\r\n  premiumVolts: number;\r\n  energy: number;\r\n  maxEnergy: number;\r\n  energyLastRefilled: string;\r\n  totalSessions: number;\r\n  bestScore: number;\r\n  totalTimePlayed: number;\r\n  recentSessions: Array<{\r\n    id: string;\r\n    score: number;\r\n    level: number;\r\n    experienceGained: number;\r\n    voltsGained: number;\r\n    timePlayed: number;\r\n    playedAt: string;\r\n  }>;\r\n}\r\n\r\ninterface LeaderboardEntry {\r\n  rank: number;\r\n  id: string;\r\n  username: string;\r\n  level: number;\r\n  totalExperience: number;\r\n  totalVolts: number;\r\n}\r\n\r\nclass ApiClient {\r\n  private token: string | null = null;\r\n\r\n  constructor() {\r\n    // Получаем токен из localStorage или Telegram WebApp\r\n    this.token = localStorage.getItem('auth_token');\r\n    this.initializeTelegramAuth();\r\n  }\r\n\r\n  private initializeTelegramAuth() {\r\n    // Инициализация аутентификации через Telegram WebApp\r\n    if (typeof window !== 'undefined' && window.Telegram?.WebApp) {\r\n      const webApp = window.Telegram.WebApp;\r\n      if (webApp.initDataUnsafe?.user) {\r\n        // Автоматическая аутентификация через Telegram\r\n        this.authenticateWithTelegram(webApp.initData);\r\n      }\r\n    }\r\n  }\r\n\r\n  private async authenticateWithTelegram(initData: string): Promise<void> {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/auth/telegram`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ initData }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      \r\n      if (data.token) {\r\n        this.token = data.token;\r\n        localStorage.setItem('auth_token', data.token);\r\n      }\r\n    } catch (error) {\r\n      console.error('Telegram authentication failed:', error);\r\n    }\r\n  }\r\n\r\n  private async makeRequest<T>(\r\n    endpoint: string,\r\n    options: RequestInit = {}\r\n  ): Promise<ApiResponse<T>> {\r\n    try {\r\n      const headers: Record<string, string> = {\r\n        'Content-Type': 'application/json',\r\n        ...(options.headers as Record<string, string>),\r\n      };\r\n\r\n      if (this.token) {\r\n        headers.Authorization = `Bearer ${this.token}`;\r\n      }\r\n\r\n      const response = await fetch(`${API_BASE_URL}${endpoint}`, {\r\n        ...options,\r\n        headers,\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        return {\r\n          error: data.error || `HTTP ${response.status}`,\r\n        };\r\n      }\r\n\r\n      return {\r\n        success: true,\r\n        data,\r\n      };\r\n    } catch (error) {\r\n      console.error('API request failed:', error);\r\n      return {\r\n        error: error instanceof Error ? error.message : 'Network error',\r\n      };\r\n    }\r\n  }\r\n\r\n  // === ИГРОВЫЕ МЕТОДЫ ===\r\n\r\n  /**\r\n   * Отправляет результаты игры на сервер\r\n   */\r\n  async submitScore(scoreData: GameScoreData): Promise<ApiResponse<GameScoreResponse>> {\r\n    return this.makeRequest<GameScoreResponse>('/game/score', {\r\n      method: 'POST',\r\n      body: JSON.stringify(scoreData),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Получает статистику пользователя\r\n   */\r\n  async getUserStats(): Promise<ApiResponse<UserStats>> {\r\n    return this.makeRequest<UserStats>('/game/stats');\r\n  }\r\n\r\n  /**\r\n   * Получает таблицу лидеров\r\n   */\r\n  async getLeaderboard(type: 'level' | 'volts' | 'experience' = 'level', limit = 10): Promise<ApiResponse<{ leaderboard: LeaderboardEntry[] }>> {\r\n    return this.makeRequest<{ leaderboard: LeaderboardEntry[] }>(`/game/leaderboard?type=${type}&limit=${limit}`);\r\n  }\r\n\r\n  /**\r\n   * Восстанавливает энергию\r\n   */\r\n  async refillEnergy(): Promise<ApiResponse<{\r\n    success: boolean;\r\n    energyRefilled: number;\r\n    newEnergy: number;\r\n    maxEnergy: number;\r\n  }>> {\r\n    return this.makeRequest('/game/refill-energy', {\r\n      method: 'POST',\r\n    });\r\n  }\r\n\r\n  // === ВСПОМОГАТЕЛЬНЫЕ МЕТОДЫ ===\r\n\r\n  /**\r\n   * Проверяет, аутентифицирован ли пользователь\r\n   */\r\n  isAuthenticated(): boolean {\r\n    return !!this.token;\r\n  }\r\n\r\n  /**\r\n   * Устанавливает токен аутентификации\r\n   */\r\n  setToken(token: string): void {\r\n    this.token = token;\r\n    localStorage.setItem('auth_token', token);\r\n  }\r\n\r\n  /**\r\n   * Очищает токен аутентификации\r\n   */\r\n  clearToken(): void {\r\n    this.token = null;\r\n    localStorage.removeItem('auth_token');\r\n  }\r\n}\r\n\r\n// Экспортируем единственный экземпляр\r\nexport const apiClient = new ApiClient();\r\nexport default apiClient;\r\n","import { create } from 'zustand';\r\nimport { GameStore, GameState, Player, SingleModeState, Achievement, ScoreData, SoundConfig, ShockImpact } from '../types/game';\r\nimport { calculateLevel, getExperienceToNextLevel, EXPERIENCE_REWARDS } from '../utils/levelSystem';\r\nimport { apiClient } from '../utils/apiClient';\r\n\r\n// Default states\r\nconst defaultGameState: GameState = {\r\n  mode: 'menu',\r\n  isPlaying: false,\r\n  isPaused: false,\r\n  gameTime: 0,\r\n  score: 0\r\n};\r\n\r\nconst defaultPlayer: Player = {\r\n  id: 'player1',\r\n  name: 'Смельчак',\r\n  volts: 0,\r\n  level: 1,\r\n  experience: 0,\r\n  streak: 0,\r\n  totalClicks: 0,\r\n  successfulClicks: 0,\r\n  shockedClicks: 0,\r\n  luckCoefficient: 50, // Начинаем с 50%\r\n  luckIndicatorHidden: false,\r\n  luckHiddenUntil: 0,\r\n  survivalTime: 0\r\n};\r\n\r\nconst defaultSingleMode: SingleModeState = {\r\n  difficulty: 'easy',\r\n  aiPattern: 'regular',\r\n  currentRisk: 'low',\r\n  streakCount: 0,\r\n  timeInSafeZone: 0,\r\n  lastClickTime: 0,\r\n  dangerLevel: 0,\r\n  warningSignsActive: false,\r\n  \r\n  // AI Electrician System\r\n  aiElectricianActive: false,\r\n  nextDischargeTime: 0,\r\n  dischargeWarningTime: 0,\r\n  isDischarging: false,\r\n  dischargeDuration: 5000 // 5 секунд - увеличено для большей вероятности попадания\r\n};\r\n\r\nconst defaultSounds: SoundConfig = {\r\n  volume: 0.7,\r\n  enabled: true,\r\n  backgroundMusicEnabled: true\r\n};\r\n\r\n// Default achievements\r\nconst defaultAchievements: Achievement[] = [\r\n  {\r\n    id: 'first_click',\r\n    title: 'Первое прикосновение',\r\n    description: 'Нажми на розетку впервые',\r\n    icon: '⚡',\r\n    requirement: 1,\r\n    progress: 0,\r\n    completed: false,\r\n    reward: 50,\r\n    category: 'special'\r\n  },\r\n  {\r\n    id: 'survivor_5',\r\n    title: 'Живчик',\r\n    description: 'Серия из 5 успешных нажатий',\r\n    icon: '🏃',\r\n    requirement: 5,\r\n    progress: 0,\r\n    completed: false,\r\n    reward: 100,\r\n    category: 'streak'\r\n  },\r\n  {\r\n    id: 'survivor_25',\r\n    title: 'Неубиваемый',\r\n    description: 'Серия из 25 успешных нажатий',\r\n    icon: '🛡️',\r\n    requirement: 25,\r\n    progress: 0,\r\n    completed: false,\r\n    reward: 500,\r\n    category: 'streak'\r\n  },\r\n  {\r\n    id: 'risk_taker',\r\n    title: 'Безрассудный',\r\n    description: '50 нажатий в режиме High Risk',\r\n    icon: '🔥',\r\n    requirement: 50,\r\n    progress: 0,\r\n    completed: false,\r\n    reward: 500,\r\n    category: 'risk'\r\n  },\r\n  {\r\n    id: 'time_survivor',\r\n    title: 'Выживальщик',\r\n    description: 'Выживи 5 минут без поражения',\r\n    icon: '⏰',\r\n    requirement: 300,\r\n    progress: 0,\r\n    completed: false,\r\n    reward: 1000,\r\n    category: 'survival'\r\n  }\r\n];\r\n\r\nexport const useGameStore = create<GameStore>((set, get) => ({\r\n  // Initial state\r\n  gameState: defaultGameState,\r\n  player: defaultPlayer,\r\n  singleMode: defaultSingleMode,\r\n  achievements: defaultAchievements,\r\n  sounds: defaultSounds,\r\n  showElectricSparks: false,\r\n  sparksIntensity: 'medium',\r\n  showScreenShake: false,\r\n  aiElectrician: {\r\n    name: 'Иван Электрик',\r\n    energy: 100,\r\n    maxEnergy: 100,\r\n    equipment: {\r\n      battery: 100,\r\n      capacitor: 100,\r\n      wires: 100,\r\n      generator: 100\r\n    },\r\n    mood: 'confident',\r\n    experience: 50,\r\n    isActive: false,\r\n    lastMessage: 'Готов к работе!',\r\n    messageTime: 0,\r\n    failuresCount: 0,\r\n    successfulDischarges: 0,\r\n    workingEfficiency: 100,\r\n    canWork: true\r\n  },\r\n  levelUpNotification: {\r\n    isVisible: false,\r\n    level: null,\r\n    voltsReward: 0\r\n  },\r\n\r\n  // Actions\r\n  startSingleMode: (difficulty) => {\r\n    console.log('startSingleMode: Starting with difficulty:', difficulty);\r\n    \r\n    // Исправляем уровень игрока на основе опыта перед началом игры\r\n    get().fixPlayerLevel();\r\n    \r\n    set({\r\n      gameState: {\r\n        ...get().gameState,\r\n        mode: 'single',\r\n        isPlaying: true,\r\n        gameTime: 0,\r\n        score: 0\r\n      },\r\n      singleMode: {\r\n        ...defaultSingleMode,\r\n        difficulty\r\n      }\r\n    });\r\n\r\n    // Запускаем ИИ электрика\r\n    setTimeout(() => {\r\n      console.log('startSingleMode: Starting AI Electrician after 3s delay');\r\n      get().startAIElectrician();\r\n    }, 3000); // Начинаем через 3 секунды после старта игры\r\n  },\r\n\r\n  startMultiplayerMode: (mode: 'duel' | 'tournament' | 'coop') => {\r\n    let gameMode: 'multiplayer' | 'duel' | 'duel-invite' = 'multiplayer';\r\n    \r\n    // Если это дуэль, переходим к экрану приглашений\r\n    if (mode === 'duel') {\r\n      gameMode = 'duel-invite';\r\n    }\r\n    \r\n    set({\r\n      gameState: {\r\n        ...get().gameState,\r\n        mode: gameMode,\r\n        isPlaying: false,\r\n        gameTime: 0,\r\n        score: 0\r\n      }\r\n    });\r\n    \r\n    console.log(`Starting multiplayer mode: ${mode}`);\r\n  },\r\n\r\n  // Новая функция для запуска реальной дуэли\r\n  startRealDuel: () => {\r\n    set({\r\n      gameState: {\r\n        ...get().gameState,\r\n        mode: 'duel',\r\n        isPlaying: true,\r\n        gameTime: 0,\r\n        score: 0\r\n      }\r\n    });\r\n    \r\n    console.log('Starting real duel with another player');\r\n  },\r\n\r\n  // Функция для возврата в главное меню\r\n  goToMenu: () => {\r\n    set({\r\n      gameState: {\r\n        ...defaultGameState,\r\n        mode: 'menu'\r\n      }\r\n    });\r\n  },\r\n\r\n  clickOutlet: () => {\r\n    const state = get();\r\n    const now = Date.now();\r\n    const timeSinceLastClick = now - state.singleMode.lastClickTime;\r\n    \r\n    // Calculate risk level based on timing\r\n    let currentRisk: SingleModeState['currentRisk'] = 'low';\r\n    if (timeSinceLastClick < 1000) currentRisk = 'extreme';\r\n    else if (timeSinceLastClick < 2000) currentRisk = 'high';\r\n    else if (timeSinceLastClick < 3000) currentRisk = 'medium';\r\n\r\n    // Calculate danger level (affects warning signs)\r\n    const dangerLevel = Math.min(100, \r\n      (state.singleMode.streakCount * 2) + // Больше серия = больше опасность\r\n      (currentRisk === 'extreme' ? 40 : \r\n       currentRisk === 'high' ? 25 : \r\n       currentRisk === 'medium' ? 15 : 5) + // Риск влияет на опасность\r\n      (state.player.luckCoefficient < 30 ? 20 : 0) // Низкая удача = больше опасность\r\n    );\r\n\r\n    // Activate warning signs if danger is high\r\n    const warningSignsActive = dangerLevel > 60;\r\n\r\n    // Update click stats\r\n    set({\r\n      player: {\r\n        ...state.player,\r\n        totalClicks: state.player.totalClicks + 1\r\n      },\r\n      singleMode: {\r\n        ...state.singleMode,\r\n        lastClickTime: now,\r\n        currentRisk,\r\n        dangerLevel,\r\n        warningSignsActive\r\n      }\r\n    });\r\n\r\n    // Update luck coefficient and restore indicator if needed\r\n    get().updateLuckCoefficient();\r\n  },\r\n\r\n  updateScore: (scoreData: ScoreData) => {\r\n    const state = get();\r\n    const newScore = state.gameState.score + scoreData.totalPoints;\r\n    const newVolts = state.player.volts + scoreData.totalPoints;\r\n    \r\n    // Update streak if it was a success\r\n    const isSuccess = scoreData.reason !== 'Поражение током' && \r\n                     scoreData.reason !== 'Клик во время разряда!' &&\r\n                     scoreData.totalPoints > 0; // Дополнительная проверка на положительные очки\r\n    const newStreak = isSuccess ? state.player.streak + 1 : 0;\r\n    const newStreakCount = isSuccess ? state.singleMode.streakCount + 1 : 0;\r\n    \r\n    // Calculate experience based on action\r\n    let experienceGained = 0;\r\n    if (isSuccess) {\r\n      // Base experience for successful click\r\n      experienceGained = EXPERIENCE_REWARDS.SAFE_CLICK;\r\n      \r\n      // Bonus experience for risky clicks\r\n      if (scoreData.riskMultiplier >= 2.0) {\r\n        experienceGained = EXPERIENCE_REWARDS.RISKY_CLICK;\r\n      }\r\n      if (scoreData.riskMultiplier >= 3.0) {\r\n        experienceGained = EXPERIENCE_REWARDS.EXTREME_CLICK;\r\n      }\r\n      \r\n      // Bonus experience for streaks\r\n      if (newStreak === 5) experienceGained += EXPERIENCE_REWARDS.STREAK_5;\r\n      if (newStreak === 10) experienceGained += EXPERIENCE_REWARDS.STREAK_10;\r\n      if (newStreak === 25) experienceGained += EXPERIENCE_REWARDS.STREAK_25;\r\n      if (newStreak === 50) experienceGained += EXPERIENCE_REWARDS.STREAK_50;\r\n    } else {\r\n      // Small experience even for getting shocked\r\n      experienceGained = EXPERIENCE_REWARDS.SHOCK_SURVIVAL;\r\n    }\r\n    \r\n    // Update success/shock statistics and calculate luck coefficient\r\n    const newSuccessfulClicks = isSuccess ? state.player.successfulClicks + 1 : state.player.successfulClicks;\r\n    const newShockedClicks = !isSuccess ? state.player.shockedClicks + 1 : state.player.shockedClicks;\r\n    const totalAttempts = newSuccessfulClicks + newShockedClicks;\r\n    const newLuckCoefficient = totalAttempts > 0 ? Math.round((newSuccessfulClicks / totalAttempts) * 100) : 50;\r\n    \r\n    set({\r\n      gameState: {\r\n        ...state.gameState,\r\n        score: newScore\r\n      },\r\n      player: {\r\n        ...state.player,\r\n        volts: newVolts,\r\n        streak: newStreak,\r\n        successfulClicks: newSuccessfulClicks,\r\n        shockedClicks: newShockedClicks,\r\n        luckCoefficient: newLuckCoefficient\r\n      },\r\n      singleMode: {\r\n        ...state.singleMode,\r\n        streakCount: newStreakCount\r\n      }\r\n    });\r\n\r\n    // Add experience\r\n    const { addExperience } = get();\r\n    addExperience(experienceGained);\r\n\r\n    // Check for achievements\r\n    const { unlockAchievement } = get();\r\n    if (state.player.totalClicks === 0) {\r\n      unlockAchievement('first_click');\r\n    }\r\n    if (newStreak === 5) unlockAchievement('survivor_5');\r\n    if (newStreak === 10) unlockAchievement('survivor_10');\r\n    if (newStreak === 25) unlockAchievement('survivor_25');\r\n  },\r\n\r\n  // Рассчитывает урон от удара током на основе накопленных вольт\r\n  calculateShockImpact: (volts: number): ShockImpact => {\r\n    let damage: number;\r\n    let severity: 'mild' | 'moderate' | 'severe' | 'critical';\r\n    let duration: number;\r\n    let luckHideDuration: number;\r\n\r\n    if (volts < 50) {\r\n      damage = Math.floor(volts * 0.1) + 1; // 1-5 очков\r\n      severity = 'mild';\r\n      duration = 1000;\r\n      luckHideDuration = 2000;\r\n    } else if (volts < 150) {\r\n      damage = Math.floor(volts * 0.15) + 5; // 5-27 очков\r\n      severity = 'moderate';\r\n      duration = 1500;\r\n      luckHideDuration = 3000;\r\n    } else if (volts < 300) {\r\n      damage = Math.floor(volts * 0.2) + 10; // 10-70 очков\r\n      severity = 'severe';\r\n      duration = 2000;\r\n      luckHideDuration = 5000;\r\n    } else {\r\n      damage = Math.floor(volts * 0.25) + 20; // 20+ очков\r\n      severity = 'critical';\r\n      duration = 3000;\r\n      luckHideDuration = 8000;\r\n    }\r\n\r\n    const voltsDrained = Math.floor(volts * 0.7); // Теряем 70% вольт\r\n\r\n    return {\r\n      damage,\r\n      voltsDrained,\r\n      duration,\r\n      severity,\r\n      luckHideDuration\r\n    };\r\n  },\r\n\r\n  triggerShock: () => {\r\n    const state = get();\r\n    if (!state.gameState.isPlaying) return;\r\n\r\n    // Рассчитываем урон на основе накопленных вольт\r\n    const shockImpact = state.calculateShockImpact(state.player.volts);\r\n    \r\n    set({\r\n      player: {\r\n        ...state.player,\r\n        volts: Math.max(0, state.player.volts - shockImpact.voltsDrained),\r\n        shockedClicks: state.player.shockedClicks + 1,\r\n        totalClicks: state.player.totalClicks + 1,\r\n        streak: 0,\r\n        luckIndicatorHidden: true,\r\n        luckHiddenUntil: Date.now() + shockImpact.luckHideDuration\r\n      },\r\n      showElectricSparks: true,\r\n      sparksIntensity: shockImpact.severity === 'critical' ? 'extreme' : \r\n                      shockImpact.severity === 'severe' ? 'high' :\r\n                      shockImpact.severity === 'moderate' ? 'medium' : 'low',\r\n      showScreenShake: true,\r\n      gameState: {\r\n        ...state.gameState,\r\n        score: Math.max(0, state.gameState.score - shockImpact.damage)\r\n      },\r\n      singleMode: {\r\n        ...state.singleMode,\r\n        streakCount: 0\r\n      }\r\n    });\r\n\r\n    // Отключаем эффекты после анимации\r\n    setTimeout(() => {\r\n      set({\r\n        showElectricSparks: false,\r\n        showScreenShake: false\r\n      });\r\n    }, shockImpact.duration);\r\n\r\n    // Обновляем коэффициент удачи\r\n    get().updateLuckCoefficient();\r\n  },\r\n\r\n  endGame: () => {\r\n    // Останавливаем ИИ электрика\r\n    get().stopAIElectrician();\r\n    \r\n    set({\r\n      gameState: {\r\n        ...get().gameState,\r\n        mode: 'menu',\r\n        isPlaying: false\r\n      }\r\n    });\r\n  },\r\n\r\n  unlockAchievement: (achievementId: string) => {\r\n    const state = get();\r\n    const achievement = state.achievements.find(a => a.id === achievementId);\r\n    \r\n    if (achievement && !achievement.completed) {\r\n      set({\r\n        achievements: state.achievements.map(a =>\r\n          a.id === achievementId \r\n            ? { ...a, completed: true, progress: a.requirement }\r\n            : a\r\n        ),\r\n        player: {\r\n          ...state.player,\r\n          volts: state.player.volts + achievement.reward\r\n        }\r\n      });\r\n    }\r\n  },\r\n\r\n  updatePlayerStats: (stats: Partial<Player>) => {\r\n    const state = get();\r\n    set({\r\n      player: {\r\n        ...state.player,\r\n        ...stats\r\n      }\r\n    });\r\n  },\r\n\r\n  addExperience: (amount: number) => {\r\n    const state = get();\r\n    const newExperience = state.player.experience + amount;\r\n    const oldLevel = calculateLevel(state.player.experience);\r\n    const newLevel = calculateLevel(newExperience);\r\n    \r\n    console.log('addExperience:', {\r\n      amount,\r\n      oldExperience: state.player.experience,\r\n      newExperience,\r\n      oldLevel: oldLevel.level,\r\n      newLevel: newLevel.level,\r\n      playerLevel: state.player.level\r\n    });\r\n    \r\n    // Check if player leveled up\r\n    if (newLevel.level > oldLevel.level) {\r\n      console.log('LEVEL UP!', {\r\n        from: oldLevel.level,\r\n        to: newLevel.level,\r\n        voltsReward: newLevel.voltsReward\r\n      });\r\n      \r\n      // Player leveled up! Give rewards\r\n      const newVolts = state.player.volts + newLevel.voltsReward;\r\n      \r\n      set({\r\n        player: {\r\n          ...state.player,\r\n          experience: newExperience,\r\n          level: newLevel.level,\r\n          volts: newVolts\r\n        }\r\n      });\r\n      \r\n      // Show level up notification\r\n      const { showLevelUpNotification } = get();\r\n      showLevelUpNotification(newLevel, newLevel.voltsReward);\r\n    } else {\r\n      // Just add experience and ensure level is correct\r\n      set({\r\n        player: {\r\n          ...state.player,\r\n          experience: newExperience,\r\n          level: newLevel.level // Всегда обновляем уровень на основе опыта\r\n        }\r\n      });\r\n    }\r\n  },\r\n\r\n  getCurrentLevelInfo: () => {\r\n    const state = get();\r\n    return {\r\n      currentLevel: calculateLevel(state.player.experience),\r\n      progressInfo: getExperienceToNextLevel(state.player.experience)\r\n    };\r\n  },\r\n\r\n  // Корректирует уровень игрока на основе текущего опыта\r\n  fixPlayerLevel: () => {\r\n    const state = get();\r\n    const correctLevel = calculateLevel(state.player.experience);\r\n    \r\n    console.log('fixPlayerLevel:', {\r\n      currentStoredLevel: state.player.level,\r\n      correctLevel: correctLevel.level,\r\n      experience: state.player.experience\r\n    });\r\n    \r\n    if (state.player.level !== correctLevel.level) {\r\n      console.log('Fixing player level from', state.player.level, 'to', correctLevel.level);\r\n      set({\r\n        player: {\r\n          ...state.player,\r\n          level: correctLevel.level\r\n        }\r\n      });\r\n    }\r\n  },\r\n\r\n  showLevelUpNotification: (level, voltsReward) => {\r\n    set({\r\n      levelUpNotification: {\r\n        isVisible: true,\r\n        level,\r\n        voltsReward\r\n      }\r\n    });\r\n  },\r\n\r\n  hideLevelUpNotification: () => {\r\n    set({\r\n      levelUpNotification: {\r\n        isVisible: false,\r\n        level: null,\r\n        voltsReward: 0\r\n      }\r\n    });\r\n  },\r\n\r\n  updateLuckCoefficient: () => {\r\n    const state = get();\r\n    const totalAttempts = state.player.totalClicks;\r\n    const successfulClicks = state.player.successfulClicks;\r\n    \r\n    const newLuckCoefficient = totalAttempts > 0 ? \r\n      Math.round((successfulClicks / totalAttempts) * 100) : 50;\r\n    \r\n    // Проверяем, нужно ли восстанавливать индикатор удачи\r\n    const shouldRestoreLuckIndicator = state.player.luckIndicatorHidden && \r\n                                      Date.now() >= state.player.luckHiddenUntil;\r\n    \r\n    set({\r\n      player: {\r\n        ...state.player,\r\n        luckCoefficient: newLuckCoefficient,\r\n        luckIndicatorHidden: shouldRestoreLuckIndicator ? false : state.player.luckIndicatorHidden\r\n      }\r\n    });\r\n  },\r\n\r\n  // AI Electrician System\r\n  startAIElectrician: () => {\r\n    const state = get();\r\n    if (!state.gameState.isPlaying) {\r\n      console.log('startAIElectrician: Game not playing, aborting');\r\n      return;\r\n    }\r\n\r\n    console.log('startAIElectrician: Starting AI Electrician');\r\n    set({\r\n      singleMode: {\r\n        ...state.singleMode,\r\n        aiElectricianActive: true\r\n      },\r\n      aiElectrician: {\r\n        ...state.aiElectrician,\r\n        isActive: true,\r\n        lastMessage: get().getAIElectricianMessage(),\r\n        messageTime: Date.now()\r\n      }\r\n    });\r\n\r\n    // Запускаем периодическое обновление ИИ электрика (каждые 2 секунды)\r\n    const aiUpdateInterval = setInterval(() => {\r\n      const currentState = get();\r\n      if (!currentState.singleMode.aiElectricianActive || !currentState.gameState.isPlaying) {\r\n        console.log('startAIElectrician: Clearing AI update interval');\r\n        clearInterval(aiUpdateInterval);\r\n        return;\r\n      }\r\n      \r\n      get().updateAIElectrician();\r\n      \r\n      // Обновляем сообщение каждые 5-10 секунд\r\n      if (Math.random() < 0.3) {\r\n        set({\r\n          aiElectrician: {\r\n            ...get().aiElectrician,\r\n            lastMessage: get().getAIElectricianMessage(),\r\n            messageTime: Date.now()\r\n          }\r\n        });\r\n      }\r\n    }, 2000);\r\n\r\n    // Планируем первый разряд\r\n    console.log('startAIElectrician: Scheduling first discharge');\r\n    get().scheduleNextDischarge();\r\n  },\r\n\r\n  stopAIElectrician: () => {\r\n    set(state => ({\r\n      singleMode: {\r\n        ...state.singleMode,\r\n        aiElectricianActive: false,\r\n        nextDischargeTime: 0,\r\n        dischargeWarningTime: 0,\r\n        isDischarging: false\r\n      },\r\n      aiElectrician: {\r\n        ...state.aiElectrician,\r\n        isActive: false,\r\n        lastMessage: 'Смена закончена, иду домой!',\r\n        messageTime: Date.now()\r\n      }\r\n    }));\r\n  },\r\n\r\n  scheduleNextDischarge: () => {\r\n    const state = get();\r\n    console.log('scheduleNextDischarge: Starting, AI active:', state.singleMode.aiElectricianActive);\r\n    if (!state.singleMode.aiElectricianActive) return;\r\n\r\n    const now = Date.now();\r\n    \r\n    // Рассчитываем интервал до следующего разряда на основе сложности и AI паттерна\r\n    const getDischargeInterval = () => {\r\n      const baseInterval = {\r\n        easy: { min: 3000, max: 8000 },     // 3-8 секунд - уменьшено для большей частоты\r\n        medium: { min: 2500, max: 6000 },   // 2.5-6 секунд  \r\n        hard: { min: 2000, max: 4000 },     // 2-4 секунды\r\n        extreme: { min: 1500, max: 3000 }   // 1.5-3 секунды\r\n      }[state.singleMode.difficulty];\r\n\r\n      // Модификация на основе AI паттерна\r\n      let modifier = 1.0;\r\n      if (state.singleMode.aiPattern === 'burst') modifier = 0.7;      // Чаще\r\n      else if (state.singleMode.aiPattern === 'random') modifier = Math.random() * 0.8 + 0.6; // 0.6-1.4\r\n      else if (state.singleMode.aiPattern === 'adaptive') {\r\n        // Адаптируется к успехам игрока\r\n        const luckCoeff = state.player.luckCoefficient;\r\n        modifier = luckCoeff > 70 ? 0.8 : luckCoeff < 30 ? 1.3 : 1.0;\r\n      }\r\n\r\n      const min = baseInterval.min * modifier;\r\n      const max = baseInterval.max * modifier;\r\n      return Math.random() * (max - min) + min;\r\n    };\r\n\r\n    const interval = getDischargeInterval();\r\n    const nextDischargeTime = now + interval;\r\n    const dischargeWarningTime = nextDischargeTime - 3000; // Предупреждение за 3 секунды\r\n\r\n    console.log('scheduleNextDischarge: Scheduled discharge', {\r\n      interval: interval / 1000 + 's',\r\n      nextDischargeTime,\r\n      dischargeWarningTime,\r\n      timeFromNow: (nextDischargeTime - now) / 1000 + 's'\r\n    });\r\n\r\n    set({\r\n      singleMode: {\r\n        ...state.singleMode,\r\n        nextDischargeTime,\r\n        dischargeWarningTime\r\n      }\r\n    });\r\n\r\n    // Планируем следующую проверку\r\n    setTimeout(() => {\r\n      console.log('scheduleNextDischarge: Timer triggered, checking discharge');\r\n      get().checkForDischarge();\r\n    }, interval);\r\n  },\r\n\r\n  checkForDischarge: () => {\r\n    const state = get();\r\n    if (!state.singleMode.aiElectricianActive || !state.gameState.isPlaying) {\r\n      console.log('checkForDischarge: AI inactive or game not playing', { \r\n        aiActive: state.singleMode.aiElectricianActive, \r\n        isPlaying: state.gameState.isPlaying \r\n      });\r\n      return;\r\n    }\r\n\r\n    const now = Date.now();\r\n    console.log('checkForDischarge: Checking discharge timing', {\r\n      now,\r\n      nextDischargeTime: state.singleMode.nextDischargeTime,\r\n      timeUntilDischarge: state.singleMode.nextDischargeTime - now,\r\n      isDischarging: state.singleMode.isDischarging,\r\n      warningSignsActive: state.singleMode.warningSignsActive,\r\n      dischargeWarningTime: state.singleMode.dischargeWarningTime\r\n    });\r\n\r\n    // Проверяем, не пора ли показать предупреждение\r\n    if (!state.singleMode.warningSignsActive && now >= state.singleMode.dischargeWarningTime) {\r\n      console.log('checkForDischarge: Activating warning signs');\r\n      set({\r\n        singleMode: {\r\n          ...state.singleMode,\r\n          warningSignsActive: true,\r\n          dangerLevel: 85 // Высокий уровень опасности\r\n        }\r\n      });\r\n    }\r\n\r\n    // Проверяем, не пора ли начать разряд\r\n    if (now >= state.singleMode.nextDischargeTime && !state.singleMode.isDischarging) {\r\n      console.log('checkForDischarge: STARTING DISCHARGE!');\r\n      // Начинаем разряд\r\n      set({\r\n        singleMode: {\r\n          ...state.singleMode,\r\n          isDischarging: true\r\n        },\r\n        showElectricSparks: true,\r\n        sparksIntensity: 'high'\r\n      });\r\n\r\n      // Увеличиваем счетчик успешных разрядов ИИ электрика\r\n      set({\r\n        aiElectrician: {\r\n          ...state.aiElectrician,\r\n          successfulDischarges: state.aiElectrician.successfulDischarges + 1,\r\n          lastMessage: 'Отличный разряд! Все по плану!',\r\n          messageTime: now\r\n        }\r\n      });\r\n\r\n      // Случайный урон оборудованию от разряда\r\n      if (Math.random() < 0.3) { // 30% шанс урона\r\n        get().damageAIElectrician('equipment', Math.random() * 5 + 2);\r\n      }\r\n\r\n      // Завершаем разряд через dischargeDuration\r\n      setTimeout(() => {\r\n        console.log('checkForDischarge: ENDING DISCHARGE after', state.singleMode.dischargeDuration, 'ms');\r\n        const currentState = get();\r\n        set({\r\n          singleMode: {\r\n            ...currentState.singleMode,\r\n            isDischarging: false,\r\n            warningSignsActive: false,\r\n            dangerLevel: 0\r\n          },\r\n          showElectricSparks: false\r\n        });\r\n\r\n        // Обновляем состояние ИИ электрика\r\n        get().updateAIElectrician();\r\n\r\n        // Планируем следующий разряд только если ИИ может работать\r\n        if (get().aiElectrician.canWork) {\r\n          console.log('checkForDischarge: Scheduling next discharge after ending current one');\r\n          get().scheduleNextDischarge();\r\n        } else {\r\n          // ИИ электрик сломался\r\n          set({\r\n            aiElectrician: {\r\n              ...get().aiElectrician,\r\n              lastMessage: get().getAIElectricianMessage(),\r\n              messageTime: Date.now()\r\n            }\r\n          });\r\n          get().stopAIElectrician();\r\n        }\r\n      }, state.singleMode.dischargeDuration);\r\n    }\r\n  },\r\n\r\n  // AI Electrician management methods\r\n  updateAIElectrician: () => {\r\n    const state = get();\r\n    if (!state.aiElectrician.isActive) return;\r\n\r\n    const ai = state.aiElectrician;\r\n\r\n    // Постепенное снижение энергии во время работы\r\n    const energyDrain = ai.workingEfficiency > 80 ? 0.1 : 0.2;\r\n    const newEnergy = Math.max(0, ai.energy - energyDrain);\r\n\r\n    // Износ оборудования\r\n    const equipmentWear = Math.random() * 0.05; // 0-5% износа\r\n    const newEquipment = {\r\n      battery: Math.max(0, ai.equipment.battery - equipmentWear),\r\n      capacitor: Math.max(0, ai.equipment.capacitor - equipmentWear * 0.5),\r\n      wires: Math.max(0, ai.equipment.wires - equipmentWear * 0.3),\r\n      generator: Math.max(0, ai.equipment.generator - equipmentWear * 0.7)\r\n    };\r\n\r\n    // Расчет эффективности работы\r\n    const avgEquipment = (newEquipment.battery + newEquipment.capacitor + \r\n                          newEquipment.wires + newEquipment.generator) / 4;\r\n    const newEfficiency = Math.min(100, (newEnergy * 0.7) + (avgEquipment * 0.3));\r\n\r\n    // Определение настроения\r\n    let newMood = ai.mood;\r\n    if (newEfficiency < 20) newMood = 'broken';\r\n    else if (newEfficiency < 40) newMood = 'tired';\r\n    else if (ai.failuresCount > ai.successfulDischarges) newMood = 'frustrated';\r\n    else if (newEfficiency > 80) newMood = 'confident';\r\n    else newMood = 'angry';\r\n\r\n    // Может ли работать\r\n    const canWork = newEnergy > 10 && avgEquipment > 15;\r\n\r\n    set({\r\n      aiElectrician: {\r\n        ...ai,\r\n        energy: newEnergy,\r\n        equipment: newEquipment,\r\n        workingEfficiency: newEfficiency,\r\n        mood: newMood,\r\n        canWork\r\n      }\r\n    });\r\n  },\r\n\r\n  damageAIElectrician: (damageType: 'energy' | 'equipment', amount = 10, isPlayerAttack = false) => {\r\n    const state = get();\r\n    const ai = state.aiElectrician;\r\n\r\n    if (damageType === 'energy') {\r\n      const newEnergy = Math.max(0, ai.energy - amount);\r\n      \r\n      let message: string;\r\n      if (isPlayerAttack) {\r\n        // Смешные сообщения когда игрок атакует\r\n        const playerAttackMessages = [\r\n          'Ой! Да ты что, обалдел?! 😱',\r\n          'Эй, это больно! Мы же команда! 😭',\r\n          'Предательство! А я думал мы друзья... 💔',\r\n          'Ауууу! За что меня?! 😵',\r\n          'Ну и зачем ты меня шарахнул?! ⚡',\r\n          'Больно же! Я ведь стараюсь для тебя! 😢',\r\n          'Мама дорогая! Меня ударило током! 🤕',\r\n          'Это что, месть за разряды?! 😤',\r\n          'Ладно-ладно, я понял намек... 😅',\r\n          'Ай-ай-ай! Теперь у меня всё болит! 🤒',\r\n          'Обидно! Я же честно работаю! 😭',\r\n          'Ты серьезно?! Я же электрик, а не мишень! 🎯',\r\n          'Больше так не делай, договорились? 🥺',\r\n          'Кто научил тебя так драться?! 😰',\r\n          'Ну вот, теперь у меня мигрень... 🤕'\r\n        ];\r\n        message = playerAttackMessages[Math.floor(Math.random() * playerAttackMessages.length)];\r\n      } else {\r\n        message = newEnergy <= 0 ? 'Энергия кончилась! Нужен отдых...' : 'Ауч! Меня ударило током!';\r\n      }\r\n      \r\n      set({\r\n        aiElectrician: {\r\n          ...ai,\r\n          energy: newEnergy,\r\n          failuresCount: ai.failuresCount + 1,\r\n          lastMessage: message,\r\n          messageTime: Date.now()\r\n        }\r\n      });\r\n    } else {\r\n      // Повреждение случайного оборудования\r\n      const equipmentTypes = ['battery', 'capacitor', 'wires', 'generator'] as const;\r\n      const randomEquipment = equipmentTypes[Math.floor(Math.random() * equipmentTypes.length)];\r\n      \r\n      const newEquipment = {\r\n        ...ai.equipment,\r\n        [randomEquipment]: Math.max(0, ai.equipment[randomEquipment] - amount)\r\n      };\r\n\r\n      let message: string;\r\n      if (isPlayerAttack) {\r\n        // Смешные сообщения о поломке оборудования от игрока\r\n        const equipmentDamageMessages = [\r\n          `Ты сломал мой ${randomEquipment === 'battery' ? 'аккумулятор' : \r\n                          randomEquipment === 'capacitor' ? 'конденсатор' :\r\n                          randomEquipment === 'wires' ? 'провода' : 'генератор'}! Теперь что делать?! 😱`,\r\n          `Поломка! Мой ${randomEquipment === 'battery' ? 'аккумулятор' : \r\n                          randomEquipment === 'capacitor' ? 'конденсатор' :\r\n                          randomEquipment === 'wires' ? 'провода' : 'генератор'} дымится! 💨`,\r\n          `О нет! Без ${randomEquipment === 'battery' ? 'аккумулятора' : \r\n                        randomEquipment === 'capacitor' ? 'конденсатора' :\r\n                        randomEquipment === 'wires' ? 'проводов' : 'генератора'} я не смогу работать! 😭`,\r\n          `Ты же понимаешь, что ${randomEquipment === 'battery' ? 'аккумулятор' : \r\n                                  randomEquipment === 'capacitor' ? 'конденсатор' :\r\n                                  randomEquipment === 'wires' ? 'провода' : 'генератор'} стоит денег?! 💸`,\r\n          'Вот это ты меня достал! Теперь ремонтировать придется... 🔧'\r\n        ];\r\n        message = equipmentDamageMessages[Math.floor(Math.random() * equipmentDamageMessages.length)];\r\n      } else {\r\n        message = `Сломался ${randomEquipment === 'battery' ? 'аккумулятор' : \r\n                               randomEquipment === 'capacitor' ? 'конденсатор' :\r\n                               randomEquipment === 'wires' ? 'провода' : 'генератор'}!`;\r\n      }\r\n\r\n      set({\r\n        aiElectrician: {\r\n          ...ai,\r\n          equipment: newEquipment,\r\n          failuresCount: ai.failuresCount + 1,\r\n          lastMessage: message,\r\n          messageTime: Date.now()\r\n        }\r\n      });\r\n    }\r\n\r\n    // Обновляем состояние\r\n    get().updateAIElectrician();\r\n  },\r\n\r\n  repairAIElectrician: (repairType: 'energy' | 'equipment') => {\r\n    const state = get();\r\n    const ai = state.aiElectrician;\r\n\r\n    if (repairType === 'energy') {\r\n      const newEnergy = Math.min(ai.maxEnergy, ai.energy + 25);\r\n      const repairMessages = [\r\n        'Спасибо! Чувствую прилив сил!',\r\n        'Отлично! Теперь я могу работать дольше!',\r\n        'Энергия восстановлена! Готов к работе!',\r\n        'Вау! Как будто заново родился!'\r\n      ];\r\n      set({\r\n        aiElectrician: {\r\n          ...ai,\r\n          energy: newEnergy,\r\n          lastMessage: repairMessages[Math.floor(Math.random() * repairMessages.length)],\r\n          messageTime: Date.now()\r\n        }\r\n      });\r\n    } else {\r\n      // Восстанавливаем все оборудование на 20%\r\n      const newEquipment = {\r\n        battery: Math.min(100, ai.equipment.battery + 20),\r\n        capacitor: Math.min(100, ai.equipment.capacitor + 20),\r\n        wires: Math.min(100, ai.equipment.wires + 20),\r\n        generator: Math.min(100, ai.equipment.generator + 20)\r\n      };\r\n\r\n      const repairMessages = [\r\n        'Отремонтировал оборудование, теперь работает лучше!',\r\n        'Техника как новая! Спасибо за помощь!',\r\n        'Все детали заменены, можно продолжать!',\r\n        'Оборудование восстановлено! Теперь все будет работать!'\r\n      ];\r\n\r\n      set({\r\n        aiElectrician: {\r\n          ...ai,\r\n          equipment: newEquipment,\r\n          lastMessage: repairMessages[Math.floor(Math.random() * repairMessages.length)],\r\n          messageTime: Date.now()\r\n        }\r\n      });\r\n    }\r\n\r\n    get().updateAIElectrician();\r\n  },\r\n\r\n  getAIElectricianMessage: () => {\r\n    const state = get();\r\n    const ai = state.aiElectrician;\r\n\r\n    const messages = {\r\n      confident: [\r\n        'Я лучший электрик в городе!',\r\n        'Эта работа мне по плечу!',\r\n        'Никто не справится лучше меня!',\r\n        'У меня золотые руки!',\r\n        'Электричество - моя стихия!',\r\n        'Я знаю все о токе и напряжении!',\r\n        'Розетки трепещут от моего мастерства!'\r\n      ],\r\n      frustrated: [\r\n        'Что-то сегодня не мой день...',\r\n        'Техника подводит, как всегда...',\r\n        'Может быть, стоит сменить профессию?',\r\n        'Опять что-то пошло не так!',\r\n        'Почему ничего не работает как надо?',\r\n        'Кто вообще проектировал эту схему?!',\r\n        'Каждый день одни проблемы...'\r\n      ],\r\n      tired: [\r\n        'Устал я уже...',\r\n        'Нужен перерыв на кофе',\r\n        'Сил больше нет работать',\r\n        'Хочется домой...',\r\n        'Рабочий день слишком длинный',\r\n        'Глаза уже слипаются',\r\n        'Может, хватит на сегодня?'\r\n      ],\r\n      broken: [\r\n        'Все сломалось! Ничего не работает!',\r\n        'Это конец! Я больше не могу!',\r\n        'Вызывайте другого электрика...',\r\n        'Техника в хлам, а я без сил!',\r\n        'Аварийное отключение! Все пропало!',\r\n        'Системный сбой! Помогите!',\r\n        'Я сломался как старая лампочка!'\r\n      ],\r\n      angry: [\r\n        'Да что ж такое?! Опять сбой!',\r\n        'Кто проектировал эту схему?!',\r\n        'Руки бы поотрывать создателям!',\r\n        'Нервы уже на пределе!',\r\n        'Сколько можно терпеть эту ерунду?!',\r\n        'Где мой молоток?! Сейчас все исправлю!',\r\n        'Противная техника! Ненавижу!',\r\n        'Лучше бы пошел в программисты!'\r\n      ]\r\n    };\r\n\r\n    const moodMessages = messages[ai.mood] || messages.confident;\r\n    return moodMessages[Math.floor(Math.random() * moodMessages.length)];\r\n  },\r\n\r\n  // API integration methods\r\n  submitGameToServer: async () => {\r\n    const state = get();\r\n    \r\n    // Проверяем, аутентифицирован ли пользователь\r\n    if (!apiClient.isAuthenticated()) {\r\n      console.warn('User not authenticated, skipping server submission');\r\n      return { success: false, error: 'Not authenticated' };\r\n    }\r\n\r\n    try {\r\n      // Подготавливаем данные для отправки\r\n      const gameData = {\r\n        score: state.gameState.score,\r\n        level: getDifficultyLevel(state.singleMode.difficulty),\r\n        timePlayed: Math.floor(state.gameState.gameTime / 1000), // в секундах\r\n      };\r\n\r\n      console.log('Submitting game data to server:', gameData);\r\n\r\n      const response = await apiClient.submitScore(gameData);\r\n\r\n      if (response.error) {\r\n        console.error('Failed to submit score:', response.error);\r\n        return { success: false, error: response.error };\r\n      }\r\n\r\n      if (response.data) {\r\n        // Обновляем локальное состояние данными с сервера\r\n        const serverData = response.data;\r\n        \r\n        set({\r\n          player: {\r\n            ...state.player,\r\n            volts: serverData.totalVolts,\r\n            experience: serverData.totalExperience,\r\n            level: serverData.newLevel\r\n          }\r\n        });\r\n\r\n        // Показываем уведомление о повышении уровня, если было\r\n        if (serverData.leveledUp) {\r\n          const { showLevelUpNotification } = get();\r\n          showLevelUpNotification(\r\n            { level: serverData.newLevel }, \r\n            serverData.levelUpReward\r\n          );\r\n        }\r\n\r\n        console.log('Successfully submitted score and synced with server');\r\n        return { success: true };\r\n      }\r\n\r\n      return { success: true };\r\n    } catch (error) {\r\n      const errorMessage = error instanceof Error ? error.message : 'Unknown error';\r\n      console.error('Error submitting game to server:', errorMessage);\r\n      return { success: false, error: errorMessage };\r\n    }\r\n  },\r\n\r\n  syncWithServer: async () => {\r\n    if (!apiClient.isAuthenticated()) {\r\n      return { success: false, error: 'Not authenticated' };\r\n    }\r\n\r\n    try {\r\n      const response = await apiClient.getUserStats();\r\n\r\n      if (response.error) {\r\n        return { success: false, error: response.error };\r\n      }\r\n\r\n      if (response.data) {\r\n        const serverData = response.data;\r\n        \r\n        // Обновляем локальное состояние данными с сервера\r\n        set({\r\n          player: {\r\n            ...get().player,\r\n            volts: serverData.totalVolts,\r\n            experience: serverData.totalExperience,\r\n            level: serverData.level\r\n          }\r\n        });\r\n\r\n        console.log('Successfully synced with server');\r\n        return { success: true };\r\n      }\r\n\r\n      return { success: true };\r\n    } catch (error) {\r\n      const errorMessage = error instanceof Error ? error.message : 'Unknown error';\r\n      console.error('Error syncing with server:', errorMessage);\r\n      return { success: false, error: errorMessage };\r\n    }\r\n  },\r\n\r\n  loadStatsFromServer: async () => {\r\n    if (!apiClient.isAuthenticated()) {\r\n      return { success: false, error: 'Not authenticated' };\r\n    }\r\n\r\n    try {\r\n      const response = await apiClient.getUserStats();\r\n\r\n      if (response.error) {\r\n        return { success: false, error: response.error };\r\n      }\r\n\r\n      if (response.data) {\r\n        const serverData = response.data;\r\n        \r\n        // Полностью загружаем статистику с сервера\r\n        set({\r\n          player: {\r\n            ...get().player,\r\n            volts: serverData.totalVolts,\r\n            experience: serverData.totalExperience,\r\n            level: serverData.level\r\n          }\r\n        });\r\n\r\n        console.log('Successfully loaded stats from server');\r\n        return { success: true };\r\n      }\r\n\r\n      return { success: true };\r\n    } catch (error) {\r\n      const errorMessage = error instanceof Error ? error.message : 'Unknown error';\r\n      console.error('Error loading stats from server:', errorMessage);\r\n      return { success: false, error: errorMessage };\r\n    }\r\n  }\r\n}));\r\n\r\n// Вспомогательная функция для преобразования сложности в числовой уровень\r\nfunction getDifficultyLevel(difficulty: SingleModeState['difficulty']): number {\r\n  switch (difficulty) {\r\n    case 'easy': return 1;\r\n    case 'medium': return 2;\r\n    case 'hard': return 3;\r\n    case 'extreme': return 4;\r\n    default: return 1;\r\n  }\r\n}\r\n","/**\r\n * Haptic Manager - управление вибрацией в Telegram Mini App\r\n * Поддерживает различные типы вибрации для игровых событий\r\n */\r\n\r\nimport type { TelegramHapticFeedback } from '../types/telegram';\r\n\r\n// Типы вибрации Telegram Web App\r\nexport type HapticType = 'light' | 'medium' | 'heavy' | 'rigid' | 'soft';\r\nexport type NotificationType = 'error' | 'success' | 'warning';\r\n\r\n// Расширяем Window интерфейс для Telegram\r\ndeclare global {\r\n  interface Window {\r\n    Telegram?: {\r\n      WebApp?: {\r\n        HapticFeedback?: TelegramHapticFeedback;\r\n        [key: string]: any;\r\n      };\r\n    };\r\n  }\r\n}\r\n\r\nclass HapticManager {\r\n  private hapticFeedback: TelegramHapticFeedback | null = null;\r\n  private isEnabled: boolean = true;\r\n  private isTelegramEnvironment: boolean = false;\r\n\r\n  constructor() {\r\n    this.initializeTelegramHaptics();\r\n  }\r\n\r\n  /**\r\n   * Инициализация Telegram Haptic API\r\n   */\r\n  private initializeTelegramHaptics(): void {\r\n    try {\r\n      // Проверяем, работаем ли мы в Telegram\r\n      if (typeof window !== 'undefined' && window.Telegram?.WebApp) {\r\n        this.isTelegramEnvironment = true;\r\n        // Проверяем наличие HapticFeedback в объекте WebApp\r\n        const webApp = window.Telegram.WebApp as any;\r\n        if (webApp.HapticFeedback) {\r\n          this.hapticFeedback = webApp.HapticFeedback;\r\n          console.log('Telegram Haptic Feedback initialized');\r\n        } else {\r\n          console.log('HapticFeedback not available in this Telegram version');\r\n        }\r\n      } else {\r\n        console.log('Not in Telegram environment, haptics disabled');\r\n      }\r\n    } catch (error) {\r\n      console.warn('Failed to initialize Telegram haptics:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Включение/выключение вибрации\r\n   */\r\n  setEnabled(enabled: boolean): void {\r\n    this.isEnabled = enabled;\r\n  }\r\n\r\n  /**\r\n   * Проверка доступности вибрации\r\n   */\r\n  isAvailable(): boolean {\r\n    return (\r\n      (this.isTelegramEnvironment && this.hapticFeedback !== null) || \r\n      (typeof window !== 'undefined' && 'navigator' in window && 'vibrate' in navigator)\r\n    ) && this.isEnabled;\r\n  }\r\n\r\n  /**\r\n   * Базовая вибрация для нажатий\r\n   */\r\n  light(): void {\r\n    if (this.isAvailable()) {\r\n      this.hapticFeedback!.impactOccurred('light');\r\n    } else {\r\n      this.fallbackVibration(50);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Средняя вибрация для важных действий\r\n   */\r\n  medium(): void {\r\n    if (this.isAvailable()) {\r\n      this.hapticFeedback!.impactOccurred('medium');\r\n    } else {\r\n      this.fallbackVibration(100);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Сильная вибрация для критических событий\r\n   */\r\n  heavy(): void {\r\n    if (this.isAvailable()) {\r\n      this.hapticFeedback!.impactOccurred('heavy');\r\n    } else {\r\n      this.fallbackVibration(150);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Мягкая вибрация для деликатных действий\r\n   */\r\n  soft(): void {\r\n    if (this.isAvailable()) {\r\n      this.hapticFeedback!.impactOccurred('soft');\r\n    } else {\r\n      this.fallbackVibration(30);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Жесткая вибрация для резких действий\r\n   */\r\n  rigid(): void {\r\n    if (this.isAvailable()) {\r\n      this.hapticFeedback!.impactOccurred('rigid');\r\n    } else {\r\n      this.fallbackVibration(200);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Вибрация для уведомлений\r\n   */\r\n  success(): void {\r\n    if (this.isAvailable()) {\r\n      this.hapticFeedback!.notificationOccurred('success');\r\n    } else {\r\n      this.customPattern([100, 50, 100]);\r\n    }\r\n  }\r\n\r\n  error(): void {\r\n    if (this.isAvailable()) {\r\n      this.hapticFeedback!.notificationOccurred('error');\r\n    } else {\r\n      this.customPattern([200, 100, 200, 100, 200]);\r\n    }\r\n  }\r\n\r\n  warning(): void {\r\n    if (this.isAvailable()) {\r\n      this.hapticFeedback!.notificationOccurred('warning');\r\n    } else {\r\n      this.customPattern([150, 50, 150]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Вибрация при изменении выбора\r\n   */\r\n  selection(): void {\r\n    if (this.isAvailable()) {\r\n      this.hapticFeedback!.selectionChanged();\r\n    } else {\r\n      this.fallbackVibration(25);\r\n    }\r\n  }\r\n\r\n  // ==================== ИГРОВЫЕ СОБЫТИЯ ====================\r\n\r\n  /**\r\n   * Вибрация при нажатии на розетку\r\n   */\r\n  outletPress(): void {\r\n    this.medium();\r\n  }\r\n\r\n  /**\r\n   * Вибрация при успешном выживании\r\n   */\r\n  survivalSuccess(): void {\r\n    this.success();\r\n  }\r\n\r\n  /**\r\n   * Интенсивная вибрация при поражении током\r\n   * Точная вибрация только в момент удара током\r\n   */\r\n  electricShock(): void {\r\n    if (!this.isEnabled) return;\r\n\r\n    // Сильный импульс точно в момент удара\r\n    this.rigid();\r\n    \r\n    // Один дополнительный короткий импульс для усиления эффекта\r\n    setTimeout(() => {\r\n      if (this.isEnabled) this.heavy();\r\n    }, 50);\r\n  }\r\n\r\n  /**\r\n   * Короткая предупреждающая вибрация перед разрядом\r\n   */\r\n  electricWarning(): void {\r\n    if (!this.isEnabled) return;\r\n    \r\n    // Две быстрые слабые вибрации\r\n    this.light();\r\n    setTimeout(() => {\r\n      if (this.isEnabled) this.light();\r\n    }, 100);\r\n  }\r\n\r\n  /**\r\n   * Вибрация при повышении уровня\r\n   */\r\n  levelUp(): void {\r\n    // Серия из 3-х вибраций\r\n    this.success();\r\n    setTimeout(() => this.medium(), 150);\r\n    setTimeout(() => this.success(), 300);\r\n  }\r\n\r\n  /**\r\n   * Предупреждающая вибрация когда опасность высока\r\n   */\r\n  dangerWarning(): void {\r\n    if (!this.isEnabled) return;\r\n    \r\n    // Две быстрые слабые вибрации как предупреждение\r\n    this.light();\r\n    setTimeout(() => {\r\n      if (this.isEnabled) this.light();\r\n    }, 100);\r\n  }\r\n\r\n  /**\r\n   * Интенсивное предупреждение перед высоким риском разряда\r\n   */\r\n  extremeDangerWarning(): void {\r\n    if (!this.isEnabled) return;\r\n    \r\n    // Серия из трех нарастающих вибраций\r\n    this.light();\r\n    setTimeout(() => {\r\n      if (this.isEnabled) this.medium();\r\n    }, 150);\r\n    setTimeout(() => {\r\n      if (this.isEnabled) this.heavy();\r\n    }, 300);\r\n  }\r\n\r\n  /**\r\n   * Вибрация при получении награды\r\n   */\r\n  rewardReceived(): void {\r\n    this.light();\r\n    setTimeout(() => this.medium(), 100);\r\n  }\r\n\r\n  /**\r\n   * Вибрация для серийных достижений\r\n   */\r\n  streakAchievement(streakCount: number): void {\r\n    if (streakCount >= 25) {\r\n      // Мощная вибрация для больших серий\r\n      this.heavy();\r\n      setTimeout(() => this.heavy(), 200);\r\n      setTimeout(() => this.heavy(), 400);\r\n    } else if (streakCount >= 10) {\r\n      // Средняя вибрация для средних серий\r\n      this.medium();\r\n      setTimeout(() => this.medium(), 150);\r\n    } else if (streakCount >= 5) {\r\n      // Легкая вибрация для небольших серий\r\n      this.light();\r\n      setTimeout(() => this.light(), 100);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Вибрация при использовании предмета\r\n   */\r\n  itemUsed(): void {\r\n    this.soft();\r\n  }\r\n\r\n  /**\r\n   * Вибрация при покупке в магазине\r\n   */\r\n  shopPurchase(): void {\r\n    this.medium();\r\n    setTimeout(() => this.light(), 100);\r\n  }\r\n\r\n  /**\r\n   * Вибрация при входящем вызове в игру\r\n   */\r\n  gameInvitation(): void {\r\n    this.warning();\r\n    setTimeout(() => this.light(), 500);\r\n    setTimeout(() => this.light(), 1000);\r\n  }\r\n\r\n  /**\r\n   * Вибрация при начале раунда\r\n   */\r\n  roundStart(): void {\r\n    this.light();\r\n  }\r\n\r\n  /**\r\n   * Вибрация при окончании игры\r\n   */\r\n  gameEnd(isWinner: boolean): void {\r\n    if (isWinner) {\r\n      this.success();\r\n      setTimeout(() => this.medium(), 200);\r\n      setTimeout(() => this.success(), 400);\r\n    } else {\r\n      this.error();\r\n    }\r\n  }\r\n\r\n  // ==================== ВСПОМОГАТЕЛЬНЫЕ МЕТОДЫ ====================\r\n\r\n  /**\r\n   * Резервная вибрация для браузеров без Telegram API\r\n   */\r\n  private fallbackVibration(duration: number): void {\r\n    if ('navigator' in window && 'vibrate' in navigator) {\r\n      try {\r\n        navigator.vibrate(duration);\r\n        console.log(`🔹 Fallback vibration: ${duration}ms`);\r\n      } catch (error) {\r\n        console.warn('Vibration not supported:', error);\r\n      }\r\n    } else {\r\n      // Визуальная обратная связь для устройств без вибрации\r\n      console.log(`📳 Haptic feedback: ${duration}ms (visual only)`);\r\n      this.visualFeedback(duration);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Визуальная обратная связь для устройств без вибрации\r\n   */\r\n  private visualFeedback(duration: number): void {\r\n    // Создаем временную визуальную индикацию\r\n    const indicator = document.createElement('div');\r\n    indicator.style.cssText = `\r\n      position: fixed;\r\n      top: 20px;\r\n      right: 20px;\r\n      background: #FF6B35;\r\n      color: white;\r\n      padding: 8px 12px;\r\n      border-radius: 20px;\r\n      font-size: 12px;\r\n      font-weight: bold;\r\n      z-index: 10000;\r\n      pointer-events: none;\r\n      animation: pulse 0.3s ease-in-out;\r\n    `;\r\n    indicator.textContent = `📳 ${duration}ms`;\r\n    \r\n    // Добавляем CSS анимацию\r\n    if (!document.querySelector('#haptic-style')) {\r\n      const style = document.createElement('style');\r\n      style.id = 'haptic-style';\r\n      style.textContent = `\r\n        @keyframes pulse {\r\n          0% { transform: scale(0.8); opacity: 0; }\r\n          50% { transform: scale(1.1); opacity: 1; }\r\n          100% { transform: scale(1); opacity: 0.8; }\r\n        }\r\n      `;\r\n      document.head.appendChild(style);\r\n    }\r\n    \r\n    document.body.appendChild(indicator);\r\n    \r\n    setTimeout(() => {\r\n      if (indicator.parentNode) {\r\n        indicator.parentNode.removeChild(indicator);\r\n      }\r\n    }, Math.max(duration, 500));\r\n  }\r\n\r\n  /**\r\n   * Кастомный паттерн вибрации\r\n   */\r\n  private customPattern(pattern: number[]): void {\r\n    if ('navigator' in window && 'vibrate' in navigator) {\r\n      try {\r\n        navigator.vibrate(pattern);\r\n        console.log(`🔹 Vibration pattern: [${pattern.join(', ')}]ms`);\r\n      } catch (error) {\r\n        console.warn('Vibration pattern not supported:', error);\r\n      }\r\n    } else {\r\n      // Эмуляция паттерна через визуальную обратную связь\r\n      console.log(`📳 Haptic pattern: [${pattern.join(', ')}]ms (visual only)`);\r\n      this.visualPatternFeedback(pattern);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Визуальная эмуляция паттерна вибрации\r\n   */\r\n  private visualPatternFeedback(pattern: number[]): void {\r\n    let delay = 0;\r\n    for (let i = 0; i < pattern.length; i += 2) {\r\n      const vibrateDuration = pattern[i];\r\n      const pauseDuration = pattern[i + 1] || 0;\r\n      \r\n      setTimeout(() => {\r\n        this.visualFeedback(vibrateDuration);\r\n      }, delay);\r\n      \r\n      delay += vibrateDuration + pauseDuration;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Тестовая вибрация для настроек\r\n   */\r\n  test(): void {\r\n    this.medium();\r\n    setTimeout(() => this.light(), 200);\r\n    setTimeout(() => this.heavy(), 400);\r\n  }\r\n}\r\n\r\n// Глобальный экземпляр менеджера вибрации\r\nexport const hapticManager = new HapticManager();\r\n\r\nexport default hapticManager;\r\n","import React from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { useGameStore } from '../store/gameStore';\r\n\r\ninterface ScoreBreakdownProps {\r\n  onClose: () => void;\r\n}\r\n\r\nexport const ScoreBreakdown: React.FC<ScoreBreakdownProps> = ({ onClose }) => {\r\n  const { player, singleMode, gameState } = useGameStore();\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      exit={{ opacity: 0 }}\r\n      className=\"fixed inset-0 bg-black/80 flex items-center justify-center p-4 z-50\"\r\n      onClick={onClose}\r\n    >\r\n      <motion.div\r\n        initial={{ opacity: 0, y: 20, scale: 0.9 }}\r\n        animate={{ opacity: 1, y: 0, scale: 1 }}\r\n        exit={{ opacity: 0, y: 20, scale: 0.9 }}\r\n        className=\"glass-effect p-6 max-w-2xl mx-auto relative max-h-[90vh] overflow-y-auto\"\r\n        onClick={(e) => e.stopPropagation()}\r\n      >\r\n        {/* Close Button */}\r\n        <button\r\n          onClick={onClose}\r\n          className=\"absolute top-4 right-4 text-gray-400 hover:text-white transition-colors text-2xl\"\r\n        >\r\n          ✕\r\n        </button>\r\n\r\n        <h3 className=\"text-2xl font-bold text-center mb-6 text-primary-orange\">\r\n          📊 Система очков и уровней\r\n        </h3>\r\n\r\n        {/* Current Stats */}\r\n        <div className=\"grid grid-cols-2 gap-4 mb-6\">\r\n          <div className=\"text-center glass-effect p-3 rounded-lg\">\r\n            <div className=\"text-xs text-gray-400\">ТЕКУЩАЯ СЕРИЯ</div>\r\n            <div className=\"text-xl font-bold text-yellow-400\">\r\n              {singleMode.streakCount}\r\n            </div>\r\n          </div>\r\n          <div className=\"text-center glass-effect p-3 rounded-lg\">\r\n            <div className=\"text-xs text-gray-400\">КОЭФФИЦИЕНТ УДАЧИ</div>\r\n            <div className={`text-xl font-bold ${\r\n              player.luckCoefficient >= 70 ? 'text-green-400' :\r\n              player.luckCoefficient >= 50 ? 'text-yellow-400' :\r\n              player.luckCoefficient >= 30 ? 'text-orange-400' :\r\n              'text-red-400'\r\n            }`}>\r\n              {player.luckCoefficient}%\r\n            </div>\r\n          </div>\r\n          <div className=\"text-center glass-effect p-3 rounded-lg\">\r\n            <div className=\"text-xs text-gray-400\">ТЕКУЩИЙ СЧЕТ</div>\r\n            <div className=\"text-xl font-bold text-green-400\">\r\n              {gameState.score}⚡\r\n            </div>\r\n          </div>\r\n          <div className=\"text-center glass-effect p-3 rounded-lg\">\r\n            <div className=\"text-xs text-gray-400\">ВСЕГО ВОЛЬТ</div>\r\n            <div className=\"text-xl font-bold text-blue-400\">\r\n              {player.volts}⚡\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Luck Statistics */}\r\n        <div className=\"mb-6\">\r\n          <h4 className=\"text-lg font-bold text-accent-blue mb-3\">🍀 Статистика удачи</h4>\r\n          <div className=\"grid grid-cols-3 gap-3\">\r\n            <div className=\"glass-effect p-3 rounded-lg text-center\">\r\n              <div className=\"text-xs text-gray-400\">УСПЕШНЫХ</div>\r\n              <div className=\"text-lg font-bold text-green-400\">{player.successfulClicks}</div>\r\n            </div>\r\n            <div className=\"glass-effect p-3 rounded-lg text-center\">\r\n              <div className=\"text-xs text-gray-400\">УДАРОВ ТОКОМ</div>\r\n              <div className=\"text-lg font-bold text-red-400\">{player.shockedClicks}</div>\r\n            </div>\r\n            <div className=\"glass-effect p-3 rounded-lg text-center\">\r\n              <div className=\"text-xs text-gray-400\">ВСЕГО КЛИКОВ</div>\r\n              <div className=\"text-lg font-bold text-blue-400\">{player.totalClicks}</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"mt-3 text-center\">\r\n            <div className=\"text-sm text-gray-300\">\r\n              💡 Удача рассчитывается как процент успешных нажатий\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Scoring Rules */}\r\n        <div className=\"space-y-6\">\r\n          {/* Experience System */}\r\n          <div>\r\n            <h4 className=\"text-lg font-bold text-accent-blue mb-3\">📈 Система опыта и уровней</h4>\r\n            <div className=\"grid grid-cols-2 gap-3\">\r\n              <div className=\"glass-effect p-3 rounded-lg\">\r\n                <div className=\"text-green-400 font-bold\">🟢 Безопасное нажатие:</div>\r\n                <div className=\"text-sm text-gray-300\">+10 опыта</div>\r\n              </div>\r\n              <div className=\"glass-effect p-3 rounded-lg\">\r\n                <div className=\"text-yellow-400 font-bold\">🟡 Рискованное (2x+):</div>\r\n                <div className=\"text-sm text-gray-300\">+15 опыта</div>\r\n              </div>\r\n              <div className=\"glass-effect p-3 rounded-lg\">\r\n                <div className=\"text-red-400 font-bold\">🔴 Экстремальное (3x+):</div>\r\n                <div className=\"text-sm text-gray-300\">+25 опыта</div>\r\n              </div>\r\n              <div className=\"glass-effect p-3 rounded-lg\">\r\n                <div className=\"text-orange-400 font-bold\">💥 Поражение током:</div>\r\n                <div className=\"text-sm text-gray-300\">+5 опыта</div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"mt-3 text-center\">\r\n              <div className=\"text-sm text-yellow-400 font-semibold\">\r\n                🏆 За повышение уровня вы получаете бонусные вольты!\r\n              </div>\r\n              <div className=\"text-xs text-gray-400 mt-1\">\r\n                Уровень 2: +50⚡ • Уровень 5: +150⚡ • Уровень 10: +500⚡\r\n              </div>\r\n              <div className=\"text-xs text-blue-300 mt-2\">\r\n                🎨 Изображение розетки меняется каждые 5 уровней!\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Basic Points Table */}\r\n          <div>\r\n            <h4 className=\"text-lg font-bold text-accent-blue mb-3\">⚡ Базовые очки за нажатие</h4>\r\n            <div className=\"grid grid-cols-2 gap-3\">\r\n              <div className=\"glass-effect p-3 rounded-lg\">\r\n                <div className=\"text-green-400 font-bold\">🟢 Безопасное нажатие:</div>\r\n                <div className=\"text-sm text-gray-300\">+10⚡ (базовые очки)</div>\r\n              </div>\r\n              <div className=\"glass-effect p-3 rounded-lg\">\r\n                <div className=\"text-red-400 font-bold\">💥 Поражение током:</div>\r\n                <div className=\"text-sm text-gray-300\">-8⚡ до -25⚡ (случайно)</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Risk Multipliers */}\r\n          <div>\r\n            <h4 className=\"text-lg font-bold text-accent-blue mb-3\">🎯 Множители за риск</h4>\r\n            <div className=\"grid grid-cols-2 gap-3\">\r\n              <div className=\"glass-effect p-3 rounded-lg\">\r\n                <div className=\"text-green-400 font-bold\">🟢 Лёгкий (15% риск):</div>\r\n                <div className=\"text-sm text-gray-300\">×1.0 (базовые очки)</div>\r\n              </div>\r\n              <div className=\"glass-effect p-3 rounded-lg\">\r\n                <div className=\"text-yellow-400 font-bold\">🟡 Средний (25% риск):</div>\r\n                <div className=\"text-sm text-gray-300\">×1.5 множитель</div>\r\n              </div>\r\n              <div className=\"glass-effect p-3 rounded-lg\">\r\n                <div className=\"text-orange-400 font-bold\">🟠 Сложный (35% риск):</div>\r\n                <div className=\"text-sm text-gray-300\">×2.0 множитель</div>\r\n              </div>\r\n              <div className=\"glass-effect p-3 rounded-lg\">\r\n                <div className=\"text-red-400 font-bold\">🔴 Экстрим (50% риск):</div>\r\n                <div className=\"text-sm text-gray-300\">×3.0 множитель</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Streak Bonuses */}\r\n          <div>\r\n            <h4 className=\"text-lg font-bold text-accent-blue mb-3\">🔥 Бонусы за серии</h4>\r\n            <div className=\"grid grid-cols-2 gap-3\">\r\n              <div className=\"glass-effect p-3 rounded-lg\">\r\n                <div className=\"text-gray-400 font-bold\">0-4 нажатий:</div>\r\n                <div className=\"text-sm text-gray-300\">×1.0 (без бонуса)</div>\r\n              </div>\r\n              <div className=\"glass-effect p-3 rounded-lg\">\r\n                <div className=\"text-yellow-400 font-bold\">5+ нажатий:</div>\r\n                <div className=\"text-sm text-gray-300\">×1.2 бонус</div>\r\n              </div>\r\n              <div className=\"glass-effect p-3 rounded-lg\">\r\n                <div className=\"text-orange-400 font-bold\">10+ нажатий:</div>\r\n                <div className=\"text-sm text-gray-300\">×1.5 бонус</div>\r\n              </div>\r\n              <div className=\"glass-effect p-3 rounded-lg\">\r\n                <div className=\"text-red-400 font-bold\">25+ нажатий:</div>\r\n                <div className=\"text-sm text-gray-300\">×2.0 бонус</div>\r\n              </div>\r\n              <div className=\"glass-effect p-3 rounded-lg\">\r\n                <div className=\"text-purple-400 font-bold\">50+ нажатий:</div>\r\n                <div className=\"text-sm text-gray-300\">×3.0 бонус</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Formula */}\r\n          <div>\r\n            <h4 className=\"text-lg font-bold text-accent-blue mb-3\">🧮 Формула расчёта</h4>\r\n            <div className=\"glass-effect p-4 rounded-lg bg-gradient-to-r from-blue-500/10 to-purple-500/10\">\r\n              <div className=\"text-center text-lg font-mono\">\r\n                <span className=\"text-white\">Итоговые очки</span> = \r\n                <span className=\"text-green-400\"> 10⚡</span> × \r\n                <span className=\"text-orange-400\"> Риск</span> × \r\n                <span className=\"text-yellow-400\"> Серия</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Examples */}\r\n          <div>\r\n            <h4 className=\"text-lg font-bold text-accent-blue mb-3\">💡 Примеры расчётов</h4>\r\n            <div className=\"space-y-3\">\r\n              <div className=\"bg-black/30 p-3 rounded-lg\">\r\n                <div className=\"text-green-400 font-bold\">🟢 Безопасная игра:</div>\r\n                <div className=\"text-sm text-gray-300\">\r\n                  10⚡ × 1.0 (низкий риск) × 1.2 (5+ серия) = <span className=\"text-white font-bold\">12⚡</span>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"bg-black/30 p-3 rounded-lg\">\r\n                <div className=\"text-orange-400 font-bold\">🟠 Рискованная игра:</div>\r\n                <div className=\"text-sm text-gray-300\">\r\n                  10⚡ × 2.0 (высокий риск) × 1.5 (10+ серия) = <span className=\"text-white font-bold\">30⚡</span>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"bg-black/30 p-3 rounded-lg\">\r\n                <div className=\"text-red-400 font-bold\">🔴 Экстремальная игра:</div>\r\n                <div className=\"text-sm text-gray-300\">\r\n                  10⚡ × 3.0 (экстрим риск) × 2.0 (25+ серия) = <span className=\"text-white font-bold\">60⚡</span>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"bg-black/30 p-3 rounded-lg\">\r\n                <div className=\"text-red-400 font-bold\">💥 Поражение током:</div>\r\n                <div className=\"text-sm text-gray-300\">\r\n                  Случайно от 8⚡ до 25⚡ + <span className=\"text-red-400\">серия сбрасывается</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mt-6 text-center text-xs text-gray-400\">\r\n          💡 Совет: Балансируйте между риском и безопасностью для максимального заработка!\r\n        </div>\r\n      </motion.div>\r\n    </motion.div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { useGameStore } from '../store/gameStore';\r\nimport { getLevelProgress, getOutletImageByLevel } from '../utils/levelSystem';\r\n\r\nexport const LevelDisplay: React.FC = () => {\r\n  const { player, getCurrentLevelInfo } = useGameStore();\r\n  const { currentLevel, progressInfo } = getCurrentLevelInfo();\r\n  const progressPercent = getLevelProgress(player.experience);\r\n  \r\n  // Check if outlet image will change at next level\r\n  const currentOutletImage = getOutletImageByLevel(currentLevel.level);\r\n  const nextOutletImage = progressInfo.nextLevel ? getOutletImageByLevel(progressInfo.nextLevel.level) : null;\r\n  const outletWillChange = nextOutletImage && nextOutletImage !== currentOutletImage;\r\n\r\n  return (\r\n    <div className=\"glass-effect p-4 rounded-xl space-y-3\">\r\n      {/* Level Title and Number */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          {/* Current Outlet Image */}\r\n          <img \r\n            src={getOutletImageByLevel(currentLevel.level)} \r\n            alt={`Розетка уровня ${currentLevel.level}`}\r\n            className=\"w-12 h-12 rounded-lg border-2 border-primary-orange shadow-lg\"\r\n          />\r\n          <div>\r\n            <div className=\"text-xs text-gray-400 uppercase tracking-wide\">Уровень</div>\r\n            <div className=\"flex items-baseline space-x-2\">\r\n              <span className=\"text-2xl font-bold text-primary-orange\">{currentLevel.level}</span>\r\n              <span className=\"text-sm text-gray-300\">{currentLevel.title}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"text-right\">\r\n          <div className=\"text-xs text-gray-400\">Опыт</div>\r\n          <div className=\"text-lg font-bold text-accent-blue\">\r\n            {player.experience.toLocaleString()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Progress Bar */}\r\n      <div className=\"space-y-2\">\r\n        <div className=\"flex justify-between text-xs text-gray-400\">\r\n          <span>{progressInfo.current}</span>\r\n          <span>{progressInfo.nextLevel ? `${progressInfo.remaining} до ${progressInfo.nextLevel.level} уровня` : 'Максимум'}</span>\r\n          <span>{progressInfo.required}</span>\r\n        </div>\r\n        \r\n        <div className=\"relative w-full bg-gray-700 rounded-full h-2 overflow-hidden\">\r\n          <motion.div\r\n            className=\"h-full bg-gradient-to-r from-accent-blue to-primary-orange rounded-full\"\r\n            initial={{ width: 0 }}\r\n            animate={{ width: `${progressPercent}%` }}\r\n            transition={{ duration: 0.8, ease: \"easeOut\" }}\r\n          />\r\n          \r\n          {/* Spark effect on progress bar */}\r\n          {progressPercent > 0 && (\r\n            <motion.div\r\n              className=\"absolute top-0 right-0 w-1 h-full bg-white opacity-80\"\r\n              style={{ right: `${100 - progressPercent}%` }}\r\n              animate={{ opacity: [0.8, 0.3, 0.8] }}\r\n              transition={{ repeat: Infinity, duration: 1.5 }}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Level Description */}\r\n      <div className=\"text-xs text-gray-400 italic text-center\">\r\n        {currentLevel.description}\r\n      </div>\r\n\r\n      {/* Next Level Preview */}\r\n      {progressInfo.nextLevel && (\r\n        <div className=\"text-center pt-2 border-t border-gray-600\">\r\n          <div className=\"text-xs text-gray-500\">Следующий уровень</div>\r\n          <div className=\"text-sm\">\r\n            <span className=\"text-accent-lime font-semibold\">{progressInfo.nextLevel.title}</span>\r\n            <span className=\"text-gray-400\"> • </span>\r\n            <span className=\"text-yellow-400\">+{progressInfo.nextLevel.voltsReward}⚡</span>\r\n          </div>\r\n          \r\n          {/* Show next outlet image if it will change */}\r\n          {outletWillChange && (\r\n            <div className=\"flex items-center justify-center space-x-2 mt-2\">\r\n              <span className=\"text-xs text-blue-300\">🎨 Новая розетка:</span>\r\n              <img \r\n                src={nextOutletImage} \r\n                alt={`Розетка уровня ${progressInfo.nextLevel.level}`}\r\n                className=\"w-6 h-6 rounded border border-blue-400 shadow-sm\"\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { hapticManager } from '../utils/hapticManager';\r\n\r\ninterface HapticSettingsProps {\r\n  isVisible: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nexport const HapticSettings: React.FC<HapticSettingsProps> = ({\r\n  isVisible,\r\n  onClose\r\n}) => {\r\n  const [isEnabled, setIsEnabled] = useState(true);\r\n  const [testingType, setTestingType] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    // Load settings from localStorage\r\n    const savedEnabled = localStorage.getItem('hapticEnabled');\r\n    if (savedEnabled !== null) {\r\n      const enabled = JSON.parse(savedEnabled);\r\n      setIsEnabled(enabled);\r\n      hapticManager.setEnabled(enabled);\r\n    }\r\n  }, []);\r\n\r\n  const handleToggleEnabled = () => {\r\n    const newValue = !isEnabled;\r\n    setIsEnabled(newValue);\r\n    hapticManager.setEnabled(newValue);\r\n    localStorage.setItem('hapticEnabled', JSON.stringify(newValue));\r\n    \r\n    // Test vibration when enabling\r\n    if (newValue) {\r\n      hapticManager.test();\r\n    }\r\n  };\r\n\r\n  const testHaptic = (type: string, action: () => void) => {\r\n    setTestingType(type);\r\n    action();\r\n    setTimeout(() => setTestingType(null), 500);\r\n  };\r\n\r\n  if (!isVisible) return null;\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      exit={{ opacity: 0 }}\r\n      className=\"fixed inset-0 bg-black/80 flex items-center justify-center z-50 p-4\"\r\n      onClick={onClose}\r\n    >\r\n      <motion.div\r\n        initial={{ scale: 0.8, opacity: 0 }}\r\n        animate={{ scale: 1, opacity: 1 }}\r\n        exit={{ scale: 0.8, opacity: 0 }}\r\n        className=\"bg-gradient-to-br from-gray-900 to-gray-800 rounded-2xl p-6 max-w-sm w-full border border-primary-orange/20\"\r\n        onClick={(e) => e.stopPropagation()}\r\n      >\r\n        {/* Header */}\r\n        <div className=\"flex justify-between items-center mb-6\">\r\n          <h2 className=\"text-2xl font-bold text-primary-orange\">Вибрация</h2>\r\n          <button\r\n            onClick={onClose}\r\n            className=\"text-gray-400 hover:text-white text-2xl\"\r\n          >\r\n            ×\r\n          </button>\r\n        </div>\r\n\r\n        {/* Enable/Disable Toggle */}\r\n        <div className=\"mb-6\">\r\n          <div className=\"flex justify-between items-center p-4 bg-gray-800/50 rounded-xl\">\r\n            <div>\r\n              <h3 className=\"text-lg font-semibold text-white\">Включить вибрацию</h3>\r\n              <p className=\"text-sm text-gray-400\">\r\n                {hapticManager.isAvailable() \r\n                  ? 'Поддерживается вашим устройством' \r\n                  : 'Недоступно на вашем устройстве'\r\n                }\r\n              </p>\r\n            </div>\r\n            <motion.button\r\n              onClick={handleToggleEnabled}\r\n              className={`w-12 h-6 rounded-full p-1 transition-colors ${\r\n                isEnabled ? 'bg-primary-orange' : 'bg-gray-600'\r\n              }`}\r\n              whileTap={{ scale: 0.95 }}\r\n            >\r\n              <motion.div\r\n                className=\"w-4 h-4 bg-white rounded-full\"\r\n                animate={{ x: isEnabled ? 24 : 0 }}\r\n                transition={{ type: 'spring', stiffness: 500, damping: 30 }}\r\n              />\r\n            </motion.button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Test Vibrations */}\r\n        {isEnabled && (\r\n          <div className=\"space-y-3\">\r\n            <h3 className=\"text-lg font-semibold text-white mb-3\">Тест вибрации</h3>\r\n            \r\n            {/* Game Events */}\r\n            <div className=\"space-y-2\">\r\n              <h4 className=\"text-sm font-medium text-gray-300\">Игровые события</h4>\r\n              \r\n              <motion.button\r\n                onClick={() => testHaptic('press', () => hapticManager.outletPress())}\r\n                className={`w-full p-3 rounded-lg border transition-colors ${\r\n                  testingType === 'press' \r\n                    ? 'bg-blue-500/30 border-blue-400 text-blue-200' \r\n                    : 'bg-gray-700/50 border-gray-600 text-gray-300 hover:bg-gray-600/50'\r\n                }`}\r\n                whileHover={{ scale: 1.02 }}\r\n                whileTap={{ scale: 0.98 }}\r\n              >\r\n                🔌 Нажатие на розетку\r\n              </motion.button>\r\n\r\n              <motion.button\r\n                onClick={() => testHaptic('success', () => hapticManager.survivalSuccess())}\r\n                className={`w-full p-3 rounded-lg border transition-colors ${\r\n                  testingType === 'success' \r\n                    ? 'bg-green-500/30 border-green-400 text-green-200' \r\n                    : 'bg-gray-700/50 border-gray-600 text-gray-300 hover:bg-gray-600/50'\r\n                }`}\r\n                whileHover={{ scale: 1.02 }}\r\n                whileTap={{ scale: 0.98 }}\r\n              >\r\n                ✅ Успешное выживание\r\n              </motion.button>\r\n\r\n              <motion.button\r\n                onClick={() => testHaptic('shock', () => hapticManager.electricShock())}\r\n                className={`w-full p-3 rounded-lg border transition-colors ${\r\n                  testingType === 'shock' \r\n                    ? 'bg-red-500/30 border-red-400 text-red-200' \r\n                    : 'bg-gray-700/50 border-gray-600 text-gray-300 hover:bg-gray-600/50'\r\n                }`}\r\n                whileHover={{ scale: 1.02 }}\r\n                whileTap={{ scale: 0.98 }}\r\n              >\r\n                ⚡ Удар током\r\n              </motion.button>\r\n\r\n              <motion.button\r\n                onClick={() => testHaptic('levelup', () => hapticManager.levelUp())}\r\n                className={`w-full p-3 rounded-lg border transition-colors ${\r\n                  testingType === 'levelup' \r\n                    ? 'bg-yellow-500/30 border-yellow-400 text-yellow-200' \r\n                    : 'bg-gray-700/50 border-gray-600 text-gray-300 hover:bg-gray-600/50'\r\n                }`}\r\n                whileHover={{ scale: 1.02 }}\r\n                whileTap={{ scale: 0.98 }}\r\n              >\r\n                🆙 Повышение уровня\r\n              </motion.button>\r\n            </div>\r\n\r\n            {/* Intensity Levels */}\r\n            <div className=\"space-y-2 mt-4\">\r\n              <h4 className=\"text-sm font-medium text-gray-300\">Интенсивность</h4>\r\n              \r\n              <div className=\"grid grid-cols-2 gap-2\">\r\n                <motion.button\r\n                  onClick={() => testHaptic('light', () => hapticManager.light())}\r\n                  className={`p-2 rounded-lg border text-sm transition-colors ${\r\n                    testingType === 'light' \r\n                      ? 'bg-gray-500/30 border-gray-400 text-gray-200' \r\n                      : 'bg-gray-700/50 border-gray-600 text-gray-300 hover:bg-gray-600/50'\r\n                  }`}\r\n                  whileHover={{ scale: 1.02 }}\r\n                  whileTap={{ scale: 0.98 }}\r\n                >\r\n                  Легкая\r\n                </motion.button>\r\n\r\n                <motion.button\r\n                  onClick={() => testHaptic('medium', () => hapticManager.medium())}\r\n                  className={`p-2 rounded-lg border text-sm transition-colors ${\r\n                    testingType === 'medium' \r\n                      ? 'bg-gray-500/30 border-gray-400 text-gray-200' \r\n                      : 'bg-gray-700/50 border-gray-600 text-gray-300 hover:bg-gray-600/50'\r\n                  }`}\r\n                  whileHover={{ scale: 1.02 }}\r\n                  whileTap={{ scale: 0.98 }}\r\n                >\r\n                  Средняя\r\n                </motion.button>\r\n\r\n                <motion.button\r\n                  onClick={() => testHaptic('heavy', () => hapticManager.heavy())}\r\n                  className={`p-2 rounded-lg border text-sm transition-colors ${\r\n                    testingType === 'heavy' \r\n                      ? 'bg-gray-500/30 border-gray-400 text-gray-200' \r\n                      : 'bg-gray-700/50 border-gray-600 text-gray-300 hover:bg-gray-600/50'\r\n                  }`}\r\n                  whileHover={{ scale: 1.02 }}\r\n                  whileTap={{ scale: 0.98 }}\r\n                >\r\n                  Сильная\r\n                </motion.button>\r\n\r\n                <motion.button\r\n                  onClick={() => testHaptic('rigid', () => hapticManager.rigid())}\r\n                  className={`p-2 rounded-lg border text-sm transition-colors ${\r\n                    testingType === 'rigid' \r\n                      ? 'bg-gray-500/30 border-gray-400 text-gray-200' \r\n                      : 'bg-gray-700/50 border-gray-600 text-gray-300 hover:bg-gray-600/50'\r\n                  }`}\r\n                  whileHover={{ scale: 1.02 }}\r\n                  whileTap={{ scale: 0.98 }}\r\n                >\r\n                  Резкая\r\n                </motion.button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Info */}\r\n        <div className=\"mt-6 p-3 bg-blue-900/20 border border-blue-500/30 rounded-lg\">\r\n          <p className=\"text-xs text-blue-300 text-center\">\r\n            💡 Вибрация доступна только в Telegram Mini App на поддерживаемых устройствах\r\n          </p>\r\n        </div>\r\n      </motion.div>\r\n    </motion.div>\r\n  );\r\n};\r\n","/**\r\n * TelegramProvider - компонент для управления интеграцией с Telegram Mini App\r\n */\r\n\r\nimport React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport type { TelegramWebApp, TelegramUser } from '../types/telegram';\r\n\r\ninterface TelegramContextType {\r\n  webApp: TelegramWebApp | null;\r\n  user: TelegramUser | null;\r\n  isInTelegram: boolean;\r\n  platform: string;\r\n  colorScheme: 'light' | 'dark';\r\n}\r\n\r\nconst TelegramContext = createContext<TelegramContextType>({\r\n  webApp: null,\r\n  user: null,\r\n  isInTelegram: false,\r\n  platform: 'unknown',\r\n  colorScheme: 'dark'\r\n});\r\n\r\nexport const useTelegram = () => useContext(TelegramContext);\r\n\r\ninterface TelegramProviderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const TelegramProvider: React.FC<TelegramProviderProps> = ({ children }) => {\r\n  const [webApp, setWebApp] = useState<TelegramWebApp | null>(null);\r\n  const [user, setUser] = useState<TelegramUser | null>(null);\r\n  const [isInTelegram, setIsInTelegram] = useState(false);\r\n  const [platform, setPlatform] = useState('unknown');\r\n  const [colorScheme, setColorScheme] = useState<'light' | 'dark'>('dark');\r\n\r\n  useEffect(() => {\r\n    if (typeof window !== 'undefined' && window.Telegram?.WebApp) {\r\n      const tgWebApp = window.Telegram.WebApp as TelegramWebApp;\r\n      \r\n      // Инициализация WebApp\r\n      tgWebApp.ready();\r\n      tgWebApp.expand();\r\n      \r\n      setWebApp(tgWebApp);\r\n      setIsInTelegram(true);\r\n      setPlatform(tgWebApp.platform || 'unknown');\r\n      setColorScheme(tgWebApp.colorScheme || 'dark');\r\n      \r\n      // Получение информации о пользователе\r\n      if (tgWebApp.initDataUnsafe?.user) {\r\n        setUser(tgWebApp.initDataUnsafe.user);\r\n        console.log('Telegram user:', tgWebApp.initDataUnsafe.user);\r\n      }\r\n      \r\n      // Настройка интерфейса\r\n      tgWebApp.setHeaderColor('#000000');\r\n      tgWebApp.setBackgroundColor('#000000');\r\n      \r\n      // Отключаем стандартную кнопку закрытия\r\n      tgWebApp.disableClosingConfirmation();\r\n      \r\n      console.log('Telegram WebApp initialized successfully');\r\n\r\n      // Инициализация\r\n      tgWebApp.ready();\r\n      tgWebApp.expand();\r\n\r\n      console.log('Telegram WebApp Context initialized:', {\r\n        platform: tgWebApp.platform,\r\n        colorScheme: tgWebApp.colorScheme,\r\n        user: tgWebApp.initDataUnsafe?.user,\r\n        version: tgWebApp.version\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const contextValue: TelegramContextType = {\r\n    webApp,\r\n    user,\r\n    isInTelegram,\r\n    platform,\r\n    colorScheme\r\n  };\r\n\r\n  return (\r\n    <TelegramContext.Provider value={contextValue}>\r\n      {children}\r\n    </TelegramContext.Provider>\r\n  );\r\n};\r\n\r\nexport default TelegramProvider;\r\n","/**\r\n * TelegramUserInfo - компонент для отображения информации о пользователе Telegram\r\n */\r\n\r\nimport React from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { useTelegram } from './TelegramProvider';\r\n\r\nexport const TelegramUserInfo: React.FC = () => {\r\n  const { user, isInTelegram, platform, colorScheme } = useTelegram();\r\n\r\n  if (!isInTelegram) {\r\n    return (\r\n      <div className=\"text-xs text-gray-500 text-center p-2\">\r\n        💻 Веб-версия (не в Telegram)\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: -10 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      className=\"bg-gradient-to-r from-blue-900/20 to-purple-900/20 border border-blue-500/30 rounded-lg p-3 mb-4\"\r\n    >\r\n      <div className=\"flex items-center justify-between\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          {user?.photo_url ? (\r\n            <img \r\n              src={user.photo_url} \r\n              alt=\"Avatar\" \r\n              className=\"w-8 h-8 rounded-full border border-blue-400/50\"\r\n            />\r\n          ) : (\r\n            <div className=\"w-8 h-8 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center\">\r\n              <span className=\"text-white text-sm font-bold\">\r\n                {user?.first_name?.[0] || '?'}\r\n              </span>\r\n            </div>\r\n          )}\r\n          \r\n          <div>\r\n            <div className=\"text-sm font-medium text-white\">\r\n              {user?.first_name} {user?.last_name}\r\n              {user?.is_premium && <span className=\"ml-1 text-yellow-400\">⭐</span>}\r\n            </div>\r\n            <div className=\"text-xs text-gray-400\">\r\n              @{user?.username || 'no_username'} • {platform}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"text-right\">\r\n          <div className={`text-xs px-2 py-1 rounded-full border ${\r\n            colorScheme === 'dark' \r\n              ? 'bg-gray-800 border-gray-600 text-gray-300' \r\n              : 'bg-gray-200 border-gray-400 text-gray-700'\r\n          }`}>\r\n            {colorScheme === 'dark' ? '🌙' : '☀️'} {colorScheme}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n};\r\n","import { useState, useCallback } from 'react';\r\nimport { apiClient } from '../utils/apiClient';\r\n\r\ninterface UseApiState<T = any> {\r\n  data: T | null;\r\n  loading: boolean;\r\n  error: string | null;\r\n}\r\n\r\ninterface GameScoreData {\r\n  score: number;\r\n  level: number;\r\n  timePlayed: number;\r\n}\r\n\r\n/**\r\n * Хук для работы с игровым API\r\n */\r\nexport function useGameApi() {\r\n  const [submitState, setSubmitState] = useState<UseApiState>({\r\n    data: null,\r\n    loading: false,\r\n    error: null,\r\n  });\r\n\r\n  const [statsState, setStatsState] = useState<UseApiState>({\r\n    data: null,\r\n    loading: false,\r\n    error: null,\r\n  });\r\n\r\n  const [leaderboardState, setLeaderboardState] = useState<UseApiState>({\r\n    data: null,\r\n    loading: false,\r\n    error: null,\r\n  });\r\n\r\n  /**\r\n   * Отправляет очки на сервер\r\n   */\r\n  const submitScore = useCallback(async (scoreData: GameScoreData) => {\r\n    setSubmitState({ data: null, loading: true, error: null });\r\n\r\n    try {\r\n      const response = await apiClient.submitScore(scoreData);\r\n      \r\n      if (response.error) {\r\n        setSubmitState({ data: null, loading: false, error: response.error });\r\n        return { success: false, error: response.error };\r\n      }\r\n\r\n      setSubmitState({ data: response.data, loading: false, error: null });\r\n      return { success: true, data: response.data };\r\n    } catch (error) {\r\n      const errorMessage = error instanceof Error ? error.message : 'Unknown error';\r\n      setSubmitState({ data: null, loading: false, error: errorMessage });\r\n      return { success: false, error: errorMessage };\r\n    }\r\n  }, []);\r\n\r\n  /**\r\n   * Получает статистику пользователя\r\n   */\r\n  const getUserStats = useCallback(async () => {\r\n    setStatsState({ data: null, loading: true, error: null });\r\n\r\n    try {\r\n      const response = await apiClient.getUserStats();\r\n      \r\n      if (response.error) {\r\n        setStatsState({ data: null, loading: false, error: response.error });\r\n        return { success: false, error: response.error };\r\n      }\r\n\r\n      setStatsState({ data: response.data, loading: false, error: null });\r\n      return { success: true, data: response.data };\r\n    } catch (error) {\r\n      const errorMessage = error instanceof Error ? error.message : 'Unknown error';\r\n      setStatsState({ data: null, loading: false, error: errorMessage });\r\n      return { success: false, error: errorMessage };\r\n    }\r\n  }, []);\r\n\r\n  /**\r\n   * Получает таблицу лидеров\r\n   */\r\n  const getLeaderboard = useCallback(async (type: 'level' | 'volts' | 'experience' = 'level', limit = 10) => {\r\n    setLeaderboardState({ data: null, loading: true, error: null });\r\n\r\n    try {\r\n      const response = await apiClient.getLeaderboard(type, limit);\r\n      \r\n      if (response.error) {\r\n        setLeaderboardState({ data: null, loading: false, error: response.error });\r\n        return { success: false, error: response.error };\r\n      }\r\n\r\n      setLeaderboardState({ data: response.data, loading: false, error: null });\r\n      return { success: true, data: response.data };\r\n    } catch (error) {\r\n      const errorMessage = error instanceof Error ? error.message : 'Unknown error';\r\n      setLeaderboardState({ data: null, loading: false, error: errorMessage });\r\n      return { success: false, error: errorMessage };\r\n    }\r\n  }, []);\r\n\r\n  /**\r\n   * Восстанавливает энергию\r\n   */\r\n  const refillEnergy = useCallback(async () => {\r\n    try {\r\n      const response = await apiClient.refillEnergy();\r\n      \r\n      if (response.error) {\r\n        return { success: false, error: response.error };\r\n      }\r\n\r\n      return { success: true, data: response.data };\r\n    } catch (error) {\r\n      const errorMessage = error instanceof Error ? error.message : 'Unknown error';\r\n      return { success: false, error: errorMessage };\r\n    }\r\n  }, []);\r\n\r\n  return {\r\n    // Методы\r\n    submitScore,\r\n    getUserStats,\r\n    getLeaderboard,\r\n    refillEnergy,\r\n    \r\n    // Состояния\r\n    submitState,\r\n    statsState,\r\n    leaderboardState,\r\n    \r\n    // Статусы аутентификации\r\n    isAuthenticated: apiClient.isAuthenticated(),\r\n  };\r\n}\r\n\r\n/**\r\n * Простой хук для offline/online режима\r\n */\r\nexport function useOfflineMode() {\r\n  const [isOnline, setIsOnline] = useState(navigator.onLine);\r\n\r\n  useState(() => {\r\n    const handleOnline = () => setIsOnline(true);\r\n    const handleOffline = () => setIsOnline(false);\r\n\r\n    window.addEventListener('online', handleOnline);\r\n    window.addEventListener('offline', handleOffline);\r\n\r\n    return () => {\r\n      window.removeEventListener('online', handleOnline);\r\n      window.removeEventListener('offline', handleOffline);\r\n    };\r\n  });\r\n\r\n  return { isOnline };\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { useGameStore } from '../store/gameStore';\r\nimport { hapticManager } from '../utils/hapticManager';\r\nimport { ScoreBreakdown } from './ScoreBreakdown';\r\nimport { LevelDisplay } from './LevelDisplay';\r\nimport { HapticSettings } from './HapticSettings';\r\nimport { TelegramUserInfo } from './TelegramUserInfo';\r\nimport { useGameApi } from '../hooks/useGameApi';\r\n\r\nexport const MainMenu: React.FC = () => {\r\n  const { \r\n    player, \r\n    startSingleMode, \r\n    startMultiplayerMode,\r\n    addExperience,\r\n    loadStatsFromServer \r\n  } = useGameStore();\r\n  const { isAuthenticated } = useGameApi();\r\n  const [showScoreBreakdown, setShowScoreBreakdown] = useState(false);\r\n  const [showHapticSettings, setShowHapticSettings] = useState(false);\r\n  const [isLoadingStats, setIsLoadingStats] = useState(false);\r\n\r\n  // Загружаем статистику с сервера при первом запуске\r\n  useEffect(() => {\r\n    const loadServerStats = async () => {\r\n      if (isAuthenticated && !isLoadingStats) {\r\n        setIsLoadingStats(true);\r\n        \r\n        try {\r\n          const result = await loadStatsFromServer();\r\n          \r\n          if (result.success) {\r\n            console.log('✅ Статистика загружена с сервера');\r\n          } else {\r\n            console.warn('⚠️ Не удалось загрузить статистику с сервера:', result.error);\r\n          }\r\n        } catch (error) {\r\n          console.error('❌ Ошибка при загрузке статистики:', error);\r\n        } finally {\r\n          setIsLoadingStats(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    loadServerStats();\r\n  }, [isAuthenticated, loadStatsFromServer, isLoadingStats]);\r\n  \r\n  // Development helper to test level system\r\n  const handleQuickLevelUp = () => {\r\n    addExperience(100); // Add 100 experience for testing\r\n  };\r\n\r\n  const handleStartGame = (difficulty: 'easy' | 'medium' | 'hard' | 'extreme') => {\r\n    hapticManager.medium(); // Вибрация при начале игры\r\n    startSingleMode(difficulty);\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex flex-col items-center justify-center p-4 bg-gradient-to-br from-background-dark to-background-darker\">\r\n      {/* Logo */}\r\n      <motion.div\r\n        initial={{ opacity: 0, y: -50 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.8 }}\r\n        className=\"text-center mb-8\"\r\n      >\r\n        <h1 className=\"text-6xl font-bold text-primary-orange tiger-stripes bg-clip-text text-transparent mb-4\">\r\n          ТИГР\r\n        </h1>\r\n        <h2 className=\"text-4xl font-bold text-accent-blue mb-2\">\r\n          РОЗЕТКА\r\n        </h2>\r\n        <p className=\"text-lg text-gray-300\">\r\n          Telegram Mini App Game\r\n        </p>\r\n      </motion.div>\r\n\r\n      {/* Level Display */}\r\n      <motion.div\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.6, delay: 0.2 }}\r\n        className=\"mb-6\"\r\n      >\r\n        <LevelDisplay />\r\n      </motion.div>\r\n\r\n      {/* Статус синхронизации */}\r\n      {isAuthenticated && isLoadingStats && (\r\n        <motion.div\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          className=\"mb-4 text-center text-blue-400 text-sm\"\r\n        >\r\n          <span className=\"inline-block animate-spin mr-2\">⏳</span>\r\n          Синхронизация с сервером...\r\n        </motion.div>\r\n      )}\r\n\r\n      {!isAuthenticated && (\r\n        <motion.div\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          className=\"mb-4 text-center text-yellow-400 text-sm\"\r\n        >\r\n          ⚠️ Игра в автономном режиме\r\n        </motion.div>\r\n      )}\r\n\r\n      {/* Telegram User Info */}\r\n      <motion.div\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.6, delay: 0.25 }}\r\n        className=\"mb-4 w-full max-w-md\"\r\n      >\r\n        <TelegramUserInfo />\r\n      </motion.div>\r\n\r\n      {/* Player Stats */}\r\n      <motion.div\r\n        initial={{ opacity: 0, scale: 0.9 }}\r\n        animate={{ opacity: 1, scale: 1 }}\r\n        transition={{ duration: 0.5, delay: 0.3 }}\r\n        className=\"glass-effect p-6 mb-8 text-center\"\r\n      >\r\n        <div className=\"text-sm text-gray-300 mb-2\">Добро пожаловать, {player.name}!</div>\r\n        <div className=\"flex justify-center space-x-6\">\r\n          <div>\r\n            <div className=\"text-xs text-gray-400\">ВОЛЬТЫ</div>\r\n            <div className=\"text-xl font-bold text-primary-orange\">{player.volts}⚡</div>\r\n          </div>\r\n          <div>\r\n            <div className=\"text-xs text-gray-400\">УРОВЕНЬ</div>\r\n            <div className=\"text-xl font-bold text-accent-blue\">{player.level}</div>\r\n          </div>\r\n          <div>\r\n            <div className=\"text-xs text-gray-400\">ВСЕГО НАЖАТИЙ</div>\r\n            <div className=\"text-xl font-bold text-accent-lime\">{player.totalClicks}</div>\r\n          </div>\r\n        </div>\r\n      </motion.div>\r\n\r\n      {/* Game Mode Selection */}\r\n      <motion.div\r\n        initial={{ opacity: 0, y: 50 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.6, delay: 0.5 }}\r\n        className=\"w-full max-w-md space-y-4\"\r\n      >\r\n        <h3 className=\"text-2xl font-bold text-center text-white mb-6\">\r\n          ⚡ Одиночный режим\r\n        </h3>\r\n        <p className=\"text-center text-gray-300 text-sm mb-4\">\r\n          Выберите сложность игры против ИИ электрика\r\n        </p>\r\n\r\n        {/* Easy Mode */}\r\n        <motion.button\r\n          onClick={() => handleStartGame('easy')}\r\n          className=\"w-full glass-effect p-4 rounded-xl hover:bg-green-500/20 transition-colors\"\r\n          whileHover={{ scale: 1.02, x: 10 }}\r\n          whileTap={{ scale: 0.98 }}\r\n        >\r\n          <div className=\"flex justify-between items-center\">\r\n            <div className=\"text-left\">\r\n              <div className=\"text-lg font-bold text-green-400\">ЛЁГКИЙ</div>\r\n              <div className=\"text-sm text-gray-300\">15% шанс разряда • 2 сек предупреждение</div>\r\n            </div>\r\n            <div className=\"text-2xl\">🟢</div>\r\n          </div>\r\n        </motion.button>\r\n\r\n        {/* Medium Mode */}\r\n        <motion.button\r\n          onClick={() => handleStartGame('medium')}\r\n          className=\"w-full glass-effect p-4 rounded-xl hover:bg-yellow-500/20 transition-colors\"\r\n          whileHover={{ scale: 1.02, x: 10 }}\r\n          whileTap={{ scale: 0.98 }}\r\n        >\r\n          <div className=\"flex justify-between items-center\">\r\n            <div className=\"text-left\">\r\n              <div className=\"text-lg font-bold text-yellow-400\">СРЕДНИЙ</div>\r\n              <div className=\"text-sm text-gray-300\">25% шанс разряда • 1.5 сек предупреждение</div>\r\n            </div>\r\n            <div className=\"text-2xl\">🟡</div>\r\n          </div>\r\n        </motion.button>\r\n\r\n        {/* Hard Mode */}\r\n        <motion.button\r\n          onClick={() => handleStartGame('hard')}\r\n          className=\"w-full glass-effect p-4 rounded-xl hover:bg-orange-500/20 transition-colors\"\r\n          whileHover={{ scale: 1.02, x: 10 }}\r\n          whileTap={{ scale: 0.98 }}\r\n        >\r\n          <div className=\"flex justify-between items-center\">\r\n            <div className=\"text-left\">\r\n              <div className=\"text-lg font-bold text-orange-400\">СЛОЖНЫЙ</div>\r\n              <div className=\"text-sm text-gray-300\">35% шанс разряда • 1 сек предупреждение</div>\r\n            </div>\r\n            <div className=\"text-2xl\">🟠</div>\r\n          </div>\r\n        </motion.button>\r\n\r\n        {/* Extreme Mode */}\r\n        <motion.button\r\n          onClick={() => handleStartGame('extreme')}\r\n          className=\"w-full glass-effect p-4 rounded-xl hover:bg-red-500/20 transition-colors\"\r\n          whileHover={{ scale: 1.02, x: 10 }}\r\n          whileTap={{ scale: 0.98 }}\r\n        >\r\n          <div className=\"flex justify-between items-center\">\r\n            <div className=\"text-left\">\r\n              <div className=\"text-lg font-bold text-red-400\">ЭКСТРИМ</div>\r\n              <div className=\"text-sm text-gray-300\">50% шанс разряда • 0.5 сек предупреждение</div>\r\n            </div>\r\n            <div className=\"text-2xl\">🔴</div>\r\n          </div>\r\n        </motion.button>\r\n\r\n        {/* Multiplayer Mode Section */}\r\n        <motion.div\r\n          className=\"w-full border-t border-white/10 pt-6 mt-6\"\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.6, delay: 0.7 }}\r\n        >\r\n          <h4 className=\"text-xl font-bold text-center text-white mb-4\">\r\n            🎮 Многопользовательский режим\r\n          </h4>\r\n          \r\n          {/* Coming Soon for now */}\r\n          <motion.button\r\n            onClick={() => {\r\n              hapticManager.medium();\r\n              startMultiplayerMode('duel');\r\n            }}\r\n            className=\"w-full glass-effect p-4 rounded-xl hover:bg-purple-500/20 transition-colors border border-purple-400/30\"\r\n            whileHover={{ scale: 1.02, x: 10 }}\r\n            whileTap={{ scale: 0.98 }}\r\n          >\r\n            <div className=\"flex justify-between items-center\">\r\n              <div className=\"text-left\">\r\n                <div className=\"text-lg font-bold text-purple-400\">ДУЭЛЬ</div>\r\n                <div className=\"text-sm text-gray-300\">Соревнование 1v1 • Real-time бой</div>\r\n              </div>\r\n              <div className=\"text-2xl\">⚔️</div>\r\n            </div>\r\n          </motion.button>\r\n\r\n          <motion.button\r\n            onClick={() => {\r\n              hapticManager.medium();\r\n              startMultiplayerMode('tournament');\r\n            }}\r\n            className=\"w-full glass-effect p-4 rounded-xl hover:bg-blue-500/20 transition-colors border border-blue-400/30 mt-3\"\r\n            whileHover={{ scale: 1.02, x: 10 }}\r\n            whileTap={{ scale: 0.98 }}\r\n          >\r\n            <div className=\"flex justify-between items-center\">\r\n              <div className=\"text-left\">\r\n                <div className=\"text-lg font-bold text-blue-400\">ТУРНИР</div>\r\n                <div className=\"text-sm text-gray-300\">До 8 игроков • Браккет система</div>\r\n              </div>\r\n              <div className=\"text-2xl\">🏆</div>\r\n            </div>\r\n          </motion.button>\r\n\r\n          <motion.button\r\n            onClick={() => {\r\n              hapticManager.medium();\r\n              startMultiplayerMode('coop');\r\n            }}\r\n            className=\"w-full glass-effect p-4 rounded-xl hover:bg-green-500/20 transition-colors border border-green-400/30 mt-3\"\r\n            whileHover={{ scale: 1.02, x: 10 }}\r\n            whileTap={{ scale: 0.98 }}\r\n          >\r\n            <div className=\"flex justify-between items-center\">\r\n              <div className=\"text-left\">\r\n                <div className=\"text-lg font-bold text-green-400\">КООП</div>\r\n                <div className=\"text-sm text-gray-300\">Командная игра • Против ИИ</div>\r\n              </div>\r\n              <div className=\"text-2xl\">🤝</div>\r\n            </div>\r\n          </motion.button>\r\n        </motion.div>\r\n\r\n        {/* Score Breakdown Button */}\r\n        <motion.button\r\n          onClick={() => {\r\n            hapticManager.light();\r\n            setShowScoreBreakdown(true);\r\n          }}\r\n          className=\"w-full glass-effect p-3 rounded-xl hover:bg-blue-500/20 transition-colors border border-blue-400/30\"\r\n          whileHover={{ scale: 1.02 }}\r\n          whileTap={{ scale: 0.98 }}\r\n        >\r\n          <div className=\"flex justify-center items-center space-x-2\">\r\n            <span className=\"text-lg\">📊</span>\r\n            <span className=\"text-lg font-semibold text-blue-400\">Очки и уровни</span>\r\n          </div>\r\n        </motion.button>\r\n\r\n        {/* Haptic Settings Button */}\r\n        <motion.button\r\n          onClick={() => {\r\n            hapticManager.light();\r\n            setShowHapticSettings(true);\r\n          }}\r\n          className=\"w-full glass-effect p-3 rounded-xl hover:bg-purple-500/20 transition-colors border border-purple-400/30\"\r\n          whileHover={{ scale: 1.02 }}\r\n          whileTap={{ scale: 0.98 }}\r\n        >\r\n          <div className=\"flex justify-center items-center space-x-2\">\r\n            <span className=\"text-lg\">📳</span>\r\n            <span className=\"text-lg font-semibold text-purple-400\">Вибрация</span>\r\n          </div>\r\n        </motion.button>\r\n      </motion.div>\r\n\r\n      {/* Score Breakdown Modal */}\r\n      {showScoreBreakdown && (\r\n        <ScoreBreakdown onClose={() => setShowScoreBreakdown(false)} />\r\n      )}\r\n\r\n      {/* Haptic Settings Modal */}\r\n      {showHapticSettings && (\r\n        <HapticSettings \r\n          isVisible={showHapticSettings}\r\n          onClose={() => setShowHapticSettings(false)} \r\n        />\r\n      )}\r\n\r\n      {/* Footer */}\r\n      <motion.div\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        transition={{ duration: 0.5, delay: 1 }}\r\n        className=\"mt-8 text-center text-gray-400 text-sm space-y-2\"\r\n      >\r\n        <p>⚡ Играй осторожно! ⚡</p>\r\n        <p className=\"mt-2\">v1.1.0 | Single Mode + Multiplayer Preview</p>\r\n        \r\n        {/* Development button for testing levels */}\r\n        <button \r\n          onClick={() => {\r\n            hapticManager.light();\r\n            handleQuickLevelUp();\r\n          }}\r\n          className=\"mt-2 px-3 py-1 text-xs bg-purple-600/30 hover:bg-purple-600/50 text-purple-300 rounded transition-colors\"\r\n        >\r\n          🔧 +100 опыта (тест)\r\n        </button>\r\n      </motion.div>\r\n    </div>\r\n  );\r\n};\r\n","// Sound effects manager for TigerRozetka\r\n// Using Web Audio API for better control\r\n\r\nexport class SoundManager {\r\n  private audioContext: AudioContext | null = null;\r\n  private sounds: Map<string, AudioBuffer> = new Map();\r\n  private volume: number = 0.7;\r\n  private enabled: boolean = true;\r\n\r\n  constructor() {\r\n    this.init();\r\n  }\r\n\r\n  private async init() {\r\n    try {\r\n      this.audioContext = new (window.AudioContext || (window as any).webkitAudioContext)();\r\n    } catch (error) {\r\n      console.warn('Web Audio API not supported:', error);\r\n    }\r\n  }\r\n\r\n  async loadSound(name: string, url: string): Promise<void> {\r\n    if (!this.audioContext) return;\r\n\r\n    try {\r\n      const response = await fetch(url);\r\n      const arrayBuffer = await response.arrayBuffer();\r\n      const audioBuffer = await this.audioContext.decodeAudioData(arrayBuffer);\r\n      this.sounds.set(name, audioBuffer);\r\n    } catch (error) {\r\n      console.warn(`Failed to load sound ${name}:`, error);\r\n    }\r\n  }\r\n\r\n  playSound(name: string, volume: number = 1): void {\r\n    if (!this.enabled || !this.audioContext) return;\r\n\r\n    const buffer = this.sounds.get(name);\r\n    if (!buffer) return;\r\n\r\n    const source = this.audioContext.createBufferSource();\r\n    const gainNode = this.audioContext.createGain();\r\n\r\n    source.buffer = buffer;\r\n    gainNode.gain.value = this.volume * volume;\r\n\r\n    source.connect(gainNode);\r\n    gainNode.connect(this.audioContext.destination);\r\n\r\n    source.start();\r\n  }\r\n\r\n  // Generate electric spark sound programmatically\r\n  generateSparkSound(intensity: 'low' | 'medium' | 'high' | 'extreme'): void {\r\n    if (!this.enabled || !this.audioContext) return;\r\n\r\n    const duration = {\r\n      low: 0.1,\r\n      medium: 0.2,\r\n      high: 0.3,\r\n      extreme: 0.5\r\n    }[intensity];\r\n\r\n    const frequency = {\r\n      low: 2000,\r\n      medium: 3000,\r\n      high: 4000,\r\n      extreme: 5000\r\n    }[intensity];\r\n\r\n    // Create white noise for spark effect\r\n    const bufferSize = this.audioContext.sampleRate * duration;\r\n    const buffer = this.audioContext.createBuffer(1, bufferSize, this.audioContext.sampleRate);\r\n    const output = buffer.getChannelData(0);\r\n\r\n    // Generate noise with frequency modulation\r\n    for (let i = 0; i < bufferSize; i++) {\r\n      const t = i / this.audioContext.sampleRate;\r\n      const envelope = Math.exp(-t * 10); // Exponential decay\r\n      const noise = (Math.random() * 2 - 1) * envelope;\r\n      const oscillation = Math.sin(2 * Math.PI * frequency * t * (1 + Math.random() * 0.5));\r\n      output[i] = noise * oscillation * 0.3;\r\n    }\r\n\r\n    const source = this.audioContext.createBufferSource();\r\n    const gainNode = this.audioContext.createGain();\r\n    \r\n    source.buffer = buffer;\r\n    gainNode.gain.value = this.volume * (intensity === 'extreme' ? 0.8 : 0.5);\r\n\r\n    source.connect(gainNode);\r\n    gainNode.connect(this.audioContext.destination);\r\n\r\n    source.start();\r\n  }\r\n\r\n  // Generate shock sound\r\n  generateShockSound(): void {\r\n    if (!this.enabled || !this.audioContext) return;\r\n\r\n    const duration = 0.8;\r\n    const bufferSize = this.audioContext.sampleRate * duration;\r\n    const buffer = this.audioContext.createBuffer(1, bufferSize, this.audioContext.sampleRate);\r\n    const output = buffer.getChannelData(0);\r\n\r\n    for (let i = 0; i < bufferSize; i++) {\r\n      const t = i / this.audioContext.sampleRate;\r\n      const envelope = Math.exp(-t * 3);\r\n      const lowFreq = Math.sin(2 * Math.PI * 100 * t);\r\n      const highFreq = Math.sin(2 * Math.PI * 800 * t) * 0.5;\r\n      const noise = (Math.random() * 2 - 1) * 0.3;\r\n      output[i] = (lowFreq + highFreq + noise) * envelope * 0.6;\r\n    }\r\n\r\n    const source = this.audioContext.createBufferSource();\r\n    const gainNode = this.audioContext.createGain();\r\n    \r\n    source.buffer = buffer;\r\n    gainNode.gain.value = this.volume;\r\n\r\n    source.connect(gainNode);\r\n    gainNode.connect(this.audioContext.destination);\r\n\r\n    source.start();\r\n  }\r\n\r\n  // Generate warning sound\r\n  generateWarningSound(): void {\r\n    if (!this.enabled || !this.audioContext) return;\r\n\r\n    const duration = 0.3;\r\n    const bufferSize = this.audioContext.sampleRate * duration;\r\n    const buffer = this.audioContext.createBuffer(1, bufferSize, this.audioContext.sampleRate);\r\n    const output = buffer.getChannelData(0);\r\n\r\n    for (let i = 0; i < bufferSize; i++) {\r\n      const t = i / this.audioContext.sampleRate;\r\n      const frequency = 1000 + Math.sin(t * 20) * 200; // Frequency modulation\r\n      const envelope = Math.sin(Math.PI * t / duration); // Bell-shaped envelope\r\n      output[i] = Math.sin(2 * Math.PI * frequency * t) * envelope * 0.4;\r\n    }\r\n\r\n    const source = this.audioContext.createBufferSource();\r\n    const gainNode = this.audioContext.createGain();\r\n    \r\n    source.buffer = buffer;\r\n    gainNode.gain.value = this.volume * 0.6;\r\n\r\n    source.connect(gainNode);\r\n    gainNode.connect(this.audioContext.destination);\r\n\r\n    source.start();\r\n  }\r\n\r\n  // Загружает и воспроизводит звук тигра при электрическом разряде\r\n  async playTigerSound(): Promise<void> {\r\n    if (!this.enabled) return;\r\n\r\n    try {\r\n      // Используем HTML5 Audio для простоты загрузки и воспроизведения\r\n      const audio = new Audio('/tigerrosette/Media/sound/re_-tigra.mp3');\r\n      audio.volume = this.volume * 0.8; // Немного тише основного уровня\r\n      audio.preload = 'auto';\r\n      \r\n      // Воспроизводим звук\r\n      await audio.play();\r\n      console.log('SoundManager: Tiger sound played successfully');\r\n    } catch (error) {\r\n      console.warn('Failed to play tiger sound:', error);\r\n    }\r\n  }\r\n\r\n  setVolume(volume: number): void {\r\n    this.volume = Math.max(0, Math.min(1, volume));\r\n  }\r\n\r\n  setEnabled(enabled: boolean): void {\r\n    this.enabled = enabled;\r\n  }\r\n\r\n  getVolume(): number {\r\n    return this.volume;\r\n  }\r\n\r\n  isEnabled(): boolean {\r\n    return this.enabled;\r\n  }\r\n}\r\n\r\n// Global sound manager instance\r\nexport const soundManager = new SoundManager();\r\n","import React from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\n\r\ninterface ScorePopupProps {\r\n  score: number;\r\n  reason: string;\r\n  isVisible: boolean;\r\n  position: { x: number; y: number };\r\n  type: 'success' | 'shock' | 'bonus';\r\n  experience?: number;\r\n}\r\n\r\nexport const ScorePopup: React.FC<ScorePopupProps> = ({ \r\n  score, \r\n  reason, \r\n  isVisible, \r\n  position,\r\n  type,\r\n  experience = 0\r\n}) => {\r\n  const getColorClass = () => {\r\n    switch (type) {\r\n      case 'success':\r\n        return score >= 30 ? 'text-yellow-300' : \r\n               score >= 20 ? 'text-green-300' : 'text-blue-300';\r\n      case 'shock':\r\n        return 'text-red-300';\r\n      case 'bonus':\r\n        return 'text-purple-300';\r\n      default:\r\n        return 'text-white';\r\n    }\r\n  };\r\n\r\n  const getIcon = () => {\r\n    switch (type) {\r\n      case 'success':\r\n        return score >= 30 ? '🔥' : score >= 20 ? '⚡' : '✨';\r\n      case 'shock':\r\n        return '💥';\r\n      case 'bonus':\r\n        return '🎉';\r\n      default:\r\n        return '⚡';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      {isVisible && (\r\n        <motion.div\r\n          className={`absolute pointer-events-none z-50 ${getColorClass()}`}\r\n          initial={{\r\n            opacity: 0,\r\n            scale: 0.5,\r\n            x: position.x,\r\n            y: position.y\r\n          }}\r\n          animate={{\r\n            opacity: [0, 1, 1, 0],\r\n            scale: [0.5, 1.2, 1, 0.8],\r\n            y: position.y - 80,\r\n            x: position.x + (Math.random() - 0.5) * 40\r\n          }}\r\n          transition={{\r\n            duration: 2,\r\n            ease: 'easeOut'\r\n          }}\r\n        >\r\n          <div className=\"bg-black/80 backdrop-blur-sm rounded-lg px-3 py-2 border border-current\">\r\n            <div className=\"flex items-center space-x-2\">\r\n              <span className=\"text-lg\">{getIcon()}</span>\r\n              <div>\r\n                <div className=\"font-bold text-lg\">+{score}⚡</div>\r\n                {experience > 0 && (\r\n                  <div className=\"text-xs text-blue-300\">+{experience} опыта</div>\r\n                )}\r\n                <div className=\"text-xs opacity-80\">{reason}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n      )}\r\n    </AnimatePresence>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\n\r\ninterface ElectricSparksProps {\r\n  isActive: boolean;\r\n  intensity?: 'low' | 'medium' | 'high' | 'extreme';\r\n  onComplete?: () => void;\r\n}\r\n\r\ninterface Spark {\r\n  id: number;\r\n  x: number;\r\n  y: number;\r\n  angle: number;\r\n  length: number;\r\n  delay: number;\r\n  color: string;\r\n}\r\n\r\nexport const ElectricSparks: React.FC<ElectricSparksProps> = ({\r\n  isActive,\r\n  intensity = 'medium',\r\n  onComplete\r\n}) => {\r\n  const [sparks, setSparks] = useState<Spark[]>([]);\r\n\r\n  useEffect(() => {\r\n    if (isActive) {\r\n      generateSparks();\r\n    } else {\r\n      setSparks([]);\r\n    }\r\n  }, [isActive, intensity]);\r\n\r\n  const generateSparks = () => {\r\n    const sparkCount = {\r\n      low: 6,\r\n      medium: 12,\r\n      high: 18,\r\n      extreme: 25\r\n    }[intensity];\r\n\r\n    const colors = [\r\n      '#3B82F6', // blue\r\n      '#EF4444', // red\r\n      '#FFFFFF', // white\r\n      '#FBBF24', // yellow\r\n      '#8B5CF6', // purple\r\n    ];\r\n\r\n    const newSparks: Spark[] = [];\r\n\r\n    for (let i = 0; i < sparkCount; i++) {\r\n      newSparks.push({\r\n        id: i,\r\n        x: Math.random() * 100,\r\n        y: Math.random() * 100,\r\n        angle: Math.random() * 360,\r\n        length: 20 + Math.random() * 60,\r\n        delay: Math.random() * 0.3,\r\n        color: colors[Math.floor(Math.random() * colors.length)]\r\n      });\r\n    }\r\n\r\n    setSparks(newSparks);\r\n\r\n    // Auto cleanup after animation\r\n    setTimeout(() => {\r\n      setSparks([]);\r\n      onComplete?.();\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <div className=\"absolute inset-0 pointer-events-none overflow-hidden\">\r\n      <AnimatePresence>\r\n        {sparks.map((spark) => (\r\n          <motion.div\r\n            key={spark.id}\r\n            className=\"absolute\"\r\n            style={{\r\n              left: `${spark.x}%`,\r\n              top: `${spark.y}%`,\r\n              transform: `rotate(${spark.angle}deg)`,\r\n            }}\r\n            initial={{ opacity: 0, scale: 0 }}\r\n            animate={{ \r\n              opacity: [0, 1, 0.7, 0],\r\n              scale: [0, 1, 0.8, 0],\r\n              x: [0, Math.cos(spark.angle * Math.PI / 180) * spark.length],\r\n              y: [0, Math.sin(spark.angle * Math.PI / 180) * spark.length]\r\n            }}\r\n            transition={{\r\n              duration: 0.6,\r\n              delay: spark.delay,\r\n              ease: \"easeOut\"\r\n            }}\r\n          >\r\n            {/* Main spark line */}\r\n            <div\r\n              className=\"w-1 bg-gradient-to-r opacity-90 rounded-full shadow-lg\"\r\n              style={{\r\n                height: `${spark.length}px`,\r\n                backgroundColor: spark.color,\r\n                boxShadow: `0 0 8px ${spark.color}, 0 0 16px ${spark.color}40`\r\n              }}\r\n            />\r\n            \r\n            {/* Spark glow effect */}\r\n            <div\r\n              className=\"absolute top-0 left-0 w-1 blur-sm opacity-60 rounded-full\"\r\n              style={{\r\n                height: `${spark.length}px`,\r\n                backgroundColor: spark.color,\r\n              }}\r\n            />\r\n          </motion.div>\r\n        ))}\r\n      </AnimatePresence>\r\n\r\n      {/* Electric discharge effect - jagged lines */}\r\n      <AnimatePresence>\r\n        {isActive && (\r\n          <motion.svg\r\n            className=\"absolute inset-0 w-full h-full\"\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: [0, 1, 0.8, 0.2, 0.9, 0] }}\r\n            transition={{ duration: 0.8, times: [0, 0.1, 0.3, 0.5, 0.7, 1] }}\r\n          >\r\n            {/* Jagged lightning lines */}\r\n            {Array.from({ length: 3 }, (_, i) => {\r\n              const startX = 20 + Math.random() * 60;\r\n              const startY = 20 + Math.random() * 60;\r\n              const segments = 5 + Math.floor(Math.random() * 5);\r\n              \r\n              let path = `M ${startX} ${startY}`;\r\n              let currentX = startX;\r\n              let currentY = startY;\r\n              \r\n              for (let j = 0; j < segments; j++) {\r\n                currentX += (Math.random() - 0.5) * 40;\r\n                currentY += (Math.random() - 0.5) * 40;\r\n                path += ` L ${currentX} ${currentY}`;\r\n              }\r\n\r\n              return (\r\n                <motion.path\r\n                  key={i}\r\n                  d={path}\r\n                  stroke=\"#FFFFFF\"\r\n                  strokeWidth={Math.random() * 2 + 1}\r\n                  fill=\"none\"\r\n                  opacity={0.8}\r\n                  filter=\"drop-shadow(0 0 4px #3B82F6)\"\r\n                  initial={{ pathLength: 0 }}\r\n                  animate={{ pathLength: 1 }}\r\n                  transition={{ \r\n                    duration: 0.3,\r\n                    delay: i * 0.1,\r\n                    ease: \"easeOut\"\r\n                  }}\r\n                />\r\n              );\r\n            })}\r\n          </motion.svg>\r\n        )}\r\n      </AnimatePresence>\r\n\r\n      {/* Screen flash effect */}\r\n      <AnimatePresence>\r\n        {isActive && (\r\n          <motion.div\r\n            className=\"absolute inset-0 bg-white mix-blend-screen\"\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: [0, 0.4, 0.1, 0.3, 0] }}\r\n            transition={{ duration: 0.5, times: [0, 0.1, 0.3, 0.6, 1] }}\r\n          />\r\n        )}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useRef, useEffect } from 'react';\r\nimport { soundManager } from '../utils/soundManager';\r\n\r\ninterface SimpleVideoPlayerProps {\r\n  isActive: boolean;\r\n  onComplete?: () => void;\r\n}\r\n\r\nexport const SimpleVideoPlayer: React.FC<SimpleVideoPlayerProps> = ({ \r\n  isActive, \r\n  onComplete\r\n}) => {\r\n  const videoRef = useRef<HTMLVideoElement>(null);\r\n\r\n  useEffect(() => {\r\n    const video = videoRef.current;\r\n    if (!video) return;\r\n\r\n    console.log('SimpleVideoPlayer: Effect triggered', { isActive });\r\n\r\n    // Добавляем детальную диагностику\r\n    const logVideoState = () => {\r\n      console.log('SimpleVideoPlayer: Video state', {\r\n        src: video.src,\r\n        readyState: video.readyState,\r\n        networkState: video.networkState,\r\n        error: video.error,\r\n        canPlay: video.readyState >= 3\r\n      });\r\n    };\r\n\r\n    // Обработчики для диагностики\r\n    const handleLoadStart = () => console.log('SimpleVideoPlayer: loadstart');\r\n    const handleCanPlay = () => console.log('SimpleVideoPlayer: canplay');\r\n    const handleError = (e: Event) => {\r\n      console.error('SimpleVideoPlayer: Video error', (e.target as HTMLVideoElement).error);\r\n    };\r\n\r\n    video.addEventListener('loadstart', handleLoadStart);\r\n    video.addEventListener('canplay', handleCanPlay);\r\n    video.addEventListener('error', handleError);\r\n\r\n    logVideoState();\r\n\r\n    if (isActive) {\r\n      console.log('SimpleVideoPlayer: Starting video');\r\n      video.currentTime = 0;\r\n      video.style.display = 'block';\r\n      \r\n      // Воспроизводим звук тигра одновременно с видео\r\n      soundManager.playTigerSound().catch(error => {\r\n        console.warn('SimpleVideoPlayer: Failed to play tiger sound:', error);\r\n      });\r\n      \r\n      // Пытаемся воспроизвести видео после небольшой задержки\r\n      setTimeout(() => {\r\n        logVideoState();\r\n        video.play().then(() => {\r\n          console.log('SimpleVideoPlayer: Video started successfully');\r\n        }).catch(error => {\r\n          console.error('SimpleVideoPlayer: Play error:', error);\r\n        });\r\n      }, 100);\r\n\r\n      // Обработчик завершения\r\n      const handleEnded = () => {\r\n        console.log('SimpleVideoPlayer: Video ended');\r\n        video.style.display = 'none';\r\n        onComplete?.();\r\n      };\r\n\r\n      video.addEventListener('ended', handleEnded);\r\n      \r\n      return () => {\r\n        video.removeEventListener('ended', handleEnded);\r\n        video.removeEventListener('loadstart', handleLoadStart);\r\n        video.removeEventListener('canplay', handleCanPlay);\r\n        video.removeEventListener('error', handleError);\r\n      };\r\n    } else {\r\n      // Просто скрываем без остановки\r\n      video.style.display = 'none';\r\n    }\r\n  }, [isActive, onComplete]);\r\n\r\n  return (\r\n    <video\r\n      ref={videoRef}\r\n      src=\"/tigerrosette/Media/video/electric_shock.mp4\"\r\n      className=\"absolute inset-0 w-full h-full object-cover rounded-2xl\"\r\n      style={{ display: 'none' }}\r\n      muted\r\n      playsInline\r\n      preload=\"auto\"\r\n    />\r\n  );\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { useGameStore } from '../store/gameStore';\r\nimport { getOutletImageByLevel } from '../utils/levelSystem';\r\n\r\nexport const useOutletImageAnimation = () => {\r\n  const { player } = useGameStore();\r\n  const [currentImage, setCurrentImage] = useState(getOutletImageByLevel(player.level));\r\n  const [isAnimating, setIsAnimating] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const newImage = getOutletImageByLevel(player.level);\r\n    console.log(`Player level: ${player.level}, Image path: ${newImage}`);\r\n    \r\n    if (newImage !== currentImage) {\r\n      // Start animation\r\n      setIsAnimating(true);\r\n      \r\n      // Change image after a brief delay\r\n      setTimeout(() => {\r\n        setCurrentImage(newImage);\r\n        setIsAnimating(false);\r\n      }, 300);\r\n    }\r\n  }, [player.level, currentImage]);\r\n\r\n  return {\r\n    currentImage,\r\n    isAnimating\r\n  };\r\n};\r\n","import React, { useState, useCallback } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { useGameStore } from '../store/gameStore';\r\nimport { SparkEffect } from '../types/game';\r\nimport { soundManager } from '../utils/soundManager';\r\nimport { hapticManager } from '../utils/hapticManager';\r\nimport { calculateLevel } from '../utils/levelSystem';\r\nimport { ScorePopup } from './ScorePopup';\r\nimport { ElectricSparks } from './ElectricSparks';\r\nimport { SimpleVideoPlayer } from './SimpleVideoPlayer';\r\nimport { useOutletImageAnimation } from '../hooks/useOutletImageAnimation';\r\n\r\ninterface TigerOutletProps {\r\n  className?: string;\r\n  onShock?: () => void;\r\n}\r\n\r\nexport const TigerOutlet: React.FC<TigerOutletProps> = ({ className = '', onShock }) => {\r\n  const { \r\n    clickOutlet, \r\n    singleMode, \r\n    gameState,\r\n    player,\r\n    updateScore,\r\n    triggerShock\r\n  } = useGameStore();\r\n  \r\n  const { currentImage, isAnimating } = useOutletImageAnimation();\r\n  \r\n  const [sparks, setSparks] = useState<SparkEffect[]>([]);\r\n  const [isPressed, setIsPressed] = useState(false);\r\n  const [glowIntensity, setGlowIntensity] = useState(1);\r\n  const [isElectricShockActive, setIsElectricShockActive] = useState(false);\r\n  const [showShockVideo, setShowShockVideo] = useState(false);\r\n  const [scorePopup, setScorePopup] = useState<{\r\n    visible: boolean;\r\n    score: number;\r\n    reason: string;\r\n    type: 'success' | 'shock' | 'bonus';\r\n  }>({ visible: false, score: 0, reason: '', type: 'success' });\r\n\r\n  // Show score popup\r\n  const showScorePopup = useCallback((score: number, reason: string, type: 'success' | 'shock' | 'bonus') => {\r\n    setScorePopup({ visible: true, score, reason, type });\r\n    setTimeout(() => {\r\n      setScorePopup(prev => ({ ...prev, visible: false }));\r\n    }, 2000);\r\n  }, []);\r\n\r\n  // Handle video shock effect completion\r\n  const handleShockVideoComplete = useCallback(() => {\r\n    console.log('TigerOutlet: Shock video completed');\r\n    setShowShockVideo(false);\r\n  }, []);\r\n\r\n  // Create spark effect on click\r\n  const createSparks = useCallback((intensity: 'low' | 'medium' | 'high' | 'extreme') => {\r\n    const sparkCount = {\r\n      low: 3,\r\n      medium: 6,\r\n      high: 12,\r\n      extreme: 20\r\n    }[intensity];\r\n\r\n    const newSparks: SparkEffect[] = Array.from({ length: sparkCount }, (_, i) => ({\r\n      id: `spark-${Date.now()}-${i}`,\r\n      x: Math.random() * 200 - 100, // Random position around center\r\n      y: Math.random() * 200 - 100,\r\n      intensity,\r\n      timestamp: Date.now(),\r\n      duration: 300 + Math.random() * 200,\r\n      color: intensity === 'extreme' ? '#E8FF00' : \r\n             intensity === 'high' ? '#00D4FF' : \r\n             intensity === 'medium' ? '#8A2BE2' : '#FF6B35'\r\n    }));\r\n\r\n    setSparks(prev => [...prev, ...newSparks]);\r\n\r\n    // Remove sparks after animation\r\n    newSparks.forEach(spark => {\r\n      setTimeout(() => {\r\n        setSparks(prev => prev.filter(s => s.id !== spark.id));\r\n      }, spark.duration);\r\n    });\r\n  }, []);\r\n\r\n  // Handle outlet click\r\n  const handleClick = useCallback(() => {\r\n    if (!gameState.isPlaying) return;\r\n    \r\n    // ОСОБАЯ ЛОГИКА во время воспроизведения видео электрического разряда\r\n    if (showShockVideo) {\r\n      console.log('TigerOutlet: Click during shock video - applying additional penalty!');\r\n      \r\n      // Дополнительная вибрация за попытку кликнуть во время разряда\r\n      hapticManager.electricShock();\r\n      \r\n      // Звук дополнительного удара током\r\n      soundManager.generateShockSound();\r\n      \r\n      // Дополнительное снятие очков за каждый клик во время разряда\r\n      const penaltyData = {\r\n        basePoints: -20, // Большой штраф\r\n        riskMultiplier: 1,\r\n        streakBonus: 0,\r\n        timeBonus: 0,\r\n        totalPoints: -20,\r\n        reason: 'Клик во время разряда!'\r\n      };\r\n      \r\n      updateScore(penaltyData);\r\n      showScorePopup(penaltyData.totalPoints, penaltyData.reason, 'shock');\r\n      \r\n      // Дополнительные искры для показа урона\r\n      createSparks('extreme');\r\n      setGlowIntensity(4); // Максимальное свечение\r\n      \r\n      return; // Прекращаем обычную логику\r\n    }\r\n\r\n    // Предупреждающие вибрации в зависимости от уровня опасности\r\n    if (singleMode.warningSignsActive) {\r\n      if (singleMode.dangerLevel > 80) {\r\n        hapticManager.extremeDangerWarning();\r\n      } else if (singleMode.dangerLevel > 60) {\r\n        hapticManager.dangerWarning();\r\n      }\r\n    }\r\n\r\n    // Основная вибрация при нажатии\r\n    hapticManager.outletPress();\r\n\r\n    setIsPressed(true);\r\n    clickOutlet();\r\n\r\n    // Проверяем, происходит ли разряд электрика в момент клика\r\n    const isShocked = singleMode.isDischarging;\r\n    console.log('TigerOutlet: Click handled', { \r\n      isShocked, \r\n      dangerLevel: singleMode.dangerLevel, \r\n      isDischarging: singleMode.isDischarging,\r\n      currentRisk: singleMode.currentRisk,\r\n      gameState: gameState.isPlaying,\r\n      aiElectricianActive: singleMode.aiElectricianActive,\r\n      nextDischargeTime: singleMode.nextDischargeTime,\r\n      now: Date.now(),\r\n      timeUntilDischarge: singleMode.nextDischargeTime - Date.now(),\r\n      singleModeState: singleMode\r\n    });\r\n    \r\n    if (isShocked) {\r\n      console.log('TigerOutlet: Electric shock triggered!');\r\n      // Активируем эффект электрического разряда\r\n      setIsElectricShockActive(true);\r\n      setShowShockVideo(true); // Запускаем видео эффект\r\n      setGlowIntensity(3);\r\n      \r\n      // Trigger screen shake effect\r\n      onShock?.();\r\n      \r\n      // Запускаем вибрацию ТОЛЬКО в момент удара\r\n      hapticManager.electricShock();\r\n      \r\n      // Play shock sound\r\n      soundManager.generateShockSound();\r\n      \r\n      // Trigger shock with penalties (handled in store)\r\n      triggerShock();\r\n      \r\n      // Завершаем эффект разряда через 1 секунду\r\n      setTimeout(() => {\r\n        setIsElectricShockActive(false);\r\n      }, 1000);\r\n      \r\n      // Check for penalty message and show it\r\n      setTimeout(() => {\r\n        const penaltyMessage = (window as any).lastPenaltyMessage;\r\n        if (penaltyMessage) {\r\n          showScorePopup(0, penaltyMessage, 'shock');\r\n          (window as any).lastPenaltyMessage = null;\r\n        } else {\r\n          // Balanced penalty for electric shock based on level and risk\r\n          const currentLevel = calculateLevel(player.experience).level;\r\n          const basePenalty = currentLevel >= 3 ? -15 : 5; // Штраф для высоких уровней, награда для новичков\r\n          \r\n          const riskPenalty = {\r\n            low: 1.0,\r\n            medium: 1.5,\r\n            high: 2.0,\r\n            extreme: 2.5\r\n          }[singleMode.currentRisk];\r\n          \r\n          const finalPenalty = currentLevel >= 3 ? \r\n            Math.floor(basePenalty * riskPenalty) : \r\n            basePenalty + Math.floor(Math.random() * 10); // 5-15 очков для новичков\r\n          \r\n          const scoreData = {\r\n            basePoints: basePenalty,\r\n            riskMultiplier: riskPenalty,\r\n            streakBonus: 0,\r\n            timeBonus: 0,\r\n            totalPoints: finalPenalty,\r\n            reason: 'Поражение током'\r\n          };\r\n          \r\n          updateScore(scoreData);\r\n          showScorePopup(scoreData.totalPoints, scoreData.reason, 'shock');\r\n        }\r\n      }, 100);\r\n    } else {\r\n      // Success effect with haptic feedback\r\n      const intensity = singleMode.currentRisk === 'extreme' ? 'extreme' :\r\n                       singleMode.currentRisk === 'high' ? 'high' :\r\n                       singleMode.currentRisk === 'medium' ? 'medium' : 'low';\r\n      \r\n      createSparks(intensity);\r\n      setGlowIntensity(2);\r\n\r\n      // Вибрация успешного выживания\r\n      hapticManager.survivalSuccess();\r\n\r\n      // Play spark sound based on intensity\r\n      soundManager.generateSparkSound(intensity);\r\n\r\n      // Calculate success score - More balanced scoring\r\n      const basePoints = 5; // Уменьшено с 10 до 5\r\n      const riskMultiplier = {\r\n        low: 1.0,\r\n        medium: 2.0,    // Увеличено с 1.5 до 2.0\r\n        high: 3.5,      // Увеличено с 2.0 до 3.5\r\n        extreme: 6.0    // Увеличено с 3.0 до 6.0\r\n      }[singleMode.currentRisk];\r\n\r\n      const streakBonus = singleMode.streakCount >= 50 ? 4.0 :  // Новый уровень\r\n                         singleMode.streakCount >= 25 ? 3.0 :\r\n                         singleMode.streakCount >= 10 ? 2.0 :\r\n                         singleMode.streakCount >= 5 ? 1.5 : 1.0;\r\n\r\n      const totalPoints = Math.floor(basePoints * riskMultiplier * streakBonus);\r\n\r\n      const scoreData = {\r\n        basePoints,\r\n        riskMultiplier,\r\n        streakBonus,\r\n        timeBonus: 0,\r\n        totalPoints,\r\n        reason: `Выживание (${singleMode.currentRisk} риск)`\r\n      };\r\n\r\n      updateScore(scoreData);\r\n      showScorePopup(scoreData.totalPoints, scoreData.reason, 'success');\r\n      \r\n      // Дополнительная вибрация для серий достижений\r\n      if (singleMode.streakCount > 0 && singleMode.streakCount % 5 === 0) {\r\n        hapticManager.streakAchievement(singleMode.streakCount);\r\n      }\r\n    }\r\n\r\n    // Reset visual effects\r\n    setTimeout(() => {\r\n      setIsPressed(false);\r\n      setGlowIntensity(1);\r\n    }, 200);\r\n  }, [gameState.isPlaying, singleMode, clickOutlet, createSparks, updateScore]);\r\n\r\n  return (\r\n    <div className={`relative ${className}`}>\r\n      {/* Danger Warning during shock */}\r\n      {showShockVideo && (\r\n        <motion.div\r\n          className=\"absolute inset-0 flex items-center justify-center pointer-events-none z-20\"\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: [0, 1, 0] }}\r\n          transition={{ duration: 0.5, repeat: Infinity }}\r\n        >\r\n          <div className=\"bg-red-600/80 text-white px-4 py-2 rounded-lg border-2 border-red-300 font-bold text-sm\">\r\n            ⚡ DANGER! -20 points per click ⚡\r\n          </div>\r\n        </motion.div>\r\n      )}\r\n\r\n      {/* Main Outlet Button */}\r\n      <motion.button\r\n        onClick={handleClick}\r\n        disabled={!gameState.isPlaying} // Убираем блокировку во время видео\r\n        className={`relative w-64 h-64 rounded-2xl overflow-hidden bg-gray-800 ${\r\n          showShockVideo ? 'cursor-pointer animate-pulse' : 'cursor-pointer'\r\n        }`}\r\n        style={{\r\n          opacity: !gameState.isPlaying ? 0.5 : 1,\r\n          boxShadow: showShockVideo \r\n            ? `0 0 ${40 * glowIntensity}px rgba(255, 0, 0, 0.8)` // Красное свечение во время разряда\r\n            : `0 0 ${20 * glowIntensity}px rgba(255, 107, 53, ${0.5 * glowIntensity})`\r\n        }}\r\n        whileTap={{ scale: 0.95 }} // Возвращаем анимацию\r\n        whileHover={{ scale: 1.05 }}\r\n        animate={{\r\n          scale: isPressed ? 0.9 : showShockVideo ? [1, 1.05, 1] : 1, // Пульсация во время разряда\r\n          filter: `brightness(${glowIntensity}) saturate(${glowIntensity})`,\r\n          rotateY: isAnimating ? [0, 180, 360] : 0\r\n        }}\r\n        transition={{\r\n          rotateY: { duration: 0.6, ease: \"easeInOut\" },\r\n          scale: showShockVideo ? { duration: 0.3, repeat: Infinity } : { duration: 0.1 }\r\n        }}\r\n      >\r\n        {/* Main Content - Image or Video */}\r\n        {showShockVideo ? (\r\n          /* Electric Shock Video - заменяет изображение */\r\n          <SimpleVideoPlayer\r\n            isActive={showShockVideo}\r\n            onComplete={handleShockVideoComplete}\r\n          />\r\n        ) : (\r\n          /* Main Outlet Image */\r\n          <img \r\n            src={currentImage} \r\n            alt=\"Tiger Outlet\" \r\n            className=\"absolute inset-0 w-full h-full object-cover rounded-2xl\"\r\n            onError={(e) => {\r\n              console.error('Image failed to load:', currentImage);\r\n              console.error('Error event:', e);\r\n              console.error('Current window location:', window.location.href);\r\n              console.error('Trying full path:', `${window.location.origin}${currentImage}`);\r\n              // Fallback to a solid background\r\n              e.currentTarget.style.display = 'none';\r\n            }}\r\n            onLoad={() => {\r\n              console.log('Image loaded successfully:', currentImage);\r\n            }}\r\n          />\r\n        )}\r\n        \r\n        {/* Индикатор блокировки во время видео */}\r\n        {showShockVideo && (\r\n          <motion.div\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            className=\"absolute inset-0 bg-red-500/20 rounded-2xl flex items-center justify-center z-10\"\r\n          >\r\n            <div className=\"bg-red-600 text-white px-3 py-1 rounded-full text-xs font-bold\">\r\n              ⚡ РАЗРЯД ⚡\r\n            </div>\r\n          </motion.div>\r\n        )}\r\n        \r\n        {/* Tiger Stripes Overlay */}\r\n        <div className=\"absolute inset-0 tiger-stripes opacity-20 mix-blend-overlay\" />\r\n        \r\n        {/* Electric Glow Effect */}\r\n        <motion.div\r\n          className=\"absolute inset-0 rounded-2xl\"\r\n          animate={{\r\n            boxShadow: singleMode.warningSignsActive \r\n              ? `0 0 ${30 * glowIntensity}px #FF0000, inset 0 0 ${30 * glowIntensity}px #FF0000`\r\n              : `0 0 ${15 * glowIntensity}px #FF6B35, inset 0 0 ${15 * glowIntensity}px #FF6B35`\r\n          }}\r\n          transition={{ duration: singleMode.warningSignsActive ? 0.1 : 0.2 }}\r\n        />\r\n\r\n        {/* Danger Level Indicator */}\r\n        {singleMode.dangerLevel > 50 && (\r\n          <motion.div\r\n            className=\"absolute -top-12 left-1/2 transform -translate-x-1/2\"\r\n            initial={{ opacity: 0, scale: 0 }}\r\n            animate={{ \r\n              opacity: [0.7, 1, 0.7, 1],\r\n              scale: [0.8, 1.2, 0.8, 1.2]\r\n            }}\r\n            transition={{ \r\n              duration: 1,\r\n              repeat: Infinity,\r\n              ease: \"easeInOut\"\r\n            }}\r\n          >\r\n            <div className={`px-2 py-1 rounded-full text-xs font-bold ${\r\n              singleMode.dangerLevel > 80 ? 'bg-red-500 text-white' :\r\n              singleMode.dangerLevel > 70 ? 'bg-orange-500 text-white' :\r\n              'bg-yellow-500 text-black'\r\n            }`}>\r\n              {singleMode.dangerLevel > 80 ? '🔴 КРИТИЧНО' :\r\n               singleMode.dangerLevel > 70 ? '🟠 ОПАСНО' :\r\n               '🟡 РИСК'}\r\n            </div>\r\n          </motion.div>\r\n        )}\r\n\r\n        {/* Electric Shock Effects */}\r\n        <ElectricSparks \r\n          isActive={isElectricShockActive}\r\n          intensity=\"extreme\"\r\n          onComplete={() => setIsElectricShockActive(false)}\r\n        />\r\n      </motion.button>\r\n\r\n      {/* Spark Effects */}\r\n      <AnimatePresence>\r\n        {sparks.map((spark) => (\r\n          <motion.div\r\n            key={spark.id}\r\n            className=\"absolute w-2 h-2 rounded-full pointer-events-none\"\r\n            style={{\r\n              backgroundColor: spark.color,\r\n              boxShadow: `0 0 10px ${spark.color}`,\r\n              left: '50%',\r\n              top: '50%'\r\n            }}\r\n            initial={{\r\n              x: 0,\r\n              y: 0,\r\n              scale: 0,\r\n              opacity: 1\r\n            }}\r\n            animate={{\r\n              x: spark.x,\r\n              y: spark.y,\r\n              scale: [0, 1.5, 0.8, 0],\r\n              opacity: [1, 1, 0.5, 0],\r\n              rotate: [0, 180, 360]\r\n            }}\r\n            transition={{\r\n              duration: spark.duration / 1000,\r\n              ease: 'easeOut'\r\n            }}\r\n          />\r\n        ))}\r\n      </AnimatePresence>\r\n\r\n      {/* Risk Level Indicator */}\r\n      <div className=\"absolute -bottom-8 left-1/2 transform -translate-x-1/2\">\r\n        <div className={`px-3 py-1 rounded-full text-xs font-bold ${\r\n          singleMode.currentRisk === 'extreme' ? 'bg-red-500 text-white' :\r\n          singleMode.currentRisk === 'high' ? 'bg-orange-500 text-white' :\r\n          singleMode.currentRisk === 'medium' ? 'bg-yellow-500 text-black' :\r\n          'bg-green-500 text-white'\r\n        }`}>\r\n          {singleMode.currentRisk === 'extreme' ? 'ЭКСТРИМ' :\r\n           singleMode.currentRisk === 'high' ? 'ВЫСОКИЙ' :\r\n           singleMode.currentRisk === 'medium' ? 'СРЕДНИЙ' : 'НИЗКИЙ'} РИСК\r\n        </div>\r\n      </div>\r\n\r\n      {/* Score Popup */}\r\n      <ScorePopup\r\n        score={scorePopup.score}\r\n        reason={scorePopup.reason}\r\n        isVisible={scorePopup.visible}\r\n        position={{ x: 0, y: -32 }}\r\n        type={scorePopup.type}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { useGameStore } from '../store/gameStore';\r\nimport { soundManager } from '../utils/soundManager';\r\nimport { hapticManager } from '../utils/hapticManager';\r\n\r\ninterface CounterAttackButtonProps {\r\n  className?: string;\r\n  disabled?: boolean;\r\n}\r\n\r\nexport const CounterAttackButton: React.FC<CounterAttackButtonProps> = ({ \r\n  className = '', \r\n  disabled = false \r\n}) => {\r\n  const { \r\n    player, \r\n    singleMode, \r\n    aiElectrician,\r\n    damageAIElectrician,\r\n    gameState \r\n  } = useGameStore();\r\n  \r\n  const [isAttacking, setIsAttacking] = useState(false);\r\n  const [cooldown, setCooldown] = useState(0);\r\n  const [showEffect, setShowEffect] = useState(false);\r\n\r\n  // Стоимость атаки\r\n  const attackCost = 50;\r\n\r\n  // Проверяем, можно ли атаковать\r\n  const canAttack = gameState.isPlaying && \r\n                   singleMode.aiElectricianActive && \r\n                   aiElectrician.isActive &&\r\n                   !disabled && \r\n                   cooldown === 0 &&\r\n                   player.volts >= attackCost;\r\n\r\n  const handleCounterAttack = async () => {\r\n    if (!canAttack || isAttacking) return;\r\n\r\n    setIsAttacking(true);\r\n    setShowEffect(true);\r\n\r\n    // Звуки и вибрация атаки\r\n    hapticManager.electricShock();\r\n    soundManager.generateShockSound();\r\n    \r\n    // Наносим урон ИИ электрику\r\n    const damage = Math.random() * 20 + 10; // 10-30 урона\r\n    damageAIElectrician('energy', damage, true); // Указываем что это атака игрока\r\n    \r\n    // Иногда повреждаем оборудование\r\n    if (Math.random() < 0.3) {\r\n      damageAIElectrician('equipment', Math.random() * 10 + 5, true);\r\n    }\r\n\r\n    // Уменьшаем вольты игрока\r\n    const state = useGameStore.getState();\r\n    useGameStore.setState({\r\n      player: {\r\n        ...state.player,\r\n        volts: Math.max(0, state.player.volts - attackCost)\r\n      }\r\n    });\r\n\r\n    // Устанавливаем кулдаун (10 секунд)\r\n    setCooldown(10);\r\n    const cooldownInterval = setInterval(() => {\r\n      setCooldown(prev => {\r\n        if (prev <= 1) {\r\n          clearInterval(cooldownInterval);\r\n          return 0;\r\n        }\r\n        return prev - 1;\r\n      });\r\n    }, 1000);\r\n\r\n    // Убираем эффект через 1 секунду\r\n    setTimeout(() => {\r\n      setShowEffect(false);\r\n      setIsAttacking(false);\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <div className={`relative ${className}`}>\r\n      {/* Эффект контратаки */}\r\n      <AnimatePresence>\r\n        {showEffect && (\r\n          <motion.div\r\n            className=\"absolute inset-0 pointer-events-none z-10\"\r\n            initial={{ scale: 0, rotate: 0 }}\r\n            animate={{ \r\n              scale: [0, 1.5, 1], \r\n              rotate: [0, 180, 360],\r\n              opacity: [0, 1, 0]\r\n            }}\r\n            exit={{ opacity: 0 }}\r\n            transition={{ duration: 1 }}\r\n          >\r\n            <div className=\"w-full h-full bg-yellow-400 rounded-full shadow-lg flex items-center justify-center\">\r\n              <span className=\"text-2xl\">⚡</span>\r\n            </div>\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n\r\n      {/* Основная кнопка */}\r\n      <motion.button\r\n        onClick={handleCounterAttack}\r\n        disabled={!canAttack || isAttacking}\r\n        className={`\r\n          relative w-16 h-16 rounded-full border-2 transition-all duration-200\r\n          ${canAttack \r\n            ? 'bg-gradient-to-br from-yellow-400 to-orange-500 border-yellow-300 shadow-lg hover:shadow-xl cursor-pointer' \r\n            : 'bg-gray-600 border-gray-500 cursor-not-allowed opacity-50'\r\n          }\r\n          ${cooldown > 0 ? 'animate-pulse' : ''}\r\n        `}\r\n        whileTap={canAttack ? { scale: 0.9 } : {}}\r\n        whileHover={canAttack ? { scale: 1.1, rotate: 5 } : {}}\r\n        style={{\r\n          boxShadow: canAttack \r\n            ? `0 0 20px rgba(255, 193, 7, 0.6)` \r\n            : 'none'\r\n        }}\r\n      >\r\n        {/* Иконка */}\r\n        <div className=\"flex items-center justify-center w-full h-full\">\r\n          {cooldown > 0 ? (\r\n            <span className=\"text-white font-bold text-sm\">{cooldown}</span>\r\n          ) : (\r\n            <span className=\"text-2xl\">\r\n              {isAttacking ? '💥' : player.level >= 5 ? '⚡' : '🦷'}\r\n            </span>\r\n          )}\r\n        </div>\r\n\r\n        {/* Индикатор стоимости */}\r\n        {canAttack && (\r\n          <div className=\"absolute -bottom-2 left-1/2 transform -translate-x-1/2\">\r\n            <div className=\"bg-black/80 text-white text-xs px-1 py-0.5 rounded\">\r\n              -{attackCost}⚡\r\n            </div>\r\n          </div>\r\n        )}\r\n      </motion.button>\r\n\r\n      {/* Тултип */}\r\n      {!canAttack && !isAttacking && (\r\n        <div className=\"absolute -top-12 left-1/2 transform -translate-x-1/2 pointer-events-none\">\r\n          <div className=\"bg-black/80 text-white text-xs px-2 py-1 rounded whitespace-nowrap\">\r\n            {player.volts < attackCost \r\n              ? `Нужно ${attackCost - player.volts} вольт` \r\n              : !gameState.isPlaying \r\n              ? 'Игра не запущена'\r\n              : !singleMode.aiElectricianActive\r\n              ? 'ИИ электрик неактивен'\r\n              : 'Контратака недоступна'\r\n            }\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { useGameApi, useOfflineMode } from '../hooks/useGameApi';\r\n\r\ninterface ConnectionStatusProps {\r\n  className?: string;\r\n}\r\n\r\nexport const ConnectionStatus: React.FC<ConnectionStatusProps> = ({ className = '' }) => {\r\n  const { isAuthenticated } = useGameApi();\r\n  const { isOnline } = useOfflineMode();\r\n\r\n  const getStatusInfo = () => {\r\n    if (!isOnline) {\r\n      return {\r\n        text: 'Нет подключения',\r\n        color: 'text-red-400',\r\n        icon: '❌',\r\n        bgColor: 'bg-red-500/10'\r\n      };\r\n    }\r\n\r\n    if (!isAuthenticated) {\r\n      return {\r\n        text: 'Автономный режим',\r\n        color: 'text-yellow-400',\r\n        icon: '⚠️',\r\n        bgColor: 'bg-yellow-500/10'\r\n      };\r\n    }\r\n\r\n    return {\r\n      text: 'Подключено к серверу',\r\n      color: 'text-green-400',\r\n      icon: '✅',\r\n      bgColor: 'bg-green-500/10'\r\n    };\r\n  };\r\n\r\n  const status = getStatusInfo();\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, scale: 0.9 }}\r\n      animate={{ opacity: 1, scale: 1 }}\r\n      className={`glass-effect p-2 rounded-lg ${status.bgColor} ${className}`}\r\n    >\r\n      <div className=\"flex items-center space-x-2\">\r\n        <span className=\"text-sm\">{status.icon}</span>\r\n        <span className={`text-xs font-medium ${status.color}`}>\r\n          {status.text}\r\n        </span>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { useGameStore } from '../store/gameStore';\r\nimport { ConnectionStatus } from './ConnectionStatus';\r\n\r\nexport const GameHUD: React.FC = () => {\r\n  const { player, gameState, singleMode, aiElectrician, repairAIElectrician } = useGameStore();\r\n\r\n  return (\r\n    <div className=\"fixed top-0 left-0 right-0 z-10 bg-black/20 backdrop-blur-sm border-b border-white/10\">\r\n      <div className=\"flex justify-between items-center p-4\">\r\n        {/* Score Display */}\r\n        <div className=\"flex items-center space-x-4\">\r\n          <motion.div \r\n            className=\"glass-effect px-4 py-2\"\r\n            whileHover={{ scale: 1.05 }}\r\n          >\r\n            <div className=\"text-xs text-gray-300\">СЧЁТ</div>\r\n            <div className=\"text-xl font-bold text-accent-lime\">\r\n              {gameState.score.toLocaleString()}\r\n            </div>\r\n          </motion.div>\r\n          \r\n          <motion.div \r\n            className=\"glass-effect px-4 py-2\"\r\n            whileHover={{ scale: 1.05 }}\r\n          >\r\n            <div className=\"text-xs text-gray-300\">ВОЛЬТЫ</div>\r\n            <div className=\"text-xl font-bold text-primary-orange\">\r\n              {player.volts.toLocaleString()}⚡\r\n            </div>\r\n          </motion.div>\r\n        </div>\r\n\r\n        {/* Streak Counter */}\r\n        <div className=\"text-center\">\r\n          <motion.div \r\n            className=\"glass-effect px-4 py-2\"\r\n            animate={{ \r\n              scale: singleMode.streakCount > 0 ? [1, 1.1, 1] : 1,\r\n              boxShadow: singleMode.streakCount >= 5 \r\n                ? '0 0 20px #E8FF00' \r\n                : '0 0 10px rgba(255,255,255,0.2)'\r\n            }}\r\n            transition={{ duration: 0.3 }}\r\n          >\r\n            <div className=\"text-xs text-gray-300\">СЕРИЯ</div>\r\n            <div className={`text-xl font-bold ${\r\n              singleMode.streakCount >= 25 ? 'text-red-400' :\r\n              singleMode.streakCount >= 10 ? 'text-orange-400' :\r\n              singleMode.streakCount >= 5 ? 'text-yellow-400' :\r\n              'text-white'\r\n            }`}>\r\n              {singleMode.streakCount}\r\n            </div>\r\n          </motion.div>\r\n        </div>\r\n\r\n        {/* Difficulty & Stats */}\r\n        <div className=\"flex items-center space-x-4\">\r\n          <motion.div \r\n            className=\"glass-effect px-4 py-2\"\r\n            whileHover={{ scale: 1.05 }}\r\n            animate={{\r\n              opacity: player.luckIndicatorHidden && Date.now() < player.luckHiddenUntil ? 0.3 : 1\r\n            }}\r\n            transition={{ duration: 0.3 }}\r\n          >\r\n            <div className=\"text-xs text-gray-300\">УДАЧА</div>\r\n            <div className={`text-sm font-bold ${\r\n              player.luckIndicatorHidden && Date.now() < player.luckHiddenUntil ? \r\n                'text-gray-500' :\r\n                player.luckCoefficient >= 70 ? 'text-green-400' :\r\n                player.luckCoefficient >= 50 ? 'text-yellow-400' :\r\n                player.luckCoefficient >= 30 ? 'text-orange-400' :\r\n                'text-red-400'\r\n            }`}>\r\n              {player.luckIndicatorHidden && Date.now() < player.luckHiddenUntil ? \r\n                '???' : \r\n                `${player.luckCoefficient}%`\r\n              }\r\n            </div>\r\n          </motion.div>\r\n\r\n          <motion.div \r\n            className=\"glass-effect px-4 py-2\"\r\n            whileHover={{ scale: 1.05 }}\r\n          >\r\n            <div className=\"text-xs text-gray-300\">СЛОЖНОСТЬ</div>\r\n            <div className={`text-sm font-bold ${\r\n              singleMode.difficulty === 'extreme' ? 'text-red-400' :\r\n              singleMode.difficulty === 'hard' ? 'text-orange-400' :\r\n              singleMode.difficulty === 'medium' ? 'text-yellow-400' :\r\n              'text-green-400'\r\n            }`}>\r\n              {singleMode.difficulty === 'extreme' ? 'ЭКСТРИМ' :\r\n               singleMode.difficulty === 'hard' ? 'СЛОЖНЫЙ' :\r\n               singleMode.difficulty === 'medium' ? 'СРЕДНИЙ' : 'ЛЁГКИЙ'}\r\n            </div>\r\n          </motion.div>\r\n\r\n          <motion.div \r\n            className=\"glass-effect px-4 py-2\"\r\n            whileHover={{ scale: 1.05 }}\r\n            animate={{\r\n              boxShadow: singleMode.dangerLevel > 80 ? '0 0 20px #ff4444' :\r\n                        singleMode.dangerLevel > 60 ? '0 0 15px #ff8800' :\r\n                        singleMode.dangerLevel > 40 ? '0 0 10px #ffaa00' :\r\n                        '0 0 5px rgba(255,255,255,0.2)'\r\n            }}\r\n          >\r\n            <div className=\"text-xs text-gray-300\">ОПАСНОСТЬ</div>\r\n            <div className={`text-sm font-bold ${\r\n              singleMode.dangerLevel > 80 ? 'text-red-400' :\r\n              singleMode.dangerLevel > 60 ? 'text-orange-400' :\r\n              singleMode.dangerLevel > 40 ? 'text-yellow-400' :\r\n              'text-green-400'\r\n            }`}>\r\n              {singleMode.dangerLevel}%\r\n            </div>\r\n          </motion.div>\r\n\r\n          {/* AI Electrician Status */}\r\n          <motion.div \r\n            className=\"glass-effect px-4 py-2\"\r\n            whileHover={{ scale: 1.05 }}\r\n            animate={{\r\n              boxShadow: singleMode.isDischarging ? '0 0 20px #ff0000' :\r\n                        singleMode.warningSignsActive ? '0 0 15px #ff8800' :\r\n                        singleMode.aiElectricianActive ? '0 0 10px #00ffff' :\r\n                        '0 0 5px rgba(255,255,255,0.2)',\r\n              scale: singleMode.isDischarging ? [1, 1.05, 1] : 1\r\n            }}\r\n            transition={{ duration: 0.3, repeat: singleMode.isDischarging ? Infinity : 0 }}\r\n          >\r\n            <div className=\"text-xs text-gray-300\">ИИ ЭЛЕКТРИК</div>\r\n            <div className={`text-sm font-bold ${\r\n              singleMode.isDischarging ? 'text-red-400' :\r\n              singleMode.warningSignsActive ? 'text-orange-400' :\r\n              singleMode.aiElectricianActive ? 'text-cyan-400' :\r\n              'text-gray-500'\r\n            }`}>\r\n              {singleMode.isDischarging ? '⚡ РАЗРЯД!' :\r\n               singleMode.warningSignsActive ? '⚠️ ВНИМАНИЕ!' :\r\n               singleMode.aiElectricianActive ? '🤖 АКТИВЕН' :\r\n               '😴 СПИТ'}\r\n            </div>\r\n          </motion.div>\r\n\r\n          <motion.div \r\n            className=\"glass-effect px-4 py-2\"\r\n            whileHover={{ scale: 1.05 }}\r\n          >\r\n            <div className=\"text-xs text-gray-300\">НАЖАТИЙ</div>\r\n            <div className=\"text-lg font-bold text-accent-blue\">\r\n              {player.totalClicks}\r\n            </div>\r\n          </motion.div>\r\n\r\n          {/* Connection Status */}\r\n          <ConnectionStatus />\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Warning Banner */}\r\n      {singleMode.warningSignsActive && (\r\n        <motion.div\r\n          className=\"bg-yellow-500/80 text-black px-4 py-2 text-center font-bold\"\r\n          initial={{ opacity: 0, y: -20 }}\r\n          animate={{ \r\n            opacity: [0, 1, 0.7, 1, 0.7, 1], \r\n            y: 0 \r\n          }}\r\n          transition={{ duration: 0.5 }}\r\n        >\r\n          ⚠️ ОПАСНОСТЬ! ВЫСОКИЙ РИСК РАЗРЯДА! ⚠️\r\n        </motion.div>\r\n      )}\r\n\r\n      {/* Danger Level Indicator */}\r\n      {singleMode.dangerLevel > 30 && (\r\n        <motion.div\r\n          className={`px-4 py-1 text-center text-xs font-semibold ${\r\n            singleMode.dangerLevel > 70 ? 'bg-red-500/60 text-white' :\r\n            singleMode.dangerLevel > 50 ? 'bg-orange-500/60 text-white' :\r\n            'bg-yellow-500/60 text-black'\r\n          }`}\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          transition={{ duration: 0.3 }}\r\n        >\r\n          🔥 УРОВЕНЬ ОПАСНОСТИ: {singleMode.dangerLevel}% 🔥\r\n        </motion.div>\r\n      )}\r\n      \r\n      {/* AI Electrician Detailed Status */}\r\n      {singleMode.aiElectricianActive && (\r\n        <motion.div\r\n          className=\"bg-black/40 border-t border-white/10 px-4 py-3\"\r\n          initial={{ opacity: 0, y: -10 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.3 }}\r\n        >\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center space-x-4\">\r\n              {/* AI Electrician Name and Message */}\r\n              <div className=\"text-sm\">\r\n                <div className=\"text-cyan-400 font-bold\">⚡ {aiElectrician.name}</div>\r\n                <div className={`text-xs ${\r\n                  aiElectrician.mood === 'confident' ? 'text-green-400' :\r\n                  aiElectrician.mood === 'frustrated' ? 'text-orange-400' :\r\n                  aiElectrician.mood === 'tired' ? 'text-yellow-400' :\r\n                  aiElectrician.mood === 'broken' ? 'text-red-400' :\r\n                  'text-red-600'\r\n                }`}>\r\n                  {aiElectrician.lastMessage}\r\n                </div>\r\n              </div>\r\n\r\n              {/* Energy Bar */}\r\n              <div className=\"flex flex-col items-center\">\r\n                <div className=\"text-xs text-gray-300 mb-1\">ЭНЕРГИЯ</div>\r\n                <div className=\"w-20 h-2 bg-gray-700 rounded-full overflow-hidden\">\r\n                  <motion.div\r\n                    className={`h-full rounded-full ${\r\n                      aiElectrician.energy > 60 ? 'bg-green-500' :\r\n                      aiElectrician.energy > 30 ? 'bg-yellow-500' :\r\n                      'bg-red-500'\r\n                    }`}\r\n                    initial={{ width: 0 }}\r\n                    animate={{ width: `${aiElectrician.energy}%` }}\r\n                    transition={{ duration: 0.5 }}\r\n                  />\r\n                </div>\r\n                <div className=\"text-xs text-white\">{Math.round(aiElectrician.energy)}%</div>\r\n              </div>\r\n\r\n              {/* Equipment Status */}\r\n              <div className=\"flex space-x-2\">\r\n                <div className=\"text-center\">\r\n                  <div className=\"text-xs text-gray-300\">БАТ</div>\r\n                  <div className={`text-xs font-bold ${\r\n                    aiElectrician.equipment.battery > 70 ? 'text-green-400' :\r\n                    aiElectrician.equipment.battery > 30 ? 'text-yellow-400' :\r\n                    'text-red-400'\r\n                  }`}>\r\n                    {Math.round(aiElectrician.equipment.battery)}%\r\n                  </div>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                  <div className=\"text-xs text-gray-300\">КОН</div>\r\n                  <div className={`text-xs font-bold ${\r\n                    aiElectrician.equipment.capacitor > 70 ? 'text-green-400' :\r\n                    aiElectrician.equipment.capacitor > 30 ? 'text-yellow-400' :\r\n                    'text-red-400'\r\n                  }`}>\r\n                    {Math.round(aiElectrician.equipment.capacitor)}%\r\n                  </div>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                  <div className=\"text-xs text-gray-300\">ПРВ</div>\r\n                  <div className={`text-xs font-bold ${\r\n                    aiElectrician.equipment.wires > 70 ? 'text-green-400' :\r\n                    aiElectrician.equipment.wires > 30 ? 'text-yellow-400' :\r\n                    'text-red-400'\r\n                  }`}>\r\n                    {Math.round(aiElectrician.equipment.wires)}%\r\n                  </div>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                  <div className=\"text-xs text-gray-300\">ГЕН</div>\r\n                  <div className={`text-xs font-bold ${\r\n                    aiElectrician.equipment.generator > 70 ? 'text-green-400' :\r\n                    aiElectrician.equipment.generator > 30 ? 'text-yellow-400' :\r\n                    'text-red-400'\r\n                  }`}>\r\n                    {Math.round(aiElectrician.equipment.generator)}%\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Working Efficiency */}\r\n              <div className=\"text-center\">\r\n                <div className=\"text-xs text-gray-300\">ЭФФЕКТ</div>\r\n                <div className={`text-sm font-bold ${\r\n                  aiElectrician.workingEfficiency > 80 ? 'text-green-400' :\r\n                  aiElectrician.workingEfficiency > 50 ? 'text-yellow-400' :\r\n                  'text-red-400'\r\n                }`}>\r\n                  {Math.round(aiElectrician.workingEfficiency)}%\r\n                </div>\r\n              </div>\r\n\r\n              {/* Success/Failure Stats */}\r\n              <div className=\"text-center\">\r\n                <div className=\"text-xs text-gray-300\">УСПЕХ/НЕУДАЧ</div>\r\n                <div className=\"text-xs text-green-400\">{aiElectrician.successfulDischarges}</div>\r\n                <div className=\"text-xs text-red-400\">{aiElectrician.failuresCount}</div>\r\n              </div>\r\n\r\n              {/* Working Status */}\r\n              <div className=\"text-center\">\r\n                <div className={`text-sm font-bold ${\r\n                  aiElectrician.canWork ? 'text-green-400' : 'text-red-400'\r\n                }`}>\r\n                  {aiElectrician.canWork ? '✅ РАБОТАЕТ' : '❌ НЕ РАБОТАЕТ'}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Repair Controls */}\r\n            <div className=\"flex space-x-2 mt-2\">\r\n              <motion.button\r\n                className=\"glass-effect px-3 py-1 text-xs text-green-400 hover:text-green-300 disabled:text-gray-500 disabled:cursor-not-allowed\"\r\n                onClick={() => {\r\n                  if (player.volts >= 50) {\r\n                    repairAIElectrician('energy');\r\n                    useGameStore.getState().updatePlayerStats({ volts: player.volts - 50 });\r\n                  }\r\n                }}\r\n                disabled={player.volts < 50 || aiElectrician.energy >= 90}\r\n                whileHover={{ scale: 1.05 }}\r\n                whileTap={{ scale: 0.95 }}\r\n              >\r\n                ⚡ Зарядить (50⚡)\r\n              </motion.button>\r\n              \r\n              <motion.button\r\n                className=\"glass-effect px-3 py-1 text-xs text-blue-400 hover:text-blue-300 disabled:text-gray-500 disabled:cursor-not-allowed\"\r\n                onClick={() => {\r\n                  if (player.volts >= 100) {\r\n                    repairAIElectrician('equipment');\r\n                    useGameStore.getState().updatePlayerStats({ volts: player.volts - 100 });\r\n                  }\r\n                }}\r\n                disabled={player.volts < 100 || Object.values(aiElectrician.equipment).every(val => val >= 95)}\r\n                whileHover={{ scale: 1.05 }}\r\n                whileTap={{ scale: 0.95 }}\r\n              >\r\n                🔧 Починить (100⚡)\r\n              </motion.button>\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { motion } from 'framer-motion';\r\n\r\ninterface ScreenShakeProps {\r\n  isActive: boolean;\r\n  intensity?: 'low' | 'medium' | 'high' | 'extreme';\r\n  duration?: number;\r\n  onComplete?: () => void;\r\n}\r\n\r\nexport const ScreenShake: React.FC<ScreenShakeProps> = ({\r\n  isActive,\r\n  intensity = 'medium',\r\n  duration = 500,\r\n  onComplete\r\n}) => {\r\n  const shakeAmount = {\r\n    low: 5,\r\n    medium: 10,\r\n    high: 15,\r\n    extreme: 20\r\n  }[intensity];\r\n\r\n  useEffect(() => {\r\n    if (isActive && onComplete) {\r\n      const timer = setTimeout(onComplete, duration);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [isActive, duration, onComplete]);\r\n\r\n  if (!isActive) return null;\r\n\r\n  return (\r\n    <motion.div\r\n      className=\"fixed inset-0 pointer-events-none z-50\"\r\n      initial={{ x: 0, y: 0 }}\r\n      animate={{\r\n        x: [0, -shakeAmount, shakeAmount, -shakeAmount, shakeAmount, 0],\r\n        y: [0, shakeAmount, -shakeAmount, shakeAmount, -shakeAmount, 0],\r\n      }}\r\n      transition={{\r\n        duration: duration / 1000,\r\n        times: [0, 0.1, 0.2, 0.3, 0.4, 1],\r\n        ease: \"easeInOut\"\r\n      }}\r\n    >\r\n      {/* Red flash overlay */}\r\n      <motion.div\r\n        className=\"absolute inset-0 bg-red-500 mix-blend-multiply\"\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: [0, 0.3, 0, 0.2, 0] }}\r\n        transition={{ duration: duration / 1000 }}\r\n      />\r\n    </motion.div>\r\n  );\r\n};\r\n","import React, { useEffect, useState, useCallback } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { useGameStore } from '../store/gameStore';\r\nimport { TigerOutlet } from './TigerOutlet';\r\nimport { CounterAttackButton } from './CounterAttackButton';\r\nimport { GameHUD } from './GameHUD';\r\nimport { useGameApi } from '../hooks/useGameApi';\r\nimport { ScreenShake } from './ScreenShake';\r\n\r\nexport const GameScreen: React.FC = () => {\r\n  const { \r\n    gameState, \r\n    singleMode, \r\n    endGame, \r\n    player,\r\n    submitGameToServer\r\n  } = useGameStore();\r\n  \r\n  const { isAuthenticated } = useGameApi();\r\n  const [gameTime, setGameTime] = useState(0);\r\n  const [showGameOver, setShowGameOver] = useState(false);\r\n  const [isSavingToServer, setIsSavingToServer] = useState(false);\r\n  const [isScreenShaking, setIsScreenShaking] = useState(false);\r\n\r\n  // Handle screen shake from electric shock\r\n  const handleShockEffect = useCallback(() => {\r\n    setIsScreenShaking(true);\r\n    setTimeout(() => {\r\n      setIsScreenShaking(false);\r\n    }, 600); // Match ScreenShake duration\r\n  }, []);\r\n\r\n  // Game timer\r\n  useEffect(() => {\r\n    if (!gameState.isPlaying) return;\r\n\r\n    const interval = setInterval(() => {\r\n      setGameTime(prev => prev + 1);\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [gameState.isPlaying]);\r\n\r\n  // Handle game over conditions\r\n  useEffect(() => {\r\n    // Game over after 10 minutes or specific achievements\r\n    if (gameTime >= 600) { // 10 minutes\r\n      setShowGameOver(true);\r\n    }\r\n  }, [gameTime]);\r\n\r\n  const handleEndGame = async () => {\r\n    setShowGameOver(false);\r\n    setGameTime(0);\r\n    \r\n    // Сохраняем результаты на сервер, если пользователь аутентифицирован\r\n    if (isAuthenticated && gameState.score > 0) {\r\n      setIsSavingToServer(true);\r\n      \r\n      try {\r\n        // Обновляем время игры в store перед отправкой\r\n        const gameStore = useGameStore.getState();\r\n        gameStore.gameState.gameTime = gameTime * 1000; // конвертируем в миллисекунды\r\n        \r\n        const result = await submitGameToServer();\r\n        \r\n        if (result.success) {\r\n          console.log('✅ Игра успешно сохранена на сервер');\r\n        } else {\r\n          console.warn('⚠️ Не удалось сохранить игру на сервер:', result.error);\r\n        }\r\n      } catch (error) {\r\n        console.error('❌ Ошибка при сохранении игры:', error);\r\n      } finally {\r\n        setIsSavingToServer(false);\r\n      }\r\n    }\r\n    \r\n    endGame();\r\n  };\r\n\r\n  const formatTime = (seconds: number) => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  if (showGameOver) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-background-dark to-background-darker\">\r\n        <motion.div\r\n          initial={{ opacity: 0, scale: 0.8 }}\r\n          animate={{ opacity: 1, scale: 1 }}\r\n          className=\"glass-effect p-8 text-center max-w-md\"\r\n        >\r\n          <h2 className=\"text-3xl font-bold text-primary-orange mb-4\">\r\n            Игра окончена!\r\n          </h2>\r\n          \r\n          <div className=\"space-y-3 mb-6\">\r\n            <div className=\"flex justify-between\">\r\n              <span>Время игры:</span>\r\n              <span className=\"font-bold\">{formatTime(gameTime)}</span>\r\n            </div>\r\n            <div className=\"flex justify-between\">\r\n              <span>Финальный счёт:</span>\r\n              <span className=\"font-bold text-accent-lime\">{gameState.score.toLocaleString()}</span>\r\n            </div>\r\n            <div className=\"flex justify-between\">\r\n              <span>Получено вольт:</span>\r\n              <span className=\"font-bold text-primary-orange\">{gameState.score}⚡</span>\r\n            </div>\r\n            <div className=\"flex justify-between\">\r\n              <span>Всего нажатий:</span>\r\n              <span className=\"font-bold text-accent-blue\">{player.totalClicks}</span>\r\n            </div>\r\n            <div className=\"flex justify-between\">\r\n              <span>Лучшая серия:</span>\r\n              <span className=\"font-bold text-yellow-400\">{player.streak}</span>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Показываем статус сохранения */}\r\n          {isAuthenticated && gameState.score > 0 && (\r\n            <div className=\"mb-4 text-center\">\r\n              {isSavingToServer ? (\r\n                <div className=\"text-blue-400 text-sm\">\r\n                  <span className=\"inline-block animate-spin mr-2\">⏳</span>\r\n                  Сохранение результатов...\r\n                </div>\r\n              ) : (\r\n                <div className=\"text-green-400 text-sm\">\r\n                  ✅ Результаты будут сохранены на сервер\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          {!isAuthenticated && gameState.score > 0 && (\r\n            <div className=\"mb-4 text-center text-yellow-400 text-sm\">\r\n              ⚠️ Результаты сохраняются только локально\r\n            </div>\r\n          )}\r\n\r\n          <motion.button\r\n            onClick={handleEndGame}\r\n            disabled={isSavingToServer}\r\n            className=\"w-full glass-effect p-3 rounded-xl hover:bg-primary-orange/20 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n            whileHover={{ scale: isSavingToServer ? 1 : 1.05 }}\r\n            whileTap={{ scale: isSavingToServer ? 1 : 0.95 }}\r\n          >\r\n            <span className=\"font-bold\">\r\n              {isSavingToServer ? 'Сохранение...' : 'Вернуться в меню'}\r\n            </span>\r\n          </motion.button>\r\n        </motion.div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ScreenShake isActive={isScreenShaking} />\r\n      <div className=\"min-h-screen bg-gradient-to-br from-background-dark to-background-darker relative\">\r\n      {/* Game HUD */}\r\n      <GameHUD />\r\n      \r\n      {/* Main Game Area */}\r\n      <div className=\"flex flex-col items-center justify-center min-h-screen pt-24 pb-8\">\r\n        {/* Game Timer */}\r\n        <motion.div\r\n          className=\"glass-effect px-6 py-3 mb-8\"\r\n          animate={{ \r\n            scale: gameTime % 10 === 0 && gameTime > 0 ? [1, 1.1, 1] : 1 \r\n          }}\r\n        >\r\n          <div className=\"text-center\">\r\n            <div className=\"text-xs text-gray-300\">ВРЕМЯ ИГРЫ</div>\r\n            <div className=\"text-2xl font-bold text-white font-mono\">\r\n              {formatTime(gameTime)}\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n\r\n        {/* Tiger Outlet and Counter Attack - Main Game Elements */}\r\n        <div className=\"relative flex items-center justify-center space-x-8 mb-8\">\r\n          {/* Counter Attack Button */}\r\n          <CounterAttackButton className=\"order-1\" />\r\n          \r\n          {/* Tiger Outlet - Main Game Element */}\r\n          <TigerOutlet className=\"order-2\" onShock={handleShockEffect} />\r\n          \r\n          {/* Placeholder for symmetry */}\r\n          <div className=\"w-16 h-16 order-3 opacity-0\" />\r\n        </div>\r\n\r\n        {/* Quick Stats */}\r\n        <div className=\"flex space-x-4 text-center\">\r\n          <motion.div \r\n            className=\"glass-effect px-4 py-2\"\r\n            whileHover={{ scale: 1.05 }}\r\n          >\r\n            <div className=\"text-xs text-gray-300\">ПОСЛЕДНИЙ РИСК</div>\r\n            <div className={`text-sm font-bold ${\r\n              singleMode.currentRisk === 'extreme' ? 'text-red-400' :\r\n              singleMode.currentRisk === 'high' ? 'text-orange-400' :\r\n              singleMode.currentRisk === 'medium' ? 'text-yellow-400' :\r\n              'text-green-400'\r\n            }`}>\r\n              {singleMode.currentRisk === 'extreme' ? 'ЭКСТРИМ' :\r\n               singleMode.currentRisk === 'high' ? 'ВЫСОКИЙ' :\r\n               singleMode.currentRisk === 'medium' ? 'СРЕДНИЙ' : 'НИЗКИЙ'}\r\n            </div>\r\n          </motion.div>\r\n        </div>\r\n\r\n        {/* Pause/Exit Button */}\r\n        <motion.button\r\n          onClick={handleEndGame}\r\n          className=\"mt-8 glass-effect px-6 py-3 rounded-xl hover:bg-red-500/20 transition-colors\"\r\n          whileHover={{ scale: 1.05 }}\r\n          whileTap={{ scale: 0.95 }}\r\n        >\r\n          <span className=\"text-red-300 font-bold\">Завершить игру</span>\r\n        </motion.button>\r\n      </div>\r\n\r\n      {/* Background Effects */}\r\n      <div className=\"fixed inset-0 pointer-events-none overflow-hidden\">\r\n        {/* Electric grid animation */}\r\n        <motion.div\r\n          className=\"absolute inset-0 opacity-10\"\r\n          animate={{\r\n            backgroundPosition: ['0% 0%', '100% 100%'],\r\n          }}\r\n          transition={{\r\n            duration: 20,\r\n            repeat: Infinity,\r\n            ease: 'linear'\r\n          }}\r\n          style={{\r\n            backgroundImage: `\r\n              linear-gradient(0deg, transparent 24%, rgba(255, 107, 53, 0.05) 25%, rgba(255, 107, 53, 0.05) 26%, transparent 27%, transparent 74%, rgba(255, 107, 53, 0.05) 75%, rgba(255, 107, 53, 0.05) 76%, transparent 77%, transparent),\r\n              linear-gradient(90deg, transparent 24%, rgba(255, 107, 53, 0.05) 25%, rgba(255, 107, 53, 0.05) 26%, transparent 27%, transparent 74%, rgba(255, 107, 53, 0.05) 75%, rgba(255, 107, 53, 0.05) 76%, transparent 77%, transparent)\r\n            `,\r\n            backgroundSize: '50px 50px'\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { useGameStore } from '../store/gameStore';\r\nimport { hapticManager } from '../utils/hapticManager';\r\n\r\nexport const MultiplayerScreen: React.FC = () => {\r\n  const handleBackToMenu = () => {\r\n    hapticManager.light();\r\n    useGameStore.getState().endGame();\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex flex-col items-center justify-center p-4 bg-gradient-to-br from-background-dark to-background-darker\">\r\n      <motion.div\r\n        initial={{ opacity: 0, y: -20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.6 }}\r\n        className=\"text-center\"\r\n      >\r\n        <h1 className=\"text-4xl font-bold text-primary-orange mb-4\">\r\n          🎮 Многопользовательский режим\r\n        </h1>\r\n        <p className=\"text-xl text-gray-300 mb-8\">\r\n          Скоро здесь будут эпические дуэли!\r\n        </p>\r\n      </motion.div>\r\n\r\n      <motion.div\r\n        initial={{ opacity: 0, scale: 0.9 }}\r\n        animate={{ opacity: 1, scale: 1 }}\r\n        transition={{ duration: 0.5, delay: 0.2 }}\r\n        className=\"glass-effect p-8 rounded-xl text-center max-w-md\"\r\n      >\r\n        <div className=\"text-6xl mb-4\">🚧</div>\r\n        <h2 className=\"text-2xl font-bold text-white mb-4\">В разработке</h2>\r\n        <p className=\"text-gray-300 mb-6\">\r\n          Мы работаем над захватывающими многопользовательскими режимами:\r\n        </p>\r\n        \r\n        <div className=\"space-y-3 text-left mb-6\">\r\n          <div className=\"flex items-center space-x-3\">\r\n            <span className=\"text-purple-400\">⚔️</span>\r\n            <span className=\"text-gray-300\">Дуэли 1v1 в реальном времени</span>\r\n          </div>\r\n          <div className=\"flex items-center space-x-3\">\r\n            <span className=\"text-blue-400\">🏆</span>\r\n            <span className=\"text-gray-300\">Турниры до 8 игроков</span>\r\n          </div>\r\n          <div className=\"flex items-center space-x-3\">\r\n            <span className=\"text-green-400\">🤝</span>\r\n            <span className=\"text-gray-300\">Кооперативные режимы</span>\r\n          </div>\r\n          <div className=\"flex items-center space-x-3\">\r\n            <span className=\"text-yellow-400\">📊</span>\r\n            <span className=\"text-gray-300\">Глобальные таблицы лидеров</span>\r\n          </div>\r\n        </div>\r\n\r\n        <motion.button\r\n          onClick={handleBackToMenu}\r\n          className=\"w-full glass-effect p-3 rounded-xl hover:bg-orange-500/20 transition-colors border border-orange-400/30\"\r\n          whileHover={{ scale: 1.02 }}\r\n          whileTap={{ scale: 0.98 }}\r\n        >\r\n          <span className=\"text-lg font-semibold text-orange-400\">\r\n            ← Назад в меню\r\n          </span>\r\n        </motion.button>\r\n      </motion.div>\r\n\r\n      <motion.div\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        transition={{ duration: 0.5, delay: 0.4 }}\r\n        className=\"mt-8 text-center text-gray-400 text-sm\"\r\n      >\r\n        <p>🔔 Подпишитесь на уведомления, чтобы узнать о запуске первыми!</p>\r\n      </motion.div>\r\n    </div>\r\n  );\r\n};\r\n","import { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { useGameStore } from '../store/gameStore';\r\n\r\nexport interface DuelMessage {\r\n  type: 'player_action' | 'player_shocked' | 'player_ready' | 'game_start' | 'game_end' | 'sync_state';\r\n  playerId: string;\r\n  data?: any;\r\n  timestamp: number;\r\n}\r\n\r\nexport interface DuelRoom {\r\n  id: string;\r\n  players: string[];\r\n  status: 'waiting' | 'ready' | 'playing' | 'finished';\r\n  createdAt: number;\r\n}\r\n\r\nexport const useDuelConnection = () => {\r\n  const { player } = useGameStore();\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [currentRoom, setCurrentRoom] = useState<DuelRoom | null>(null);\r\n  const [opponent, setOpponent] = useState<any>(null);\r\n  const [messages, setMessages] = useState<DuelMessage[]>([]);\r\n  \r\n  // Симуляция WebSocket соединения (в реальной версии здесь будет WebSocket)\r\n  const connectionRef = useRef<any>(null);\r\n  const messageQueueRef = useRef<DuelMessage[]>([]);\r\n  const aiIntervalRef = useRef<NodeJS.Timeout | null>(null);\r\n  const lastAiActionRef = useRef<number>(0);\r\n\r\n  // Симуляция подключения к серверу\r\n  const connect = useCallback(() => {\r\n    console.log('🔌 Подключение к серверу дуэлей...');\r\n    \r\n    // Симуляция задержки подключения\r\n    setTimeout(() => {\r\n      setIsConnected(true);\r\n      console.log('✅ Подключено к серверу дуэлей');\r\n      \r\n      // Симуляция входящих сообщений\r\n      connectionRef.current = setInterval(() => {\r\n        if (messageQueueRef.current.length > 0) {\r\n          const message = messageQueueRef.current.shift();\r\n          if (message) {\r\n            setMessages(prev => [...prev, message]);\r\n          }\r\n        }\r\n      }, 100);\r\n    }, 1000);\r\n  }, []);\r\n\r\n  // Отключение\r\n  const disconnect = useCallback(() => {\r\n    if (connectionRef.current) {\r\n      clearInterval(connectionRef.current);\r\n      connectionRef.current = null;\r\n    }\r\n    if (aiIntervalRef.current) {\r\n      clearInterval(aiIntervalRef.current);\r\n      aiIntervalRef.current = null;\r\n    }\r\n    setIsConnected(false);\r\n    setCurrentRoom(null);\r\n    setOpponent(null);\r\n    setMessages([]);\r\n    console.log('🔌 Отключено от сервера дуэлей');\r\n  }, []);\r\n\r\n  // Поиск дуэли\r\n  const findDuel = useCallback(async (): Promise<DuelRoom> => {\r\n    if (!isConnected) {\r\n      throw new Error('Не подключен к серверу');\r\n    }\r\n\r\n    console.log('🔍 Поиск дуэли...');\r\n    \r\n    // Симуляция поиска противника\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        const room: DuelRoom = {\r\n          id: `duel_${Date.now()}`,\r\n          players: [player.id, 'bot_opponent'],\r\n          status: 'waiting',\r\n          createdAt: Date.now()\r\n        };\r\n        \r\n        const botOpponent = {\r\n          id: 'bot_opponent',\r\n          name: `Соперник ${Math.floor(Math.random() * 1000)}`,\r\n          level: Math.max(1, player.level - 2 + Math.floor(Math.random() * 5)),\r\n          volts: Math.floor(Math.random() * 500) + 100,\r\n          isReady: false,\r\n          score: 0,\r\n          streak: 0\r\n        };\r\n\r\n        setCurrentRoom(room);\r\n        setOpponent(botOpponent);\r\n        \r\n        console.log('✅ Дуэль найдена!', room);\r\n        resolve(room);\r\n      }, 2000 + Math.random() * 3000); // 2-5 секунд поиска\r\n    });\r\n  }, [isConnected, player.id, player.level]);\r\n\r\n  // Отправка сообщения\r\n  const sendMessage = useCallback((message: Omit<DuelMessage, 'timestamp'>) => {\r\n    if (!isConnected || !currentRoom) {\r\n      console.warn('⚠️ Не удалось отправить сообщение: нет соединения или комнаты');\r\n      return;\r\n    }\r\n\r\n    const fullMessage: DuelMessage = {\r\n      ...message,\r\n      timestamp: Date.now()\r\n    };\r\n\r\n    console.log('📤 Отправка сообщения:', fullMessage);\r\n\r\n    // Симуляция ответа противника\r\n    if (message.type === 'player_ready') {\r\n      setTimeout(() => {\r\n        messageQueueRef.current.push({\r\n          type: 'player_ready',\r\n          playerId: 'bot_opponent',\r\n          timestamp: Date.now()\r\n        });\r\n      }, 1000 + Math.random() * 2000);\r\n    }\r\n\r\n    if (message.type === 'player_action') {\r\n      // ИИ НЕ отвечает на каждое действие игрока - только периодически\r\n      const now = Date.now();\r\n      const timeSinceLastAi = now - lastAiActionRef.current;\r\n      \r\n      // ИИ действует только раз в 2-4 секунды (человеческий темп)\r\n      if (timeSinceLastAi > 2000 && Math.random() < 0.3) {\r\n        lastAiActionRef.current = now;\r\n        setTimeout(() => {\r\n          const gotShocked = Math.random() < 0.25; // 25% шанс удара током\r\n          if (gotShocked) {\r\n            messageQueueRef.current.push({\r\n              type: 'player_shocked',\r\n              playerId: 'bot_opponent',\r\n              data: { damage: 20 + Math.random() * 30 },\r\n              timestamp: Date.now()\r\n            });\r\n          } else {\r\n            messageQueueRef.current.push({\r\n              type: 'player_action',\r\n              playerId: 'bot_opponent',\r\n              data: {\r\n                points: Math.floor(Math.random() * 50) + 15, // 15-65 очков\r\n                volts: Math.floor(Math.random() * 30) + 10   // 10-40 вольт\r\n              },\r\n              timestamp: Date.now()\r\n            });\r\n          }\r\n        }, 800 + Math.random() * 1500); // 0.8-2.3 сек задержка\r\n      }\r\n    }\r\n  }, [isConnected, currentRoom]);\r\n\r\n  // Готовность к игре\r\n  const setReady = useCallback(() => {\r\n    sendMessage({\r\n      type: 'player_ready',\r\n      playerId: player.id\r\n    });\r\n    \r\n    // Запускаем независимую симуляцию ИИ с человеческим темпом\r\n    setTimeout(() => {\r\n      aiIntervalRef.current = setInterval(() => {\r\n        const now = Date.now();\r\n        const shouldAct = Math.random() < 0.4; // 40% шанс действия каждые 2-3 сек\r\n        \r\n        if (shouldAct) {\r\n          const gotShocked = Math.random() < 0.25; // 25% шанс удара током\r\n          if (gotShocked) {\r\n            messageQueueRef.current.push({\r\n              type: 'player_shocked',\r\n              playerId: 'bot_opponent',\r\n              data: { damage: 20 + Math.random() * 30 },\r\n              timestamp: now\r\n            });\r\n          } else {\r\n            messageQueueRef.current.push({\r\n              type: 'player_action',\r\n              playerId: 'bot_opponent',\r\n              data: {\r\n                points: Math.floor(Math.random() * 50) + 15, // 15-65 очков за клик\r\n                volts: Math.floor(Math.random() * 30) + 10   // 10-40 вольт\r\n              },\r\n              timestamp: now\r\n            });\r\n          }\r\n        }\r\n      }, 2000 + Math.random() * 1500); // Каждые 2-3.5 секунды\r\n    }, 3000); // Начинаем через 3 секунды после готовности\r\n  }, [sendMessage, player.id]);\r\n\r\n  // Действие игрока\r\n  const sendPlayerAction = useCallback((points: number, volts: number) => {\r\n    sendMessage({\r\n      type: 'player_action',\r\n      playerId: player.id,\r\n      data: { points, volts }\r\n    });\r\n  }, [sendMessage, player.id]);\r\n\r\n  // Удар током\r\n  const sendPlayerShocked = useCallback((damage: number) => {\r\n    sendMessage({\r\n      type: 'player_shocked',\r\n      playerId: player.id,\r\n      data: { damage }\r\n    });\r\n  }, [sendMessage, player.id]);\r\n\r\n  // Покинуть дуэль\r\n  const leaveDuel = useCallback(() => {\r\n    if (currentRoom) {\r\n      sendMessage({\r\n        type: 'game_end',\r\n        playerId: player.id,\r\n        data: { reason: 'left' }\r\n      });\r\n    }\r\n    \r\n    // Останавливаем ИИ симуляцию\r\n    if (aiIntervalRef.current) {\r\n      clearInterval(aiIntervalRef.current);\r\n      aiIntervalRef.current = null;\r\n    }\r\n    \r\n    setCurrentRoom(null);\r\n    setOpponent(null);\r\n    setMessages([]);\r\n  }, [currentRoom, sendMessage, player.id]);\r\n\r\n  // Очистка при размонтировании\r\n  useEffect(() => {\r\n    return () => {\r\n      disconnect();\r\n    };\r\n  }, [disconnect]);\r\n\r\n  return {\r\n    isConnected,\r\n    currentRoom,\r\n    opponent,\r\n    messages,\r\n    connect,\r\n    disconnect,\r\n    findDuel,\r\n    setReady,\r\n    sendPlayerAction,\r\n    sendPlayerShocked,\r\n    leaveDuel,\r\n    setOpponent // Для обновления состояния противника\r\n  };\r\n};\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { useGameStore } from '../store/gameStore';\r\nimport { hapticManager } from '../utils/hapticManager';\r\nimport { useDuelConnection } from '../hooks/useDuelConnection';\r\n\r\ninterface DuelPlayer {\r\n  id: string;\r\n  name: string;\r\n  volts: number;\r\n  level: number;\r\n  isReady: boolean;\r\n  isAlive: boolean;\r\n  score: number;\r\n  streak: number;\r\n}\r\n\r\ninterface DuelState {\r\n  status: 'connecting' | 'searching' | 'found' | 'ready' | 'countdown' | 'playing' | 'finished';\r\n  timeLeft: number;\r\n  winner: string | null;\r\n  roundNumber: number;\r\n  maxRounds: number;\r\n}\r\n\r\nexport const DuelScreen: React.FC = () => {\r\n  const { player, endGame } = useGameStore();\r\n  const {\r\n    isConnected,\r\n    currentRoom,\r\n    opponent: connectedOpponent,\r\n    messages,\r\n    connect,\r\n    disconnect,\r\n    findDuel,\r\n    setReady,\r\n    sendPlayerAction,\r\n    sendPlayerShocked,\r\n    leaveDuel,\r\n    setOpponent\r\n  } = useDuelConnection();\r\n\r\n  const [duelState, setDuelState] = useState<DuelState>({\r\n    status: 'connecting',\r\n    timeLeft: 60,\r\n    winner: null,\r\n    roundNumber: 1,\r\n    maxRounds: 3\r\n  });\r\n\r\n  const [playerState, setPlayerState] = useState<DuelPlayer>({\r\n    id: player.id,\r\n    name: player.name,\r\n    volts: player.volts,\r\n    level: player.level,\r\n    isReady: false,\r\n    isAlive: true,\r\n    score: 0,\r\n    streak: 0\r\n  });\r\n\r\n  const [countdownTimer, setCountdownTimer] = useState<number>(0);\r\n  const [gameTimer, setGameTimer] = useState<number>(0);\r\n\r\n  // Подключение к серверу при монтировании\r\n  useEffect(() => {\r\n    connect();\r\n    return () => {\r\n      disconnect();\r\n    };\r\n  }, [connect, disconnect]);\r\n\r\n  // Обработка статуса подключения\r\n  useEffect(() => {\r\n    if (isConnected && duelState.status === 'connecting') {\r\n      setDuelState(prev => ({ ...prev, status: 'searching' }));\r\n      findDuel().then(() => {\r\n        setDuelState(prev => ({ ...prev, status: 'found' }));\r\n        hapticManager.medium();\r\n      });\r\n    }\r\n  }, [isConnected, duelState.status, findDuel]);\r\n\r\n  // Обработка входящих сообщений\r\n  useEffect(() => {\r\n    const lastMessage = messages[messages.length - 1];\r\n    if (!lastMessage) return;\r\n\r\n    switch (lastMessage.type) {\r\n      case 'player_ready':\r\n        if (lastMessage.playerId !== player.id) {\r\n          setOpponent((prev: DuelPlayer | null) => prev ? { ...prev, isReady: true } : null);\r\n        }\r\n        break;\r\n\r\n      case 'player_action':\r\n        if (lastMessage.playerId !== player.id && connectedOpponent) {\r\n          const { points, volts } = lastMessage.data;\r\n          setOpponent((prev: DuelPlayer | null) => prev ? {\r\n            ...prev,\r\n            score: prev.score + points,\r\n            volts: prev.volts + volts,\r\n            streak: prev.streak + 1\r\n          } : null);\r\n        }\r\n        break;\r\n\r\n      case 'player_shocked':\r\n        if (lastMessage.playerId !== player.id && connectedOpponent) {\r\n          const { damage } = lastMessage.data;\r\n          setOpponent((prev: DuelPlayer | null) => prev ? {\r\n            ...prev,\r\n            volts: Math.max(0, prev.volts - damage),\r\n            streak: 0\r\n          } : null);\r\n        }\r\n        break;\r\n\r\n      case 'game_start':\r\n        setDuelState(prev => ({ ...prev, status: 'countdown' }));\r\n        setCountdownTimer(3);\r\n        break;\r\n\r\n      case 'game_end':\r\n        setDuelState(prev => ({ ...prev, status: 'finished' }));\r\n        break;\r\n    }\r\n  }, [messages, player.id, connectedOpponent, setOpponent]);\r\n\r\n  // Проверка готовности обеих сторон\r\n  useEffect(() => {\r\n    if (duelState.status === 'found' && \r\n        playerState.isReady && \r\n        connectedOpponent?.isReady) {\r\n      setDuelState(prev => ({ ...prev, status: 'countdown' }));\r\n      setCountdownTimer(3);\r\n    }\r\n  }, [duelState.status, playerState.isReady, connectedOpponent?.isReady]);\r\n\r\n  // Отсчет до начала игры\r\n  useEffect(() => {\r\n    if (duelState.status === 'countdown' && countdownTimer > 0) {\r\n      const timer = setTimeout(() => {\r\n        setCountdownTimer(prev => prev - 1);\r\n        hapticManager.light();\r\n      }, 1000);\r\n\r\n      return () => clearTimeout(timer);\r\n    } else if (duelState.status === 'countdown' && countdownTimer === 0) {\r\n      setDuelState(prev => ({ ...prev, status: 'playing' }));\r\n      setGameTimer(duelState.timeLeft);\r\n      hapticManager.heavy();\r\n    }\r\n  }, [duelState.status, countdownTimer, duelState.timeLeft]);\r\n\r\n  // Игровой таймер\r\n  useEffect(() => {\r\n    if (duelState.status === 'playing' && gameTimer > 0) {\r\n      const timer = setTimeout(() => {\r\n        setGameTimer(prev => prev - 1);\r\n      }, 1000);\r\n\r\n      return () => clearTimeout(timer);\r\n    } else if (duelState.status === 'playing' && gameTimer === 0) {\r\n      // Время вышло - определяем победителя по очкам\r\n      const winner = playerState.score > (connectedOpponent?.score || 0) ? playerState.id : \r\n                    (connectedOpponent?.score || 0) > playerState.score ? connectedOpponent?.id : null;\r\n      \r\n      setDuelState(prev => ({ \r\n        ...prev, \r\n        status: 'finished',\r\n        winner \r\n      }));\r\n    }\r\n  }, [duelState.status, gameTimer, playerState.score, connectedOpponent?.score]);\r\n\r\n  const handlePlayerReady = () => {\r\n    setPlayerState(prev => ({ ...prev, isReady: true }));\r\n    setReady();\r\n    hapticManager.medium();\r\n  };\r\n\r\n  const handlePlayerClick = useCallback(() => {\r\n    if (duelState.status !== 'playing') return;\r\n\r\n    // Симуляция клика игрока\r\n    const points = Math.floor(Math.random() * 80) + 20;\r\n    const gotShocked = Math.random() < 0.25; // 25% шанс удара током\r\n\r\n    if (gotShocked) {\r\n      const damage = 30;\r\n      setPlayerState(prev => ({\r\n        ...prev,\r\n        volts: Math.max(0, prev.volts - damage),\r\n        streak: 0\r\n      }));\r\n      sendPlayerShocked(damage);\r\n      hapticManager.heavy();\r\n    } else {\r\n      setPlayerState(prev => ({\r\n        ...prev,\r\n        score: prev.score + points,\r\n        volts: prev.volts + points,\r\n        streak: prev.streak + 1\r\n      }));\r\n      sendPlayerAction(points, points);\r\n      hapticManager.light();\r\n    }\r\n  }, [duelState.status, sendPlayerAction, sendPlayerShocked]);\r\n\r\n  const handleBackToMenu = () => {\r\n    hapticManager.light();\r\n    leaveDuel();\r\n    endGame();\r\n  };\r\n\r\n  const getStatusText = () => {\r\n    switch (duelState.status) {\r\n      case 'connecting': return 'Подключение к серверу...';\r\n      case 'searching': return 'Поиск соперника...';\r\n      case 'found': return 'Соперник найден!';\r\n      case 'ready': return 'Приготовьтесь!';\r\n      case 'countdown': return `Начинаем через ${countdownTimer}`;\r\n      case 'playing': return `Осталось: ${gameTimer}с`;\r\n      case 'finished': \r\n        if (!duelState.winner) return 'Ничья!';\r\n        return duelState.winner === playerState.id ? 'Победа!' : 'Поражение';\r\n      default: return '';\r\n    }\r\n  };\r\n\r\n  const getConnectionStatus = () => {\r\n    if (!isConnected) return '🔴 Не подключен';\r\n    if (!currentRoom) return '🟡 Подключен';\r\n    return '🟢 В дуэли';\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-background-dark to-background-darker\">\r\n      {/* Header */}\r\n      <div className=\"bg-black/40 border-b border-white/10 p-4\">\r\n        <div className=\"flex justify-between items-center\">\r\n          <button\r\n            onClick={handleBackToMenu}\r\n            className=\"text-gray-400 hover:text-white transition-colors\"\r\n          >\r\n            ← Назад\r\n          </button>\r\n          <h1 className=\"text-xl font-bold text-primary-orange\">⚔️ ДУЭЛЬ REAL-TIME</h1>\r\n          <div className=\"text-sm text-gray-400\">\r\n            {getConnectionStatus()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Status Bar */}\r\n      <div className=\"bg-black/30 p-4 text-center\">\r\n        <motion.div\r\n          className=\"text-2xl font-bold text-white\"\r\n          animate={{ scale: duelState.status === 'countdown' ? [1, 1.2, 1] : 1 }}\r\n          transition={{ duration: 0.5, repeat: duelState.status === 'countdown' ? Infinity : 0 }}\r\n        >\r\n          {getStatusText()}\r\n        </motion.div>\r\n        {currentRoom && (\r\n          <div className=\"text-sm text-gray-400 mt-2\">\r\n            Комната: {currentRoom.id.slice(-8)}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Players Comparison */}\r\n      {(duelState.status === 'found' || duelState.status === 'ready' || \r\n        duelState.status === 'countdown' || duelState.status === 'playing' || \r\n        duelState.status === 'finished') && connectedOpponent && (\r\n        <div className=\"flex justify-between items-center p-4 bg-black/20\">\r\n          {/* Player */}\r\n          <motion.div \r\n            className=\"glass-effect p-4 rounded-xl flex-1 mr-2\"\r\n            animate={{ \r\n              borderColor: playerState.isReady ? '#10B981' : '#6B7280',\r\n              boxShadow: playerState.streak > 0 ? '0 0 20px #10B981' : 'none'\r\n            }}\r\n          >\r\n            <div className=\"text-center\">\r\n              <div className=\"text-lg font-bold text-green-400\">{playerState.name}</div>\r\n              <div className=\"text-sm text-gray-300\">Уровень {playerState.level}</div>\r\n              <div className=\"text-2xl font-bold text-white mt-2\">{playerState.score}</div>\r\n              <div className=\"text-xs text-gray-400\">Очки</div>\r\n              <div className=\"text-sm text-yellow-400 mt-1\">\r\n                Серия: {playerState.streak}\r\n              </div>\r\n              <div className=\"text-sm text-blue-400\">\r\n                {playerState.volts}⚡\r\n              </div>\r\n              {playerState.isReady && (\r\n                <div className=\"text-xs text-green-400 mt-1\">✓ Готов</div>\r\n              )}\r\n            </div>\r\n          </motion.div>\r\n\r\n          {/* VS */}\r\n          <div className=\"px-4\">\r\n            <div className=\"text-3xl font-bold text-red-400\">VS</div>\r\n          </div>\r\n\r\n          {/* Opponent */}\r\n          <motion.div \r\n            className=\"glass-effect p-4 rounded-xl flex-1 ml-2\"\r\n            animate={{ \r\n              borderColor: connectedOpponent.isReady ? '#10B981' : '#6B7280',\r\n              boxShadow: connectedOpponent.streak > 0 ? '0 0 20px #EF4444' : 'none'\r\n            }}\r\n          >\r\n            <div className=\"text-center\">\r\n              <div className=\"text-lg font-bold text-red-400\">{connectedOpponent.name}</div>\r\n              <div className=\"text-sm text-gray-300\">Уровень {connectedOpponent.level}</div>\r\n              <div className=\"text-2xl font-bold text-white mt-2\">{connectedOpponent.score}</div>\r\n              <div className=\"text-xs text-gray-400\">Очки</div>\r\n              <div className=\"text-sm text-yellow-400 mt-1\">\r\n                Серия: {connectedOpponent.streak}\r\n              </div>\r\n              <div className=\"text-sm text-blue-400\">\r\n                {connectedOpponent.volts}⚡\r\n              </div>\r\n              {connectedOpponent.isReady && (\r\n                <div className=\"text-xs text-green-400 mt-1\">✓ Готов</div>\r\n              )}\r\n            </div>\r\n          </motion.div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Game Area */}\r\n      <div className=\"flex-1 flex flex-col items-center justify-center p-4\">\r\n        <AnimatePresence mode=\"wait\">\r\n          {(duelState.status === 'connecting' || duelState.status === 'searching') && (\r\n            <motion.div\r\n              key=\"searching\"\r\n              initial={{ opacity: 0, scale: 0.8 }}\r\n              animate={{ opacity: 1, scale: 1 }}\r\n              exit={{ opacity: 0, scale: 0.8 }}\r\n              className=\"text-center\"\r\n            >\r\n              <div className=\"text-6xl mb-4\">\r\n                {duelState.status === 'connecting' ? '�' : '�🔍'}\r\n              </div>\r\n              <div className=\"text-xl text-gray-300 mb-4\">\r\n                {duelState.status === 'connecting' \r\n                  ? 'Подключение к серверу...' \r\n                  : 'Ищем достойного соперника...'}\r\n              </div>\r\n              <div className=\"animate-spin text-4xl\">⚡</div>\r\n            </motion.div>\r\n          )}\r\n\r\n          {duelState.status === 'found' && (\r\n            <motion.div\r\n              key=\"found\"\r\n              initial={{ opacity: 0, y: 20 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              exit={{ opacity: 0, y: -20 }}\r\n              className=\"text-center\"\r\n            >\r\n              <div className=\"text-6xl mb-4\">⚔️</div>\r\n              <div className=\"text-xl text-white mb-6\">Соперник найден!</div>\r\n              <div className=\"text-lg text-gray-300 mb-4\">\r\n                {connectedOpponent?.name} (Уровень {connectedOpponent?.level})\r\n              </div>\r\n              <motion.button\r\n                onClick={handlePlayerReady}\r\n                disabled={playerState.isReady}\r\n                className={`px-8 py-4 rounded-xl font-bold text-lg transition-colors ${\r\n                  playerState.isReady \r\n                    ? 'bg-green-600 text-white cursor-default' \r\n                    : 'bg-orange-600 hover:bg-orange-500 text-white'\r\n                }`}\r\n                whileHover={{ scale: playerState.isReady ? 1 : 1.05 }}\r\n                whileTap={{ scale: playerState.isReady ? 1 : 0.95 }}\r\n              >\r\n                {playerState.isReady ? '✓ Готов! Ждем соперника...' : 'Готов к бою!'}\r\n              </motion.button>\r\n            </motion.div>\r\n          )}\r\n\r\n          {duelState.status === 'countdown' && (\r\n            <motion.div\r\n              key=\"countdown\"\r\n              initial={{ opacity: 0, scale: 2 }}\r\n              animate={{ opacity: 1, scale: 1 }}\r\n              exit={{ opacity: 0, scale: 0 }}\r\n              className=\"text-center\"\r\n            >\r\n              <motion.div\r\n                className=\"text-9xl font-bold text-red-400\"\r\n                animate={{ scale: [1, 1.2, 1] }}\r\n                transition={{ duration: 0.5 }}\r\n              >\r\n                {countdownTimer || '⚡'}\r\n              </motion.div>\r\n            </motion.div>\r\n          )}\r\n\r\n          {duelState.status === 'playing' && (\r\n            <motion.div\r\n              key=\"playing\"\r\n              initial={{ opacity: 0 }}\r\n              animate={{ opacity: 1 }}\r\n              exit={{ opacity: 0 }}\r\n              className=\"w-full max-w-md\"\r\n            >\r\n              <div \r\n                className=\"w-full h-48 bg-orange-500 rounded-lg cursor-pointer flex items-center justify-center hover:bg-orange-600 transition-colors\"\r\n                onClick={handlePlayerClick}\r\n              >\r\n                <span className=\"text-white text-2xl font-bold\">⚡ КЛИК ⚡</span>\r\n              </div>\r\n              <div className=\"text-center mt-4 text-white\">\r\n                🔥 Real-time дуэль! Кликайте быстро! 🔥\r\n              </div>\r\n              <div className=\"text-center mt-2 text-gray-400 text-sm\">\r\n                Время: {gameTimer}с | Ваш счет: {playerState.score} | Соперник: {connectedOpponent?.score || 0}\r\n              </div>\r\n            </motion.div>\r\n          )}\r\n\r\n          {duelState.status === 'finished' && (\r\n            <motion.div\r\n              key=\"finished\"\r\n              initial={{ opacity: 0, scale: 0.8 }}\r\n              animate={{ opacity: 1, scale: 1 }}\r\n              exit={{ opacity: 0, scale: 0.8 }}\r\n              className=\"text-center\"\r\n            >\r\n              <div className=\"text-6xl mb-4\">\r\n                {duelState.winner === playerState.id ? '🏆' : \r\n                 duelState.winner === connectedOpponent?.id ? '💀' : '🤝'}\r\n              </div>\r\n              <div className=\"text-3xl font-bold text-white mb-4\">\r\n                {getStatusText()}\r\n              </div>\r\n              <div className=\"text-lg text-gray-300 mb-6\">\r\n                Финальный счет: {playerState.score} - {connectedOpponent?.score || 0}\r\n              </div>\r\n              {duelState.winner === playerState.id && (\r\n                <div className=\"text-green-400 text-lg mb-4\">\r\n                  +{Math.floor(playerState.score * 0.1)} опыта за победу!\r\n                </div>\r\n              )}\r\n              <motion.button\r\n                onClick={handleBackToMenu}\r\n                className=\"px-8 py-4 bg-orange-600 hover:bg-orange-500 text-white rounded-xl font-bold text-lg transition-colors\"\r\n                whileHover={{ scale: 1.05 }}\r\n                whileTap={{ scale: 0.95 }}\r\n              >\r\n                Вернуться в меню\r\n              </motion.button>\r\n            </motion.div>\r\n          )}\r\n        </AnimatePresence>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { useGameStore } from '../store/gameStore';\r\nimport { useTelegram } from './TelegramProvider';\r\nimport { hapticManager } from '../utils/hapticManager';\r\n\r\ninterface TelegramContact {\r\n  id: number;\r\n  firstName: string;\r\n  lastName?: string;\r\n  username?: string;\r\n  photoUrl?: string;\r\n  level?: number;\r\n  totalGames?: number;\r\n  wins?: number;\r\n}\r\n\r\ninterface DuelInvite {\r\n  id: string;\r\n  fromUserId: number;\r\n  toUserId: number;\r\n  status: 'pending' | 'accepted' | 'declined' | 'expired';\r\n  createdAt: number;\r\n  expiresAt: number;\r\n}\r\n\r\nexport const DuelInviteScreen: React.FC = () => {\r\n  const { player, goToMenu } = useGameStore();\r\n  const { webApp, user, isInTelegram } = useTelegram();\r\n  const [contacts, setContacts] = useState<TelegramContact[]>([]);\r\n  const [pendingInvites, setPendingInvites] = useState<DuelInvite[]>([]);\r\n  const [selectedContact, setSelectedContact] = useState<TelegramContact | null>(null);\r\n  const [inviteStatus, setInviteStatus] = useState<'idle' | 'sending' | 'sent' | 'waiting'>('idle');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  // Получение реальных игроков из базы данных бота\r\n  useEffect(() => {\r\n    if (isInTelegram && webApp && user) {\r\n      loadRealPlayers(user.id);\r\n    } else {\r\n      setContacts([]);\r\n    }\r\n  }, [isInTelegram, webApp, user]);\r\n\r\n  const loadRealPlayers = async (userId: number) => {\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await fetch(`http://localhost:3001/api/duels/players/${userId}`);\r\n      const data = await response.json();\r\n      \r\n      if (data.success) {\r\n        setContacts(data.players);\r\n        console.log(`✅ Загружено ${data.players.length} реальных игроков`);\r\n      } else {\r\n        console.error('Ошибка загрузки игроков:', data.error);\r\n        setContacts([]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка запроса игроков:', error);\r\n      setContacts([]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const sendDuelInvite = async (contact: TelegramContact) => {\r\n    if (!isInTelegram || !webApp || !user) {\r\n      alert('Дуэли доступны только в Telegram!');\r\n      return;\r\n    }\r\n\r\n    setInviteStatus('sending');\r\n    hapticManager.medium();\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:3001/api/duels/invite', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          fromUserId: user.id,\r\n          toUserId: contact.id,\r\n          message: `${user.first_name} (Уровень ${player.level}) вызывает вас на дуэль!`\r\n        })\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (result.success) {\r\n        const invite: DuelInvite = {\r\n          id: result.duelId,\r\n          fromUserId: user.id,\r\n          toUserId: contact.id,\r\n          status: 'pending',\r\n          createdAt: Date.now(),\r\n          expiresAt: Date.now() + (5 * 60 * 1000)\r\n        };\r\n\r\n        setPendingInvites(prev => [...prev, invite]);\r\n        setInviteStatus('sent');\r\n\r\n        if (webApp.showAlert) {\r\n          webApp.showAlert(`Приглашение отправлено ${contact.firstName}! Ожидаем ответа...`);\r\n        }\r\n\r\n        setTimeout(() => {\r\n          setInviteStatus('waiting');\r\n        }, 2000);\r\n      } else {\r\n        throw new Error(result.error || 'Ошибка отправки приглашения');\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка отправки приглашения:', error);\r\n      setInviteStatus('idle');\r\n      \r\n      if (webApp?.showAlert) {\r\n        webApp.showAlert('Ошибка отправки приглашения. Попробуйте еще раз.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleContactSelect = (contact: TelegramContact) => {\r\n    setSelectedContact(contact);\r\n    hapticManager.light();\r\n  };\r\n\r\n  const handleSendInvite = () => {\r\n    if (selectedContact) {\r\n      sendDuelInvite(selectedContact);\r\n    }\r\n  };\r\n\r\n  const handleBackToMenu = () => {\r\n    hapticManager.light();\r\n    goToMenu();\r\n  };\r\n\r\n  const getContactDisplayName = (contact: TelegramContact) => {\r\n    const fullName = contact.lastName \r\n      ? `${contact.firstName} ${contact.lastName}`\r\n      : contact.firstName;\r\n    \r\n    return contact.username ? `${fullName} (@${contact.username})` : fullName;\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-background-dark to-background-darker\">\r\n      {/* Header */}\r\n      <div className=\"bg-black/40 border-b border-white/10 p-4\">\r\n        <div className=\"flex justify-between items-center\">\r\n          <button\r\n            onClick={handleBackToMenu}\r\n            className=\"text-gray-400 hover:text-white transition-colors\"\r\n          >\r\n            ← Назад\r\n          </button>\r\n          <h1 className=\"text-white text-xl font-bold\">⚔️ Приглашения на дуэль</h1>\r\n          <div></div>\r\n        </div>\r\n\r\n        {/* Предупреждение для не-Telegram пользователей */}\r\n        {!isInTelegram && (\r\n          <div className=\"text-sm text-yellow-400 mt-2 text-center\">\r\n            ⚠️ Для дуэлей откройте игру в Telegram\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Основной контент */}\r\n      <div className=\"p-4\">\r\n        {isInTelegram ? (\r\n          <>\r\n            <div className=\"text-white text-lg mb-4 font-bold\">\r\n              👥 Игроки онлайн:\r\n            </div>\r\n            \r\n            {isLoading ? (\r\n              <div className=\"text-center py-8\">\r\n                <div className=\"animate-spin text-orange-400 text-4xl mb-4\">⚡</div>\r\n                <div className=\"text-gray-400\">Загружаем игроков...</div>\r\n              </div>\r\n            ) : contacts.length > 0 ? (\r\n              <div className=\"space-y-3\">\r\n                {contacts.map((contact) => (\r\n                  <motion.div\r\n                    key={contact.id}\r\n                    className={`glass-effect p-4 rounded-xl cursor-pointer transition-all ${\r\n                      selectedContact?.id === contact.id \r\n                        ? 'border-2 border-green-400 bg-green-400/10' \r\n                        : 'border border-white/20 hover:border-orange-400'\r\n                    }`}\r\n                    onClick={() => handleContactSelect(contact)}\r\n                    whileHover={{ scale: 1.02 }}\r\n                    whileTap={{ scale: 0.98 }}\r\n                  >\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div className=\"flex items-center space-x-3\">\r\n                        <div className=\"w-12 h-12 bg-gradient-to-br from-orange-400 to-red-500 rounded-full flex items-center justify-center text-white font-bold text-lg\">\r\n                          {contact.firstName.charAt(0)}\r\n                        </div>\r\n                        <div>\r\n                          <div className=\"text-white font-medium\">\r\n                            {getContactDisplayName(contact)}\r\n                          </div>\r\n                          <div className=\"text-gray-400 text-sm\">\r\n                            Уровень {contact.level || 1} • Побед: {contact.wins || 0}/{contact.totalGames || 0}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      \r\n                      {selectedContact?.id === contact.id && (\r\n                        <div className=\"text-green-400 text-2xl\">✓</div>\r\n                      )}\r\n                    </div>\r\n                  </motion.div>\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <div className=\"text-center text-gray-400 py-8\">\r\n                <div className=\"text-4xl mb-4\">😔</div>\r\n                <div className=\"text-lg mb-2\">Нет доступных игроков</div>\r\n                <div className=\"text-sm\">\r\n                  Пригласите друзей подписаться на бота для дуэлей!\r\n                </div>\r\n              </div>\r\n            )}\r\n          </>\r\n        ) : (\r\n          <div className=\"text-center py-12\">\r\n            <div className=\"text-6xl mb-4\">📱</div>\r\n            <div className=\"text-xl text-white mb-4\">Откройте игру в Telegram</div>\r\n            <div className=\"text-gray-400 mb-6\">\r\n              Дуэли доступны только подписчикам бота в Telegram\r\n            </div>\r\n            <a \r\n              href=\"https://orspiritus.github.io/tigerrosette/\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              className=\"bg-blue-500 text-white px-6 py-3 rounded-lg hover:bg-blue-600 transition-colors\"\r\n            >\r\n              🚀 Открыть в Telegram\r\n            </a>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Кнопка отправки приглашения */}\r\n      {selectedContact && inviteStatus === 'idle' && (\r\n        <div className=\"fixed bottom-6 left-4 right-4\">\r\n          <motion.button\r\n            onClick={handleSendInvite}\r\n            className=\"w-full bg-gradient-to-r from-orange-500 to-red-500 text-white py-4 rounded-xl font-bold text-lg\"\r\n            whileHover={{ scale: 1.02 }}\r\n            whileTap={{ scale: 0.98 }}\r\n            initial={{ opacity: 0, y: 50 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n          >\r\n            ⚔️ Отправить вызов на дуэль {selectedContact.firstName}\r\n          </motion.button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Статус ожидания */}\r\n      {inviteStatus === 'waiting' && (\r\n        <div className=\"fixed bottom-6 left-4 right-4\">\r\n          <div className=\"bg-black/60 backdrop-blur-sm rounded-xl p-4 text-center\">\r\n            <div className=\"text-white text-lg mb-2\">⏳ Ожидаем ответа...</div>\r\n            <div className=\"text-gray-400 text-sm\">\r\n              Приглашение действительно 5 минут\r\n            </div>\r\n            <div className=\"mt-3\">\r\n              <div className=\"animate-pulse text-orange-400\">⚡⚔️⚡</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Активные приглашения */}\r\n      {pendingInvites.length > 0 && (\r\n        <div className=\"p-4 mt-4\">\r\n          <div className=\"text-white text-lg mb-3 font-bold\">\r\n            📋 Активные приглашения:\r\n          </div>\r\n          {pendingInvites.map((invite) => {\r\n            const contact = contacts.find(c => c.id === invite.toUserId);\r\n            const timeLeft = Math.max(0, invite.expiresAt - Date.now());\r\n            const minutesLeft = Math.floor(timeLeft / 60000);\r\n            \r\n            return (\r\n              <div key={invite.id} className=\"glass-effect p-3 rounded-lg mb-2\">\r\n                <div className=\"text-white\">\r\n                  {contact ? getContactDisplayName(contact) : 'Неизвестный пользователь'}\r\n                </div>\r\n                <div className=\"text-sm text-gray-400\">\r\n                  Статус: {invite.status} • Осталось: {minutesLeft}м\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { useGameStore } from '../store/gameStore';\r\nimport { useTelegram } from './TelegramProvider';\r\nimport { hapticManager } from '../utils/hapticManager';\r\n\r\ninterface IncomingDuelInvite {\r\n  id: string;\r\n  fromUserId: number;\r\n  fromUserName: string;\r\n  fromUserLevel: number;\r\n  message: string;\r\n  receivedAt: number;\r\n  expiresAt: number;\r\n}\r\n\r\nexport const DuelInviteReceiver: React.FC = () => {\r\n  const { player, startMultiplayerMode } = useGameStore();\r\n  const { webApp, user, isInTelegram } = useTelegram();\r\n  const [incomingInvites, setIncomingInvites] = useState<IncomingDuelInvite[]>([]);\r\n  const [respondingTo, setRespondingTo] = useState<string | null>(null);\r\n\r\n  // Слушаем входящие приглашения\r\n  useEffect(() => {\r\n    if (isInTelegram && webApp) {\r\n      // Проверяем URL параметры на наличие приглашения\r\n      const urlParams = new URLSearchParams(window.location.search);\r\n      const inviteId = urlParams.get('duel') || urlParams.get('duel_invite');\r\n      \r\n      console.log('🔍 URL parameters:', window.location.search);\r\n      console.log('🎯 Duel ID found:', inviteId);\r\n      \r\n      if (inviteId) {\r\n        console.log('🎯 Found duel ID in URL, fetching duel info...');\r\n        fetchDuelInfo(inviteId);\r\n      }\r\n\r\n      // В реальной версии здесь будет подписка на события WebApp\r\n      console.log('Слушаем приглашения на дуэли...');\r\n    }\r\n  }, [isInTelegram, webApp]);\r\n\r\n  // Fetch real duel information from backend\r\n  const fetchDuelInfo = async (duelId: string) => {\r\n    try {\r\n      console.log('🔍 Fetching duel info for ID:', duelId);\r\n      const response = await fetch(`http://localhost:3001/api/duels/info/${duelId}`);\r\n      const data = await response.json();\r\n      \r\n      if (data.success && data.duel) {\r\n        console.log('✅ Duel info received:', data.duel);\r\n        const duelInfo = data.duel;\r\n        \r\n        // Create incoming invite from real duel data\r\n        const realInvite = {\r\n          id: duelId,\r\n          fromUserId: duelInfo.player1_id,\r\n          fromUserName: duelInfo.fromUser?.firstName || 'Игрок',\r\n          fromUserLevel: duelInfo.fromUser?.level || 1,\r\n          message: `Приглашение на дуэль от ${duelInfo.fromUser?.firstName || 'игрока'}!`,\r\n          receivedAt: Date.now(),\r\n          expiresAt: new Date(duelInfo.expires_at).getTime()\r\n        };\r\n        \r\n        handleIncomingInvite(realInvite);\r\n      } else {\r\n        console.error('❌ Failed to fetch duel info:', data.error);\r\n        // Fallback to mock data if backend call fails\r\n        const fallbackInvite = {\r\n          id: duelId,\r\n          fromUserId: 12345,\r\n          fromUserName: 'Игрок',\r\n          fromUserLevel: 1,\r\n          message: 'Приглашение на дуэль!',\r\n          receivedAt: Date.now(),\r\n          expiresAt: Date.now() + (5 * 60 * 1000)\r\n        };\r\n        handleIncomingInvite(fallbackInvite);\r\n      }\r\n    } catch (error) {\r\n      console.error('❌ Error fetching duel info:', error);\r\n      // Fallback to mock data if request fails\r\n      const fallbackInvite = {\r\n        id: duelId,\r\n        fromUserId: 12345,\r\n        fromUserName: 'Игрок',\r\n        fromUserLevel: 1,\r\n        message: 'Приглашение на дуэль!',\r\n        receivedAt: Date.now(),\r\n        expiresAt: Date.now() + (5 * 60 * 1000)\r\n      };\r\n      handleIncomingInvite(fallbackInvite);\r\n    }\r\n  };\r\n\r\n  const handleIncomingInvite = (invite: any) => {\r\n    const newInvite: IncomingDuelInvite = {\r\n      id: invite.inviteId || invite.id,\r\n      fromUserId: invite.fromUser?.id || invite.fromUserId,\r\n      fromUserName: invite.fromUser?.name || invite.fromUserName,\r\n      fromUserLevel: invite.fromUser?.level || invite.fromUserLevel,\r\n      message: invite.message,\r\n      receivedAt: Date.now(),\r\n      expiresAt: Date.now() + (5 * 60 * 1000) // 5 минут на ответ\r\n    };\r\n\r\n    setIncomingInvites(prev => [...prev, newInvite]);\r\n    \r\n    // Показываем уведомление\r\n    if (webApp?.showAlert) {\r\n      webApp.showAlert(`🎮 Новое приглашение на дуэль от ${newInvite.fromUserName}!`);\r\n    }\r\n    \r\n    // Вибрация\r\n    hapticManager.heavy();\r\n  };\r\n\r\n  const respondToInvite = async (invite: IncomingDuelInvite, accept: boolean) => {\r\n    setRespondingTo(invite.id);\r\n    hapticManager.medium();\r\n\r\n    try {\r\n      if (accept) {\r\n        // Принимаем приглашение\r\n        if (webApp?.sendData) {\r\n          const response = {\r\n            type: 'duel_response',\r\n            inviteId: invite.id,\r\n            accepted: true,\r\n            fromUserId: user?.id,\r\n            fromUserName: user?.first_name,\r\n            fromUserLevel: player.level\r\n          };\r\n          \r\n          webApp.sendData(JSON.stringify(response));\r\n        }\r\n\r\n        // Показываем подтверждение\r\n        if (webApp?.showAlert) {\r\n          webApp.showAlert(`Дуэль принята! Подготовка к бою с ${invite.fromUserName}...`);\r\n        }\r\n\r\n        // Удаляем приглашение из списка\r\n        setIncomingInvites(prev => prev.filter(inv => inv.id !== invite.id));\r\n        \r\n        // Запускаем режим дуэли\r\n        setTimeout(() => {\r\n          startMultiplayerMode('duel');\r\n        }, 2000);\r\n\r\n      } else {\r\n        // Отклоняем приглашение\r\n        if (webApp?.sendData) {\r\n          const response = {\r\n            type: 'duel_response',\r\n            inviteId: invite.id,\r\n            accepted: false,\r\n            fromUserId: user?.id\r\n          };\r\n          \r\n          webApp.sendData(JSON.stringify(response));\r\n        }\r\n\r\n        // Показываем уведомление\r\n        if (webApp?.showAlert) {\r\n          webApp.showAlert(`Приглашение от ${invite.fromUserName} отклонено.`);\r\n        }\r\n\r\n        // Удаляем приглашение из списка\r\n        setIncomingInvites(prev => prev.filter(inv => inv.id !== invite.id));\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Ошибка ответа на приглашение:', error);\r\n    } finally {\r\n      setRespondingTo(null);\r\n    }\r\n  };\r\n\r\n  // Автоматическое удаление истекших приглашений\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      const now = Date.now();\r\n      setIncomingInvites(prev => prev.filter(invite => invite.expiresAt > now));\r\n    }, 30000); // Проверяем каждые 30 секунд\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  if (incomingInvites.length === 0) {\r\n    return null; // Не показываем компонент если нет приглашений\r\n  }\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black/80 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\r\n      <motion.div\r\n        className=\"bg-gradient-to-br from-gray-900 to-black rounded-2xl p-6 max-w-md w-full border border-orange-400/30\"\r\n        initial={{ scale: 0.8, opacity: 0 }}\r\n        animate={{ scale: 1, opacity: 1 }}\r\n        exit={{ scale: 0.8, opacity: 0 }}\r\n      >\r\n        <div className=\"text-center mb-6\">\r\n          <div className=\"text-4xl mb-2\">⚔️</div>\r\n          <h2 className=\"text-2xl font-bold text-white mb-2\">Приглашение на дуэль!</h2>\r\n          <div className=\"text-orange-400 text-sm\">\r\n            {incomingInvites.length} активных приглашений\r\n          </div>\r\n        </div>\r\n\r\n        {incomingInvites.map((invite) => {\r\n          const timeLeft = Math.max(0, invite.expiresAt - Date.now());\r\n          const minutesLeft = Math.floor(timeLeft / 60000);\r\n          const secondsLeft = Math.floor((timeLeft % 60000) / 1000);\r\n\r\n          return (\r\n            <motion.div\r\n              key={invite.id}\r\n              className=\"bg-black/40 rounded-xl p-4 mb-4 border border-white/10\"\r\n              initial={{ x: -20, opacity: 0 }}\r\n              animate={{ x: 0, opacity: 1 }}\r\n            >\r\n              <div className=\"flex items-center justify-between mb-3\">\r\n                <div>\r\n                  <div className=\"text-white font-bold text-lg\">\r\n                    {invite.fromUserName}\r\n                  </div>\r\n                  <div className=\"text-gray-400 text-sm\">\r\n                    Уровень {invite.fromUserLevel}\r\n                  </div>\r\n                </div>\r\n                <div className=\"text-right\">\r\n                  <div className=\"text-orange-400 text-sm font-medium\">\r\n                    ⏰ {minutesLeft}:{secondsLeft.toString().padStart(2, '0')}\r\n                  </div>\r\n                  <div className=\"text-gray-500 text-xs\">до истечения</div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"text-gray-300 text-sm mb-4 bg-black/20 rounded-lg p-3\">\r\n                🎮 Дуэль на 60 секунд<br/>\r\n                🏆 Побеждает тот, кто наберет больше очков<br/>\r\n                ⚡ Удачи и осторожности!\r\n              </div>\r\n\r\n              <div className=\"flex space-x-3\">\r\n                <motion.button\r\n                  onClick={() => respondToInvite(invite, false)}\r\n                  disabled={respondingTo === invite.id}\r\n                  className=\"flex-1 bg-gray-600 hover:bg-gray-500 text-white py-3 px-4 rounded-xl font-medium transition-colors disabled:opacity-50\"\r\n                  whileHover={{ scale: 1.02 }}\r\n                  whileTap={{ scale: 0.98 }}\r\n                >\r\n                  {respondingTo === invite.id ? '...' : '❌ Отклонить'}\r\n                </motion.button>\r\n                \r\n                <motion.button\r\n                  onClick={() => respondToInvite(invite, true)}\r\n                  disabled={respondingTo === invite.id}\r\n                  className=\"flex-1 bg-gradient-to-r from-green-500 to-emerald-500 hover:from-green-400 hover:to-emerald-400 text-white py-3 px-4 rounded-xl font-medium transition-all disabled:opacity-50\"\r\n                  whileHover={{ scale: 1.02 }}\r\n                  whileTap={{ scale: 0.98 }}\r\n                >\r\n                  {respondingTo === invite.id ? '⏳ Принимаем...' : '✅ Принять'}\r\n                </motion.button>\r\n              </div>\r\n            </motion.div>\r\n          );\r\n        })}\r\n\r\n        <div className=\"text-center text-gray-400 text-xs mt-4\">\r\n          💡 Приглашения автоматически истекают через 5 минут\r\n        </div>\r\n      </motion.div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { LevelConfig } from '../utils/levelSystem';\r\nimport { getOutletImageByLevel } from '../utils/levelSystem';\r\nimport { hapticManager } from '../utils/hapticManager';\r\n\r\ninterface LevelUpNotificationProps {\r\n  isVisible: boolean;\r\n  newLevel: LevelConfig;\r\n  voltsReward: number;\r\n  onClose: () => void;\r\n}\r\n\r\nexport const LevelUpNotification: React.FC<LevelUpNotificationProps> = ({\r\n  isVisible,\r\n  newLevel,\r\n  voltsReward,\r\n  onClose\r\n}) => {\r\n  // Добавляем вибрацию при появлении уведомления\r\n  useEffect(() => {\r\n    if (isVisible) {\r\n      hapticManager.levelUp();\r\n    }\r\n  }, [isVisible]);\r\n  \r\n  // Check if outlet image changed with this level\r\n  if (!newLevel || !newLevel.level) {\r\n    if (isVisible) {\r\n      console.warn('LevelUpNotification: newLevel is invalid', newLevel);\r\n    }\r\n    return null;\r\n  }\r\n  \r\n  const newOutletImage = getOutletImageByLevel(newLevel.level);\r\n  const previousOutletImage = getOutletImageByLevel(newLevel.level - 1);\r\n  const outletImageChanged = newOutletImage !== previousOutletImage;\r\n  return (\r\n    <AnimatePresence>\r\n      {isVisible && (\r\n        <motion.div\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          exit={{ opacity: 0 }}\r\n          className=\"fixed inset-0 bg-black/80 flex items-center justify-center z-50\"\r\n          onClick={onClose}\r\n        >\r\n          <motion.div\r\n            initial={{ scale: 0.5, opacity: 0, rotateY: -90 }}\r\n            animate={{ scale: 1, opacity: 1, rotateY: 0 }}\r\n            exit={{ scale: 0.5, opacity: 0, rotateY: 90 }}\r\n            transition={{ \r\n              type: \"spring\", \r\n              stiffness: 300, \r\n              damping: 20,\r\n              duration: 0.6 \r\n            }}\r\n            className=\"glass-effect p-8 max-w-md mx-4 text-center relative overflow-hidden\"\r\n            onClick={(e) => e.stopPropagation()}\r\n          >\r\n            {/* Background sparkles */}\r\n            <div className=\"absolute inset-0 pointer-events-none\">\r\n              {[...Array(20)].map((_, i) => (\r\n                <motion.div\r\n                  key={i}\r\n                  className=\"absolute w-1 h-1 bg-yellow-300 rounded-full\"\r\n                  style={{\r\n                    left: `${Math.random() * 100}%`,\r\n                    top: `${Math.random() * 100}%`,\r\n                  }}\r\n                  animate={{\r\n                    opacity: [0, 1, 0],\r\n                    scale: [0, 1, 0],\r\n                  }}\r\n                  transition={{\r\n                    duration: 2,\r\n                    repeat: Infinity,\r\n                    delay: Math.random() * 2,\r\n                  }}\r\n                />\r\n              ))}\r\n            </div>\r\n\r\n            {/* Level up content */}\r\n            <motion.div\r\n              animate={{\r\n                scale: [1, 1.1, 1],\r\n              }}\r\n              transition={{\r\n                duration: 0.6,\r\n                delay: 0.3,\r\n              }}\r\n            >\r\n              <div className=\"text-6xl mb-4\">🎉</div>\r\n              \r\n              <motion.h2 \r\n                className=\"text-3xl font-bold text-primary-orange mb-2\"\r\n                animate={{ \r\n                  textShadow: [\r\n                    \"0 0 10px rgba(255, 107, 53, 0.5)\",\r\n                    \"0 0 20px rgba(255, 107, 53, 0.8)\",\r\n                    \"0 0 10px rgba(255, 107, 53, 0.5)\"\r\n                  ]\r\n                }}\r\n                transition={{ duration: 1.5, repeat: Infinity }}\r\n              >\r\n                НОВЫЙ УРОВЕНЬ!\r\n              </motion.h2>\r\n              \r\n              <div className=\"mb-4\">\r\n                <div className=\"text-5xl font-bold text-accent-blue mb-2\">\r\n                  {newLevel.level}\r\n                </div>\r\n                <div className=\"text-xl text-yellow-300 font-semibold mb-1\">\r\n                  {newLevel.title}\r\n                </div>\r\n                <div className=\"text-sm text-gray-300 italic\">\r\n                  {newLevel.description}\r\n                </div>\r\n              </div>\r\n\r\n              <motion.div \r\n                className=\"glass-effect p-4 rounded-lg bg-gradient-to-r from-yellow-500/20 to-orange-500/20\"\r\n                animate={{ \r\n                  boxShadow: [\r\n                    \"0 0 20px rgba(255, 193, 7, 0.3)\",\r\n                    \"0 0 30px rgba(255, 193, 7, 0.6)\",\r\n                    \"0 0 20px rgba(255, 193, 7, 0.3)\"\r\n                  ]\r\n                }}\r\n                transition={{ duration: 2, repeat: Infinity }}\r\n              >\r\n                <div className=\"text-lg font-bold text-yellow-300 mb-1\">\r\n                  Награда за уровень:\r\n                </div>\r\n                <div className=\"text-2xl font-bold text-white\">\r\n                  +{voltsReward}⚡ Вольт\r\n                </div>\r\n                \r\n                {/* Show outlet upgrade notification */}\r\n                {outletImageChanged && (\r\n                  <div className=\"mt-3 pt-3 border-t border-yellow-400/30\">\r\n                    <div className=\"text-sm font-bold text-blue-300 mb-2\">\r\n                      🎨 Новое изображение розетки!\r\n                    </div>\r\n                    <div className=\"flex items-center justify-center space-x-4\">\r\n                      <div className=\"text-center\">\r\n                        <div className=\"text-xs text-gray-400\">Было:</div>\r\n                        <img \r\n                          src={previousOutletImage} \r\n                          alt=\"Предыдущая розетка\"\r\n                          className=\"w-8 h-8 rounded border border-gray-600\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"text-yellow-400\">→</div>\r\n                      <div className=\"text-center\">\r\n                        <div className=\"text-xs text-gray-400\">Стало:</div>\r\n                        <img \r\n                          src={newOutletImage} \r\n                          alt=\"Новая розетка\"\r\n                          className=\"w-8 h-8 rounded border border-blue-400\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </motion.div>\r\n            </motion.div>\r\n\r\n            {/* Close button */}\r\n            <motion.button\r\n              onClick={onClose}\r\n              className=\"mt-6 px-6 py-3 bg-primary-orange hover:bg-primary-orange/80 text-white font-bold rounded-lg transition-colors\"\r\n              whileHover={{ scale: 1.05 }}\r\n              whileTap={{ scale: 0.95 }}\r\n            >\r\n              Продолжить\r\n            </motion.button>\r\n\r\n            {/* Confetti effect */}\r\n            <div className=\"absolute inset-0 pointer-events-none overflow-hidden\">\r\n              {[...Array(15)].map((_, i) => (\r\n                <motion.div\r\n                  key={`confetti-${i}`}\r\n                  className=\"absolute w-2 h-2 rounded-full\"\r\n                  style={{\r\n                    backgroundColor: ['#FFD700', '#FF6B35', '#00D4FF', '#E8FF00', '#8A2BE2'][i % 5],\r\n                    left: `${50 + (Math.random() - 0.5) * 60}%`,\r\n                    top: '20%',\r\n                  }}\r\n                  animate={{\r\n                    y: ['0vh', '80vh'],\r\n                    x: [(Math.random() - 0.5) * 200, (Math.random() - 0.5) * 400],\r\n                    rotate: [0, 360],\r\n                    opacity: [1, 0],\r\n                  }}\r\n                  transition={{\r\n                    duration: 3,\r\n                    delay: Math.random() * 0.5,\r\n                    ease: \"easeOut\",\r\n                  }}\r\n                />\r\n              ))}\r\n            </div>\r\n          </motion.div>\r\n        </motion.div>\r\n      )}\r\n    </AnimatePresence>\r\n  );\r\n};\r\n","import { useEffect } from 'react';\r\nimport { useGameStore } from './store/gameStore';\r\nimport { MainMenu } from './components/MainMenu';\r\nimport { GameScreen } from './components/GameScreen';\r\nimport { MultiplayerScreen } from './components/MultiplayerScreen';\r\nimport { DuelScreen } from './components/DuelScreen';\r\nimport { DuelInviteScreen } from './components/DuelInviteScreen';\r\nimport { DuelInviteReceiver } from './components/DuelInviteReceiver';\r\nimport { LevelUpNotification } from './components/LevelUpNotification';\r\nimport { TelegramProvider } from './components/TelegramProvider';\r\n\r\nfunction App() {\r\n  const { gameState, levelUpNotification, hideLevelUpNotification } = useGameStore();\r\n\r\n  useEffect(() => {\r\n    // Initialize Telegram WebApp\r\n    if (typeof window !== 'undefined' && window.Telegram?.WebApp) {\r\n      const webApp = window.Telegram.WebApp;\r\n      \r\n      // Основная инициализация\r\n      webApp.ready();\r\n      webApp.expand();\r\n      \r\n      // Настройка темы приложения\r\n      webApp.setHeaderColor('#FF6B35'); // Оранжевый цвет TigerRozetka\r\n      webApp.setBackgroundColor('#1A1A1A'); // Темный фон\r\n      \r\n      // Включение подтверждения закрытия\r\n      webApp.enableClosingConfirmation();\r\n      \r\n      // Настройка главной кнопки (опционально)\r\n      if (webApp.MainButton) {\r\n        webApp.MainButton.setText('🎮 Играть');\r\n        webApp.MainButton.color = '#FF6B35';\r\n        webApp.MainButton.textColor = '#FFFFFF';\r\n      }\r\n      \r\n      // Логирование для отладки\r\n      console.log('Telegram WebApp initialized:', {\r\n        platform: webApp.platform,\r\n        version: webApp.version,\r\n        colorScheme: webApp.colorScheme,\r\n        user: webApp.initDataUnsafe?.user\r\n      });\r\n    } else {\r\n      console.log('Running outside Telegram environment');\r\n    }\r\n  }, []);\r\n\r\n  console.log('App rendering, mode:', gameState.mode);\r\n\r\n  return (\r\n    <TelegramProvider>\r\n      <div className=\"App\">\r\n        {gameState.mode === 'menu' && <MainMenu />}\r\n        {gameState.mode === 'single' && <GameScreen />}\r\n        {gameState.mode === 'multiplayer' && <MultiplayerScreen />}\r\n        {gameState.mode === 'duel-invite' && <DuelInviteScreen />}\r\n        {gameState.mode === 'duel' && <DuelScreen />}\r\n        \r\n        {/* Глобальный компонент для получения приглашений */}\r\n        <DuelInviteReceiver />\r\n        \r\n        {/* Level Up Notification - Global */}\r\n        {levelUpNotification.level && (\r\n          <LevelUpNotification\r\n            isVisible={levelUpNotification.isVisible}\r\n            newLevel={levelUpNotification.level}\r\n            voltsReward={levelUpNotification.voltsReward || 0}\r\n            onClose={hideLevelUpNotification}\r\n          />\r\n        )}\r\n      </div>\r\n    </TelegramProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App.tsx';\r\nimport './index.css';\r\n\r\n// Инициализация Telegram Mini App\r\n// Расширяем WebApp до полного экрана\r\nif (typeof window !== 'undefined' && window.Telegram?.WebApp) {\r\n  const tg = window.Telegram.WebApp;\r\n  \r\n  // Основная настройка\r\n  tg.ready();\r\n  tg.expand();\r\n  \r\n  // Настройка цветовой темы\r\n  tg.setHeaderColor('#000000');\r\n  tg.setBackgroundColor('#000000');\r\n  \r\n  // Отключаем кнопку \"Назад\" (будем управлять навигацией сами)\r\n  tg.BackButton.hide();\r\n  \r\n  // Включаем тактильные уведомления если доступны\r\n  if (tg.HapticFeedback) {\r\n    tg.HapticFeedback.selectionChanged();\r\n  }\r\n  \r\n  console.log('Telegram WebApp initialized:', {\r\n    version: tg.version,\r\n    platform: tg.platform,\r\n    colorScheme: tg.colorScheme,\r\n    user: tg.initDataUnsafe?.user\r\n  });\r\n}\r\n\r\nReactDOM.createRoot(document.getElementById('root')!).render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n);\r\n"],"names":["m","require$$0","client","createStoreImpl","createState","state","listeners","setState","partial","replace","nextState","previousState","listener","getState","api","initialState","__vite_import_meta_env__","createStore","React","is","x","y","objectIs","useState","useEffect","useLayoutEffect","useDebugValue","useSyncExternalStore$2","subscribe","getSnapshot","value","_useState","inst","forceUpdate","checkIfSnapshotChanged","latestGetSnapshot","nextValue","useSyncExternalStore$1","shim","useSyncExternalStoreShim_production","shimModule","require$$1","useSyncExternalStore","useRef","useMemo","withSelector_production","getServerSnapshot","selector","isEqual","instRef","memoizedSelector","nextSnapshot","hasMemo","memoizedSnapshot","currentSelection","memoizedSelection","nextSelection","maybeGetServerSnapshot","withSelectorModule","ReactExports","useSyncExternalStoreWithSelector","useSyncExternalStoreExports","didWarnAboutEqualityFn","identity","arg","useStore","equalityFn","slice","createImpl","useBoundStore","create","LEVEL_CONFIGS","calculateLevel","totalExperience","currentLevel","i","getExperienceToNextLevel","nextLevelIndex","config","nextLevel","getLevelProgress","current","required","EXPERIENCE_REWARDS","getOutletImageByLevel","level","basePath","API_BASE_URL","ApiClient","__publicField","_a","webApp","_b","initData","data","error","endpoint","options","headers","response","scoreData","type","limit","token","apiClient","defaultGameState","defaultPlayer","defaultSingleMode","defaultSounds","defaultAchievements","useGameStore","set","get","difficulty","mode","gameMode","now","timeSinceLastClick","currentRisk","dangerLevel","warningSignsActive","newScore","newVolts","isSuccess","newStreak","newStreakCount","experienceGained","newSuccessfulClicks","newShockedClicks","totalAttempts","newLuckCoefficient","addExperience","unlockAchievement","volts","damage","severity","duration","luckHideDuration","voltsDrained","shockImpact","achievementId","achievement","a","stats","amount","newExperience","oldLevel","newLevel","showLevelUpNotification","correctLevel","voltsReward","successfulClicks","shouldRestoreLuckIndicator","aiUpdateInterval","currentState","interval","baseInterval","modifier","luckCoeff","min","max","nextDischargeTime","dischargeWarningTime","ai","energyDrain","newEnergy","equipmentWear","newEquipment","avgEquipment","newEfficiency","newMood","canWork","damageType","isPlayerAttack","message","playerAttackMessages","equipmentTypes","randomEquipment","equipmentDamageMessages","repairType","repairMessages","messages","moodMessages","gameData","getDifficultyLevel","serverData","errorMessage","HapticManager","enabled","streakCount","isWinner","indicator","style","pattern","delay","vibrateDuration","pauseDuration","hapticManager","ScoreBreakdown","onClose","player","singleMode","gameState","jsx","motion","jsxs","e","LevelDisplay","getCurrentLevelInfo","progressInfo","progressPercent","currentOutletImage","nextOutletImage","outletWillChange","HapticSettings","isVisible","isEnabled","setIsEnabled","testingType","setTestingType","savedEnabled","handleToggleEnabled","newValue","testHaptic","action","TelegramContext","createContext","useTelegram","useContext","TelegramProvider","children","setWebApp","user","setUser","isInTelegram","setIsInTelegram","platform","setPlatform","colorScheme","setColorScheme","tgWebApp","_c","contextValue","TelegramUserInfo","useGameApi","submitState","setSubmitState","statsState","setStatsState","leaderboardState","setLeaderboardState","submitScore","useCallback","getUserStats","getLeaderboard","refillEnergy","useOfflineMode","isOnline","setIsOnline","handleOnline","handleOffline","MainMenu","startSingleMode","startMultiplayerMode","loadStatsFromServer","isAuthenticated","showScoreBreakdown","setShowScoreBreakdown","showHapticSettings","setShowHapticSettings","isLoadingStats","setIsLoadingStats","result","handleQuickLevelUp","handleStartGame","SoundManager","name","url","arrayBuffer","audioBuffer","volume","buffer","source","gainNode","intensity","frequency","bufferSize","output","t","envelope","noise","oscillation","lowFreq","highFreq","audio","soundManager","ScorePopup","score","reason","position","experience","getColorClass","getIcon","AnimatePresence","ElectricSparks","isActive","onComplete","sparks","setSparks","generateSparks","sparkCount","colors","newSparks","spark","_","startX","startY","segments","path","currentX","currentY","j","SimpleVideoPlayer","videoRef","video","logVideoState","handleLoadStart","handleCanPlay","handleError","handleEnded","useOutletImageAnimation","currentImage","setCurrentImage","isAnimating","setIsAnimating","newImage","TigerOutlet","className","onShock","clickOutlet","updateScore","triggerShock","isPressed","setIsPressed","glowIntensity","setGlowIntensity","isElectricShockActive","setIsElectricShockActive","showShockVideo","setShowShockVideo","scorePopup","setScorePopup","showScorePopup","prev","handleShockVideoComplete","createSparks","s","handleClick","penaltyData","isShocked","penaltyMessage","basePenalty","riskPenalty","finalPenalty","basePoints","riskMultiplier","streakBonus","totalPoints","CounterAttackButton","disabled","aiElectrician","damageAIElectrician","isAttacking","setIsAttacking","cooldown","setCooldown","showEffect","setShowEffect","attackCost","canAttack","handleCounterAttack","cooldownInterval","ConnectionStatus","status","GameHUD","repairAIElectrician","val","ScreenShake","shakeAmount","timer","GameScreen","endGame","submitGameToServer","gameTime","setGameTime","showGameOver","setShowGameOver","isSavingToServer","setIsSavingToServer","isScreenShaking","setIsScreenShaking","handleShockEffect","handleEndGame","gameStore","formatTime","seconds","mins","secs","Fragment","MultiplayerScreen","handleBackToMenu","useDuelConnection","isConnected","setIsConnected","currentRoom","setCurrentRoom","opponent","setOpponent","setMessages","connectionRef","messageQueueRef","aiIntervalRef","lastAiActionRef","connect","disconnect","findDuel","resolve","room","botOpponent","sendMessage","fullMessage","setReady","sendPlayerAction","points","sendPlayerShocked","leaveDuel","DuelScreen","connectedOpponent","duelState","setDuelState","playerState","setPlayerState","countdownTimer","setCountdownTimer","gameTimer","setGameTimer","lastMessage","winner","handlePlayerReady","handlePlayerClick","getStatusText","getConnectionStatus","DuelInviteScreen","goToMenu","contacts","setContacts","pendingInvites","setPendingInvites","selectedContact","setSelectedContact","inviteStatus","setInviteStatus","isLoading","setIsLoading","loadRealPlayers","userId","sendDuelInvite","contact","invite","handleContactSelect","handleSendInvite","getContactDisplayName","fullName","c","timeLeft","minutesLeft","DuelInviteReceiver","incomingInvites","setIncomingInvites","respondingTo","setRespondingTo","urlParams","inviteId","fetchDuelInfo","duelId","duelInfo","realInvite","handleIncomingInvite","fallbackInvite","newInvite","respondToInvite","accept","inv","secondsLeft","LevelUpNotification","newOutletImage","previousOutletImage","outletImageChanged","App","levelUpNotification","hideLevelUpNotification","tg","ReactDOM"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6]}