{"version":3,"file":"flowGraphBranchBlock-peq7SHeE.js","sources":["../../node_modules/@babylonjs/core/FlowGraph/Blocks/Execution/ControlFlow/flowGraphBranchBlock.js"],"sourcesContent":["import { RichTypeBoolean } from \"../../../flowGraphRichTypes.js\";\nimport { FlowGraphExecutionBlock } from \"../../../flowGraphExecutionBlock.js\";\nimport { RegisterClass } from \"../../../../Misc/typeStore.js\";\n/**\n * A block that evaluates a condition and activates one of two branches.\n */\nexport class FlowGraphBranchBlock extends FlowGraphExecutionBlock {\n    constructor(config) {\n        super(config);\n        this.condition = this.registerDataInput(\"condition\", RichTypeBoolean);\n        this.onTrue = this._registerSignalOutput(\"onTrue\");\n        this.onFalse = this._registerSignalOutput(\"onFalse\");\n    }\n    _execute(context) {\n        if (this.condition.getValue(context)) {\n            this.onTrue._activateSignal(context);\n        }\n        else {\n            this.onFalse._activateSignal(context);\n        }\n    }\n    /**\n     * @returns class name of the block.\n     */\n    getClassName() {\n        return \"FlowGraphBranchBlock\" /* FlowGraphBlockNames.Branch */;\n    }\n}\nRegisterClass(\"FlowGraphBranchBlock\" /* FlowGraphBlockNames.Branch */, FlowGraphBranchBlock);\n//# sourceMappingURL=flowGraphBranchBlock.js.map"],"names":["FlowGraphBranchBlock","FlowGraphExecutionBlock","config","RichTypeBoolean","context","RegisterClass"],"mappings":"2JAMO,MAAMA,UAA6BC,CAAwB,CAC9D,YAAYC,EAAQ,CAChB,MAAMA,CAAM,EACZ,KAAK,UAAY,KAAK,kBAAkB,YAAaC,CAAe,EACpE,KAAK,OAAS,KAAK,sBAAsB,QAAQ,EACjD,KAAK,QAAU,KAAK,sBAAsB,SAAS,CACvD,CACA,SAASC,EAAS,CACV,KAAK,UAAU,SAASA,CAAO,EAC/B,KAAK,OAAO,gBAAgBA,CAAO,EAGnC,KAAK,QAAQ,gBAAgBA,CAAO,CAE5C,CAIA,cAAe,CACX,MAAO,sBACX,CACJ,CACAC,EAAc,uBAAyDL,CAAoB","x_google_ignoreList":[0]}