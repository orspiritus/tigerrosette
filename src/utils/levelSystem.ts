// Level System Configuration
export interface LevelConfig {
  level: number;
  requiredExperience: number;
  voltsReward: number;
  title: string;
  description: string;
}

// Experience required for each level (cumulative) - Extremely balanced progression
export const LEVEL_CONFIGS: LevelConfig[] = [
  { level: 1, requiredExperience: 0, voltsReward: 0, title: "–ù–æ–≤–∏—á–æ–∫", description: "–ü–µ—Ä–≤—ã–µ —à–∞–≥–∏ —Å —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ–º" },
  { level: 2, requiredExperience: 5000, voltsReward: 50, title: "–£—á–µ–Ω–∏–∫", description: "–û—Å–≤–∞–∏–≤–∞–µ—Ç–µ –æ—Å–Ω–æ–≤—ã" },
  { level: 3, requiredExperience: 15000, voltsReward: 75, title: "–ü—Ä–∞–∫—Ç–∏–∫–∞–Ω—Ç", description: "‚ö†Ô∏è –û–ø–∞—Å–Ω–æ! –¢–µ–ø–µ—Ä—å —É–¥–∞—Ä —Ç–æ–∫–æ–º –æ—Ç–Ω–∏–º–∞–µ—Ç –æ—á–∫–∏" },
  { level: 4, requiredExperience: 35000, voltsReward: 100, title: "–õ—é–±–∏—Ç–µ–ª—å", description: "üî• –ö—Ä–∏—Ç–∏—á–Ω–æ! –ù–∞–ø—Ä—è–∂–µ–Ω–∏–µ –æ—Ç–Ω–∏–º–∞–µ—Ç—Å—è –æ—Ç –æ—á–∫–æ–≤" },
  { level: 5, requiredExperience: 70000, voltsReward: 150, title: "–≠–Ω—Ç—É–∑–∏–∞—Å—Ç", description: "–ü—Ä–æ—è–≤–ª—è–µ—Ç–µ —Å–º–µ–ª–æ—Å—Ç—å –≤ –æ–ø–∞—Å–Ω–æ–π –∏–≥—Ä–µ" },
  { level: 6, requiredExperience: 125000, voltsReward: 200, title: "–°–º–µ–ª—å—á–∞–∫", description: "–ù–µ –±–æ–∏—Ç–µ—Å—å —Ä–∏—Å–∫–æ–≤–∞—Ç—å" },
  { level: 7, requiredExperience: 200000, voltsReward: 250, title: "–•—Ä–∞–±—Ä–µ—Ü", description: "–ò–¥–µ—Ç–µ –Ω–∞ –æ–ø—Ä–∞–≤–¥–∞–Ω–Ω—ã–π —Ä–∏—Å–∫" },
  { level: 8, requiredExperience: 300000, voltsReward: 300, title: "–û—Ç–≤–∞–∂–Ω—ã–π", description: "–ü–æ–∫–æ—Ä—è–µ—Ç–µ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏" },
  { level: 9, requiredExperience: 450000, voltsReward: 400, title: "–ë–µ–∑—Ä–∞—Å—Å—É–¥–Ω—ã–π", description: "–ò–≥—Ä–∞–µ—Ç–µ —Å –æ–ø–∞—Å–Ω–æ—Å—Ç—å—é" },
  { level: 10, requiredExperience: 650000, voltsReward: 500, title: "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª", description: "–ú–∞—Å—Ç–µ—Ä—Å–∫–∏ –≤–ª–∞–¥–µ–µ—Ç–µ —Ä–∏—Å–∫–æ–º" },
  { level: 11, requiredExperience: 900000, voltsReward: 600, title: "–≠–∫—Å–ø–µ—Ä—Ç", description: "–ó–Ω–∞–µ—Ç–µ –≤—Å–µ —Ç–æ–Ω–∫–æ—Å—Ç–∏" },
  { level: 12, requiredExperience: 1200000, voltsReward: 750, title: "–ú–∞—Å—Ç–µ—Ä", description: "–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–∏—Ç–µ –æ–∂–∏–¥–∞–Ω–∏—è" },
  { level: 13, requiredExperience: 1600000, voltsReward: 900, title: "–í–∏—Ä—Ç—É–æ–∑", description: "–ò–≥—Ä–∞–µ—Ç–µ –∫–∞–∫ —Ö—É–¥–æ–∂–Ω–∏–∫" },
  { level: 14, requiredExperience: 2100000, voltsReward: 1100, title: "–ì—É—Ä—É", description: "–î–æ—Å—Ç–∏–≥–ª–∏ –ø—Ä–æ—Å–≤–µ—Ç–ª–µ–Ω–∏—è" },
  { level: 15, requiredExperience: 2700000, voltsReward: 1300, title: "–°–µ–Ω—Å–µ–π", description: "–£—á–∏—Ç–µ –¥—Ä—É–≥–∏—Ö" },
  { level: 16, requiredExperience: 3500000, voltsReward: 1500, title: "–õ–µ–≥–µ–Ω–¥–∞", description: "–û –≤–∞—Å —Å–ª–∞–≥–∞—é—Ç –ª–µ–≥–µ–Ω–¥—ã" },
  { level: 17, requiredExperience: 4500000, voltsReward: 1750, title: "–ú–∏—Ñ", description: "–ù–µ–¥–æ—Å—Ç–∏–∂–∏–º—ã–π –∏–¥–µ–∞–ª" },
  { level: 18, requiredExperience: 5800000, voltsReward: 2000, title: "–¢–∏—Ç–∞–Ω", description: "–°–≤–µ—Ä—Ö—á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏" },
  { level: 19, requiredExperience: 7500000, voltsReward: 2300, title: "–ë–æ–≥ –≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–∞", description: "–ü–æ–≤–µ–ª–µ–≤–∞–µ—Ç–µ –º–æ–ª–Ω–∏—è–º–∏" },
  { level: 20, requiredExperience: 10000000, voltsReward: 2500, title: "–ó–µ–≤—Å", description: "–ê–±—Å–æ–ª—é—Ç–Ω–∞—è –≤–ª–∞—Å—Ç—å –Ω–∞–¥ —Ç–æ–∫–æ–º" },
];

// Calculate level from total experience
export function calculateLevel(totalExperience: number): LevelConfig {
  let currentLevel = LEVEL_CONFIGS[0];
  
  for (let i = LEVEL_CONFIGS.length - 1; i >= 0; i--) {
    if (totalExperience >= LEVEL_CONFIGS[i].requiredExperience) {
      currentLevel = LEVEL_CONFIGS[i];
      break;
    }
  }
  
  return currentLevel;
}

// Calculate experience needed for next level
export function getExperienceToNextLevel(totalExperience: number): {
  current: number;
  required: number;
  remaining: number;
  nextLevel: LevelConfig | null;
} {
  const currentLevel = calculateLevel(totalExperience);
  const nextLevelIndex = LEVEL_CONFIGS.findIndex(config => config.level === currentLevel.level) + 1;
  
  if (nextLevelIndex >= LEVEL_CONFIGS.length) {
    return {
      current: totalExperience,
      required: totalExperience,
      remaining: 0,
      nextLevel: null
    };
  }
  
  const nextLevel = LEVEL_CONFIGS[nextLevelIndex];
  
  return {
    current: totalExperience - currentLevel.requiredExperience,
    required: nextLevel.requiredExperience - currentLevel.requiredExperience,
    remaining: nextLevel.requiredExperience - totalExperience,
    nextLevel
  };
}

// Get level progress percentage
export function getLevelProgress(totalExperience: number): number {
  const { current, required } = getExperienceToNextLevel(totalExperience);
  if (required === 0) return 100;
  return Math.min(100, (current / required) * 100);
}

// Experience rewards for different actions - Rebalanced for better progression
export const EXPERIENCE_REWARDS = {
  SAFE_CLICK: 3,        // –£–≤–µ–ª–∏—á–µ–Ω–æ —Å 1 –¥–æ 3
  RISKY_CLICK: 8,       // –£–≤–µ–ª–∏—á–µ–Ω–æ —Å 2 –¥–æ 8
  EXTREME_CLICK: 15,    // –£–≤–µ–ª–∏—á–µ–Ω–æ —Å 3 –¥–æ 15
  STREAK_5: 25,         // –£–≤–µ–ª–∏—á–µ–Ω–æ —Å 5 –¥–æ 25
  STREAK_10: 60,        // –£–≤–µ–ª–∏—á–µ–Ω–æ —Å 12 –¥–æ 60
  STREAK_25: 150,       // –£–≤–µ–ª–∏—á–µ–Ω–æ —Å 30 –¥–æ 150
  STREAK_50: 300,       // –£–≤–µ–ª–∏—á–µ–Ω–æ —Å 60 –¥–æ 300
  SURVIVAL_MINUTE: 10,  // –£–≤–µ–ª–∏—á–µ–Ω–æ —Å 2 –¥–æ 10
  SHOCK_SURVIVAL: 5,    // –£–≤–µ–ª–∏—á–µ–Ω–æ —Å 1 –¥–æ 5
  ACHIEVEMENT: 50,      // –£–≤–µ–ª–∏—á–µ–Ω–æ —Å 10 –¥–æ 50
  DAILY_BONUS: 100      // –£–≤–µ–ª–∏—á–µ–Ω–æ —Å 20 –¥–æ 100
} as const;

// Get outlet image based on player level - Adjusted for new level system
export function getOutletImageByLevel(level: number): string {
  // We have 4 different outlet images (tigrrozetka_1.png to tigrrozetka_4.png)
  // Cycle through them based on level ranges
  
  const basePath = '/tigerrosette/';
  
  if (level <= 3) {
    return `${basePath}Media/Pictures/tigrrozetka_1.png`;
  } else if (level <= 7) {
    return `${basePath}Media/Pictures/tigrrozetka_2.png`;
  } else if (level <= 12) {
    return `${basePath}Media/Pictures/tigrrozetka_3.png`;
  } else {
    return `${basePath}Media/Pictures/tigrrozetka_4.png`;
  }
}
